using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.Infrastructure.MappingViews;
using System.Linq;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Net;
using System.Web;
using System.Web.Mvc;
using HtmlAgilityPack;
using MVC_SYSTEM.ModelsCorporate;
using MVC_SYSTEM.Class;
using MVC_SYSTEM.log;
using MVC_SYSTEM.ViewingModels;
using MVC_SYSTEM.App_LocalResources;
using MVC_SYSTEM.Models;
using Microsoft.Ajax.Utilities;
using MVC_SYSTEM.ModelsCustom;
using Itenso.TimePeriod;
using MVC_SYSTEM.ModelsEstate;
using static MVC_SYSTEM.Class.GlobalFunction;
using tbl_CutiPeruntukan = MVC_SYSTEM.ModelsEstate.tbl_CutiPeruntukan;
using tbl_Ladang = MVC_SYSTEM.ModelsCorporate.tbl_Ladang;
using tbl_Pkjmast = MVC_SYSTEM.ModelsCorporate.tbl_Pkjmast;
using vw_CutiUmumLdg = MVC_SYSTEM.ModelsCorporate.vw_CutiUmumLdg;
using System.Data.Entity.Validation;
using System.Globalization;
using MVC_SYSTEM.Attributes;

//using OfficeOpenXml;

namespace MVC_SYSTEM.Controllers
{
    //Check_Balik
    [AccessDeniedAuthorizeAttribute(Roles = "Super Power Admin,Super Admin,Admin 1,Admin 2,Admin 3")]
    public class MaintenanceController : Controller
    {
        private MVC_SYSTEM_ModelsCorporate db = new MVC_SYSTEM_ModelsCorporate();
        private GetIdentity GetIdentity = new GetIdentity();
        private GetConfig GetConfig = new GetConfig();
        private GetNSWL GetNSWL = new GetNSWL();
        private Connection Connection = new Connection();
        private ChangeTimeZone timezone = new ChangeTimeZone();
        errorlog geterror = new errorlog();
        private GlobalFunction GlobalFunction = new GlobalFunction();
        GetWilayah getwilyah = new GetWilayah();

        // GET: Maintenance
        public ActionResult Index()
        {
            ViewBag.Maintenance = "class = active";
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            List<SelectListItem> sublist = new List<SelectListItem>();
            ViewBag.MaintenanceSubList = sublist;
            ViewBag.Maintenance = "class = active";
            ViewBag.MaintenanceList = new SelectList(db.tblMenuLists.Where(x => x.fld_Flag == "maintenance" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).Select(s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_Desc }), "Value", "Text").ToList();
            db.Dispose();
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Index(string MaintenanceList, string MaintenanceSubList)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (MaintenanceSubList != null)
            {
                return RedirectToAction(MaintenanceSubList, "Maintenance");
            }
            else
            {
                int maintenancelist = int.Parse(MaintenanceList);
                var action = db.tblMenuLists.Where(x => x.fld_ID == maintenancelist && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).Select(s => s.fld_Val).FirstOrDefault();
                db.Dispose();
                return RedirectToAction(action, "Maintenance");
            }
        }

        public JsonResult GetSubList(int ListID)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var findsub = db.tblMenuLists.Where(x => x.fld_ID == ListID).Select(s => s.fld_Sub).FirstOrDefault();
            List<SelectListItem> sublist = new List<SelectListItem>();
            if (findsub != null)
            {
                sublist = new SelectList(db.tblMenuLists.Where(x => x.fld_Flag == findsub && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_ID).Select(s => new SelectListItem { Value = s.fld_Val, Text = s.fld_Desc }), "Value", "Text").ToList();
            }
            db.Dispose();
            return Json(sublist);
        }

        public ActionResult PayrateMaintenance()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";
            List<SelectListItem> menuailist = new List<SelectListItem>();
            menuailist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            menuailist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));
            ViewBag.MenuaiList = menuailist;
            return View();
        }

        public ActionResult PayrateDetail(string MenuaiList, int page = 1, string sort = "fld_HasilLower", string sortdir = "ASC")
        {
            ViewBag.Maintenance = "class = active";
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            var records = new PagedList<ViewingModels.tbl_UpahMenuai>();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = dbview.tbl_UpahMenuai.Where(x =>
                x.fld_Jadual == MenuaiList && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID);

            if (String.IsNullOrEmpty(MenuaiList) || MenuaiList == "0")
            {
                ViewBag.RowCount = 1;
            }

            else
            {
                records.Content = unitData
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();

                ViewBag.RowCount = 0;
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);

        }

        public ActionResult PayrateInsert()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> JnsJadual = new List<SelectListItem>();
            List<SelectListItem> Catitan = new List<SelectListItem>();

            JnsJadual = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            JnsJadual.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            Catitan.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));


            ViewBag.fld_Jadual = JnsJadual;
            ViewBag.fld_Catitan = Catitan;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateInsert(ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var checkdata = db.tbl_UpahMenuai.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false && x.fld_Jadual == tbl_UpahMenuai.fld_Jadual && x.fld_HasilLower == tbl_UpahMenuai.fld_HasilLower && x.fld_HasilUpper == tbl_UpahMenuai.fld_HasilUpper).FirstOrDefault();
            if (checkdata == null)
            {
                tbl_UpahMenuai.fld_Deleted = false;
                db.tbl_UpahMenuai.Add(tbl_UpahMenuai);
                db.SaveChanges();
                db.Dispose();
                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                return Json(new { success = true, msg = GlobalResCorp.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
            }
            else
            {
                return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
            }
        }

        public ActionResult PayrateUpdate(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("PayrateMaintenance");
            }
            ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_UpahMenuai == null)
            {
                return RedirectToAction("PayrateMaintenance");
            }
            List<SelectListItem> JnsJadual = new List<SelectListItem>();
            List<SelectListItem> Catitan = new List<SelectListItem>();

            JnsJadual = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Jadual).ToList();
            JnsJadual.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Catitan).ToList();
            Catitan.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_Jadual = JnsJadual;
            ViewBag.fld_Catitan = Catitan;
            db.Dispose();
            return PartialView(tbl_UpahMenuai);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateUpdate(ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai)
        {
            var getdata = db.tbl_UpahMenuai.Where(w => w.fld_ID == tbl_UpahMenuai.fld_ID).FirstOrDefault();

            getdata.fld_Kadar = tbl_UpahMenuai.fld_Kadar;
            getdata.fld_Catitan = tbl_UpahMenuai.fld_Catitan;

            db.Entry(getdata).State = EntityState.Modified;
            db.SaveChanges();
            db.Dispose();
            return Json(new { success = true, msg = GlobalResCorp.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
        }

        public ActionResult PayrateDelete(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (id == null)
            {
                return RedirectToAction("PayrateMaintenance");
            }
            ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();

            if (tbl_UpahMenuai == null)
            {
                return RedirectToAction("PayrateMaintenance");
            }

            List<SelectListItem> JnsJadual = new List<SelectListItem>();
            List<SelectListItem> Catitan = new List<SelectListItem>();

            JnsJadual = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jnsMenuai" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Jadual).ToList();
            JnsJadual.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahMenuai.fld_Catitan).ToList();
            Catitan.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_Jadual = JnsJadual;
            ViewBag.fld_Catitan = Catitan;
            db.Dispose();
            return PartialView(tbl_UpahMenuai);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateDelete(ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai)
        {
            errorlog geterror = new errorlog();
            try
            {

                bool status = true;

                //ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
                if (tbl_UpahMenuai == null)
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    var getdata = db.tbl_UpahMenuai.Where(x => x.fld_ID == tbl_UpahMenuai.fld_ID && x.fld_NegaraID == tbl_UpahMenuai.fld_NegaraID && x.fld_SyarikatID == tbl_UpahMenuai.fld_SyarikatID).FirstOrDefault();

                    var message = "";
                    if (getdata.fld_Deleted == false)
                    {
                        status = true;
                        message = GlobalResCorp.msgDelete2;
                    }

                    else
                    {
                        status = false;
                        message = GlobalResCorp.msgUndelete;
                    }

                    getdata.fld_Deleted = status;
                    db.Entry(getdata).State = EntityState.Modified;
                    //db.tbl_UpahMenuai.Remove(tbl_UpahMenuai);
                    db.SaveChanges();
                    db.Dispose();
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
            }
            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new { success = true, msg = GlobalResCorp.msgError, status = "danger", checkingdata = "1" });
            }
        }

        public ActionResult PayrateFullMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            //string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            List<SelectListItem> aktvtlist = new List<SelectListItem>();
            aktvtlist = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
            aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblAll, Value = "0" }));

            ViewBag.Maintenance = "class = active";
            ViewBag.AktvtList = aktvtlist;

            return View();
        }

        public ActionResult _PayrateFullMaintenance(string AktvtList = "", int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
        {
            //ViewBag.Maintenance = "class = active";
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //List<SelectListItem> aktvtlist = new List<SelectListItem>();
            //aktvtlist = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID==SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
            //aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_UpahAktiviti>();

            if (AktvtList != "0")
            {
                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID)
                       .OrderBy(sort + " " + sortdir)
                       .Skip((page - 1) * pageSize)
                       .Take(pageSize)
                       .ToList();

                records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID).Count();
                records.CurrentPage = page;
                records.PageSize = pageSize;
                //ViewBag.AktvtList = AktvtList;
                db.Dispose();
                dbview.Dispose();
            }
            else
            {
                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID)
                       .OrderBy(sort + " " + sortdir)
                       .Skip((page - 1) * pageSize)
                       .Take(pageSize)
                       .ToList();

                records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID).Count();
                records.CurrentPage = page;
                records.PageSize = pageSize;
                db.Dispose();
                dbview.Dispose();
            }

            //ViewBag.AktvtList = aktvtlist;
            ViewBag.Datacount = records.TotalRecords;
            return View(records);

        }

        //public ActionResult PayrateFullDetail(string AktvtList="", int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
        //{
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
        //    MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
        //    //int role = GetIdentity.RoleID(getuserid).Value;

        //    int pageSize = int.Parse(GetConfig.GetData("paging"));
        //    var records = new PagedList<ViewingModels.tbl_UpahAktiviti>();

        //    if (AktvtList != "0")
        //    {
        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID==SyarikatID && x.fld_NegaraID==NegaraID && x.fld_Deleted == false)
        //               .OrderBy(sort + " " + sortdir)
        //               .Skip((page - 1) * pageSize)
        //               .Take(pageSize)
        //               .ToList();

        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
        //        records.CurrentPage = page;
        //        records.PageSize = pageSize;
        //        //ViewBag.AktvtList = AktvtList;
        //        dbview.Dispose();
        //    }
        //    else
        //    {
        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
        //               .OrderBy(sort + " " + sortdir)
        //               .Skip((page - 1) * pageSize)
        //               .Take(pageSize)
        //               .ToList();

        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
        //        records.CurrentPage = page;
        //        records.PageSize = pageSize;
        //        dbview.Dispose();
        //    }
        //    ViewBag.Datacount = records.TotalRecords;
        //    return PartialView(records);
        //}

        public ActionResult PayrateFullInsert()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> JnsAktvt = new List<SelectListItem>();
            List<SelectListItem> unitlist = new List<SelectListItem>();
            List<SelectListItem> Flaglist = new List<SelectListItem>();
            JnsAktvt = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
            JnsAktvt.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));
            unitlist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            unitlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));
            Flaglist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            Flaglist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_DisabledFlag = Flaglist;
            ViewBag.fld_Unit = unitlist;
            ViewBag.fld_KodJenisAktvt = JnsAktvt;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateFullInsert(ModelsCorporate.tbl_UpahAktiviti UpahAktiviti)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {

                    UpahAktiviti.fld_KodAktvt = UpahAktiviti.fld_KodAktvt;
                    UpahAktiviti.fld_Desc = GetConfig.UppercaseFirst(UpahAktiviti.fld_Desc);
                    UpahAktiviti.fld_Unit = UpahAktiviti.fld_Unit.ToUpper();
                    UpahAktiviti.fld_Harga = UpahAktiviti.fld_Harga;
                    UpahAktiviti.fld_KodJenisAktvt = UpahAktiviti.fld_KodJenisAktvt;
                    UpahAktiviti.fld_DisabledFlag = UpahAktiviti.fld_DisabledFlag;
                   
                    //UpahAktiviti.
                    UpahAktiviti.fld_Deleted = false;
                    UpahAktiviti.fld_NegaraID = NegaraID;
                    UpahAktiviti.fld_SyarikatID = SyarikatID;

                    //added by kamalia 6/10/2021

                    UpahAktiviti.fld_WilayahID = WilayahID;
                    UpahAktiviti.fld_LadangID = LadangID;
                    if (UpahAktiviti.fld_DisabledFlag == 2)
                    {
                        UpahAktiviti.fld_Kategori = "A";
                        UpahAktiviti.fld_KdhByr = "A";
                    }
                    else
                    {
                        UpahAktiviti.fld_Kategori = "B";
                        UpahAktiviti.fld_KdhByr = "B";
                    }
                    //
                    db.tbl_UpahAktiviti.Add(UpahAktiviti);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "UpahMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PayrateFullMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();


        public ActionResult _PayrateFullUpdate(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> unitlist = new List<SelectListItem>();
            List<SelectListItem> Flaglist = new List<SelectListItem>();

            unitlist = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID)
                .OrderBy(o => o.fldOptConfID)
                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
                , "Value", "Text").ToList();

            Flaglist = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID)
                .OrderBy(o => o.fldOptConfID)
                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
                , "Value", "Text").ToList();

            //unitlist.Insert(0, (new SelectListItem { Text = GlobalResEstate.lblChoose, Value = "0" }));

            var PayData = db.tbl_UpahAktiviti.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_UpahAktivitiViewModel unitViewModel = new ModelsCorporate.tbl_UpahAktivitiViewModel();

            PropertyCopy.Copy(unitViewModel, PayData);

            ViewBag.fld_Select = Flaglist;
            ViewBag.fld_Selection = unitlist;
            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PayrateFullUpdate(ModelsCorporate.tbl_UpahAktivitiViewModel tbl_UpahAktiviti)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fld_Desc = tbl_UpahAktiviti.fld_Desc;
                    unitData.fld_Harga = tbl_UpahAktiviti.fld_Harga;
                    //added by kamalia 15/8/2021
                    unitData.fld_MaxProduktiviti = tbl_UpahAktiviti.fld_MaxProduktiviti;
                    unitData.fld_Unit = tbl_UpahAktiviti.fld_Unit;
                    unitData.fld_DisabledFlag = tbl_UpahAktiviti.fld_DisabledFlag;
                    //getdata.fld_Produktvt = tbl_UpahAktiviti.fld_Produktvt;

                    //db.Entry(unitData).State = EntityState.Modified;
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "UpahMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PayrateFullMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PayrateFullDelete(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsCorporate.tbl_UpahAktiviti Payrate = db.tbl_UpahAktiviti
                .Single(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

            return PartialView(Payrate);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateFullDelete(ModelsCorporate.tbl_UpahAktiviti tbl_UpahAktiviti)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "UpahMaintenanceDetails",
                    rootUrl = domain,
                    action = "_PayrateFullMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult KwspContributionMaintenance(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _KwspContributionMaintenance(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_JenisCaruman>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

            var kwspContributionData = db.tbl_JenisCaruman
                .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = kwspContributionData
                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = kwspContributionData
                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = kwspContributionData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = kwspContributionData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _KwspContributionMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var kwspConfigData = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                x.fldOptConfFlag1 == "kodCarumanKwsp" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fldDeleted == false);

            var getKwspContributionRunningNo = db.tbl_JenisCaruman
                .Where(x => x.fld_JenisCaruman == kwspConfigData.fldOptConfValue && x.fldNegaraID == NegaraID &&
                            x.fldSyarikatID == SyarikatID)
                .OrderByDescending(o => o.fld_JenisCarumanID)
                .Select(s => s.fld_KodCaruman)
                .FirstOrDefault();

            string kwspContributionCode = "";

            if (getKwspContributionRunningNo == null)
            {
                kwspContributionCode = kwspConfigData.fldOptConfFlag2 + "01";
            }

            else
            {
                int generateNewKwspCOntributionNo = Convert.ToInt32(getKwspContributionRunningNo.Substring(kwspConfigData.fldOptConfFlag2.Length)) + 1;
                kwspContributionCode = kwspConfigData.fldOptConfFlag2 + generateNewKwspCOntributionNo.ToString("00");
            }

            tbl_JenisCarumanKWSPViewModelCreate jenisCarumanKwspViewModelCreate = new tbl_JenisCarumanKWSPViewModelCreate();

            jenisCarumanKwspViewModelCreate.fld_JenisCaruman = kwspConfigData.fldOptConfValue;
            jenisCarumanKwspViewModelCreate.fld_KodCaruman = kwspContributionCode;

            return PartialView(jenisCarumanKwspViewModelCreate);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KwspContributionMaintenanceCreate(ModelsCorporate.tbl_JenisCarumanKWSPViewModelCreate jenisCarumanKwspViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    tbl_JenisCaruman jenisCaruman = new tbl_JenisCaruman();

                    PropertyCopy.Copy(jenisCaruman, jenisCarumanKwspViewModelCreate);

                    jenisCaruman.fld_Keterangan = GetConfig.UppercaseFirst(jenisCaruman.fld_Keterangan);
                    jenisCaruman.fldNegaraID = (int)NegaraID;
                    jenisCaruman.fldSyarikatID = (int)SyarikatID;
                    jenisCaruman.fld_Deleted = false;
                    jenisCaruman.fld_Default = false;

                    db.tbl_JenisCaruman.Add(jenisCaruman);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "kwspContributionMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KwspContributionMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KwspContributionMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var kwspContributionData = db.tbl_JenisCaruman
                .SingleOrDefault(x => x.fld_JenisCarumanID == id && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            tbl_JenisCarumanKWSPViewModelEdit jenisCarumanKwspViewModelEdit = new tbl_JenisCarumanKWSPViewModelEdit();

            PropertyCopy.Copy(jenisCarumanKwspViewModelEdit, kwspContributionData);

            return PartialView(jenisCarumanKwspViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KwspContributionMaintenanceEdit(ModelsCorporate.tbl_JenisCarumanKWSPViewModelEdit jenisCarumanKwspViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var kwspContributionData = db.tbl_JenisCaruman
                        .SingleOrDefault(x =>
                            x.fld_JenisCarumanID == jenisCarumanKwspViewModelEdit.fld_JenisCarumanID &&
                            x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

                    kwspContributionData.fld_Keterangan = GetConfig.UppercaseFirst(jenisCarumanKwspViewModelEdit.fld_Keterangan);
                    kwspContributionData.fld_UmurLower = jenisCarumanKwspViewModelEdit.fld_UmurLower;
                    kwspContributionData.fld_UmurUpper = jenisCarumanKwspViewModelEdit.fld_UmurUpper;
                    kwspContributionData.fld_PeratusCarumanPekerja = jenisCarumanKwspViewModelEdit.fld_PeratusCarumanPekerja;
                    kwspContributionData.fld_PeratusCarumanMajikanBawah5000 = jenisCarumanKwspViewModelEdit.fld_PeratusCarumanMajikanBawah5000;
                    kwspContributionData.fld_PeratusCarumanMajikanAtas5000 = jenisCarumanKwspViewModelEdit.fld_PeratusCarumanMajikanAtas5000;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "kwspContributionMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KwspContributionMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KwspContributionMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var kwspContributionData = db.tbl_JenisCaruman
                .SingleOrDefault(x =>
                    x.fld_JenisCarumanID == id &&
                    x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            return PartialView(kwspContributionData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KwspContributionMaintenanceDelete(ModelsCorporate.tbl_JenisCaruman jenisCaruman)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var kwspContributionData = db.tbl_JenisCaruman
                    .SingleOrDefault(x =>
                        x.fld_JenisCarumanID == jenisCaruman.fld_JenisCarumanID &&
                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (kwspContributionData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                kwspContributionData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "kwspContributionMaintenanceDetails",
                    rootUrl = domain,
                    action = "_KwspContributionMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult KwspTableMaintenance(int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

            List<SelectListItem> kwspList = new List<SelectListItem>();

            kwspList = new SelectList(db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == kwspCode && x.fld_Deleted == false && x.fldNegaraID == NegaraID &&
                                x.fldSyarikatID == SyarikatID)
                    .OrderBy(o => o.fld_KodCaruman)
                    .Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan })
                , "Value", "Text").ToList();

            kwspList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" }));

            ViewBag.KwspList = kwspList;

            return View();
        }

        public ActionResult _KwspTableMaintenance(string kwspList, int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Kwsp>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var message = "";
            if (String.IsNullOrEmpty(kwspList))
            {
                message = GlobalResCorp.msgNoIncentiveCategory;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            var kwspData = db.tbl_Kwsp
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

            records.Content = kwspData
                .Where(x => x.fld_KodCaruman.ToUpper().Contains(kwspList.ToUpper()))
                .OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = kwspData
                .Count(x => x.fld_KodCaruman.ToUpper().Contains(kwspList.ToUpper()));

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _KwspTableMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

            List<SelectListItem> carumanList = new List<SelectListItem>();

            carumanList = new SelectList(
                db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID &&
                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }),
                "Value", "Text").ToList();
            carumanList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.CarumanList = carumanList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KwspTableMaintenanceCreate(ModelsCorporate.tbl_KwspViewModelCreate kwspViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_Kwsp Kwsp = new ModelsCorporate.tbl_Kwsp();

                    PropertyCopy.Copy(Kwsp, kwspViewModelCreate);

                    Kwsp.fld_NegaraID = (int)NegaraID;
                    Kwsp.fld_SyarikatID = (int)SyarikatID;
                    Kwsp.fld_Deleted = false;

                    db.tbl_Kwsp.Add(Kwsp);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "kwspTableMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KwspTableMaintenance",
                        controller = "Maintenance",
                        paramName = "kwspList",
                        paramValue = kwspViewModelCreate.fld_KodCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KwspTableMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_KwspViewModelEdit kwspViewModelEdit = new tbl_KwspViewModelEdit();

            PropertyCopy.Copy(kwspViewModelEdit, kwspTableData);

            return PartialView(kwspViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KwspTableMaintenanceEdit(ModelsCorporate.tbl_KwspViewModelEdit kwspViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
                        x => x.fld_ID == kwspViewModelEdit.fld_ID && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    kwspTableData.fld_KdrLower = kwspViewModelEdit.fld_KdrLower;
                    kwspTableData.fld_KdrUpper = kwspViewModelEdit.fld_KdrUpper;
                    kwspTableData.fld_Pkj = kwspViewModelEdit.fld_Pkj;
                    kwspTableData.fld_Mjkn = kwspViewModelEdit.fld_Mjkn;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "kwspTableMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KwspTableMaintenance",
                        controller = "Maintenance",
                        paramName = "kwspList",
                        paramValue = kwspTableData.fld_KodCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KwspTableMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(kwspTableData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KwspTableMaintenanceDelete(ModelsCorporate.tbl_Kwsp kwsp)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var kwspTableData = db.tbl_Kwsp.SingleOrDefault(
                    x => x.fld_ID == kwsp.fld_ID && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (kwspTableData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                kwspTableData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "2",
                    div = "kwspTableMaintenanceDetails",
                    rootUrl = domain,
                    action = "_KwspTableMaintenance",
                    controller = "Maintenance",
                    paramName = "kwspList",
                    paramValue = kwspTableData.fld_KodCaruman
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult KwspContributionMaintenanceInUse(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _KwspContributionMaintenanceInUse(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_JenisCaruman>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

            var kwspContributionData = db.tbl_JenisCaruman
                .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = kwspContributionData
                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = kwspContributionData
                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = kwspContributionData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = kwspContributionData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _KwspContributionMaintenanceInUseEdit(List<int> carumanKwspID)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var kwspCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

                var kwspContributionData = db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == kwspCode && x.fldNegaraID == NegaraID &&
                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false);

                var warganegaraCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                    x.fldOptConfFlag1 == "krytnlist" && x.fldOptConfFlag3 == "1" && x.fld_NegaraID == NegaraID &&
                    x.fld_SyarikatID == SyarikatID).fldOptConfValue;

                foreach (var kwspContribution in kwspContributionData)
                {
                    kwspContribution.fld_Default = false;
                }

                if (carumanKwspID != null)
                {
                    //remove checkall value from carumanTambahanID list
                    carumanKwspID.Remove(0);

                    foreach (var id in carumanKwspID)
                    {
                        var selectedKwspContributionData = db.tbl_JenisCaruman.SingleOrDefault(x => x.fld_JenisCarumanID == id);

                        selectedKwspContributionData.fld_Default = true;
                    }
                }

                db.SaveChanges();

                var connectionData = db.tblConnections.Where(x =>
                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

                foreach (var connection in connectionData)
                {
                    var wilayahID = connection.wilayahID;
                    string hostEstate, catalogEstate, userEstate, passEstate = "";
                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate,
                        wilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection =
                        MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

                    var workerData = estateConnection.tbl_Pkjmast.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Kdaktf == "1");

                    var activeKwspContributionData = db.tbl_JenisCaruman.Where(x => x.fld_JenisCaruman == kwspCode &&
                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_Deleted == false &&
                        x.fld_Default == true);

                    foreach (var worker in workerData)
                    {
                        if (worker.fld_Kdrkyt == warganegaraCode)
                        {
                            DateDiff workerAge = new DateDiff(Convert.ToDateTime(worker.fld_Trlhr).AddDays(-1),
                               DateTime.Now);

                            foreach (var activeKwspContribution in activeKwspContributionData)
                            {
                                if (activeKwspContribution.fld_UmurLower <= workerAge.Years &&
                                    activeKwspContribution.fld_UmurUpper >= workerAge.Years)
                                {
                                    worker.fld_KodKWSP = activeKwspContribution.fld_KodCaruman;
                                }
                            }
                        }

                        else
                        {
                            worker.fld_KodKWSP = null;
                        }
                    }

                    estateConnection.SaveChanges();
                    estateConnection.Dispose();
                }

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "1"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult SocsoContributionMaintenance(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _SocsoContributionMaintenance(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_JenisCaruman>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

            var socsoContributionData = db.tbl_JenisCaruman
                .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = socsoContributionData
                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = socsoContributionData
                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = socsoContributionData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = socsoContributionData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _SocsoContributionMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var socsoConfigData = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                x.fldOptConfFlag1 == "kodCarumanSocso" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fldDeleted == false);

            var getSocsoContributionRunningNo = db.tbl_JenisCaruman
                .Where(x => x.fld_JenisCaruman == socsoConfigData.fldOptConfValue && x.fldNegaraID == NegaraID &&
                            x.fldSyarikatID == SyarikatID)
                .OrderByDescending(o => o.fld_JenisCarumanID)
                .Select(s => s.fld_KodCaruman)
                .FirstOrDefault();

            string socsoContributionCode = "";

            if (getSocsoContributionRunningNo == null)
            {
                socsoContributionCode = socsoConfigData.fldOptConfFlag2 + "01";
            }

            else
            {
                int generateNewKwspCOntributionNo = Convert.ToInt32(getSocsoContributionRunningNo.Substring(socsoConfigData.fldOptConfFlag2.Length)) + 1;
                socsoContributionCode = socsoConfigData.fldOptConfFlag2 + generateNewKwspCOntributionNo.ToString("00");
            }

            tbl_JenisCarumanSOCSOViewModelCreate jenisCarumanSocsoViewModelCreate = new tbl_JenisCarumanSOCSOViewModelCreate();

            jenisCarumanSocsoViewModelCreate.fld_JenisCaruman = socsoConfigData.fldOptConfValue;
            jenisCarumanSocsoViewModelCreate.fld_KodCaruman = socsoContributionCode;

            return PartialView(jenisCarumanSocsoViewModelCreate);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _SocsoContributionMaintenanceCreate(ModelsCorporate.tbl_JenisCarumanSOCSOViewModelCreate jenisCarumanSocsoViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    tbl_JenisCaruman jenisCaruman = new tbl_JenisCaruman();

                    PropertyCopy.Copy(jenisCaruman, jenisCarumanSocsoViewModelCreate);

                    jenisCaruman.fld_Keterangan = GetConfig.UppercaseFirst(jenisCaruman.fld_Keterangan);
                    jenisCaruman.fldNegaraID = (int)NegaraID;
                    jenisCaruman.fldSyarikatID = (int)SyarikatID;
                    jenisCaruman.fld_Deleted = false;
                    jenisCaruman.fld_Default = false;

                    db.tbl_JenisCaruman.Add(jenisCaruman);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "socsoContributionMaintenanceDetails",
                        rootUrl = domain,
                        action = "_SocsoContributionMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _SocsoContributionMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var socsoContributionData = db.tbl_JenisCaruman
                .SingleOrDefault(x => x.fld_JenisCarumanID == id && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            tbl_JenisCarumanSOCSOViewModelEdit jenisCarumanSocsoViewModelEdit = new tbl_JenisCarumanSOCSOViewModelEdit();

            PropertyCopy.Copy(jenisCarumanSocsoViewModelEdit, socsoContributionData);

            return PartialView(jenisCarumanSocsoViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _SocsoContributionMaintenanceEdit(ModelsCorporate.tbl_JenisCarumanSOCSOViewModelEdit jenisCarumanSocsoViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var socsoContributionData = db.tbl_JenisCaruman
                        .SingleOrDefault(x =>
                            x.fld_JenisCarumanID == jenisCarumanSocsoViewModelEdit.fld_JenisCarumanID &&
                            x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

                    socsoContributionData.fld_Keterangan = GetConfig.UppercaseFirst(jenisCarumanSocsoViewModelEdit.fld_Keterangan);
                    socsoContributionData.fld_UmurLower = jenisCarumanSocsoViewModelEdit.fld_UmurLower;
                    socsoContributionData.fld_UmurUpper = jenisCarumanSocsoViewModelEdit.fld_UmurUpper;
                    socsoContributionData.fld_PeratusCarumanPekerja = jenisCarumanSocsoViewModelEdit.fld_PeratusCarumanPekerja;
                    socsoContributionData.fld_PeratusCarumanMajikanBawah5000 = jenisCarumanSocsoViewModelEdit.fld_PeratusCarumanMajikanBawah5000;
                    socsoContributionData.fld_PeratusCarumanMajikanAtas5000 = jenisCarumanSocsoViewModelEdit.fld_PeratusCarumanMajikanAtas5000;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "socsoContributionMaintenanceDetails",
                        rootUrl = domain,
                        action = "_SocsoContributionMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _SocsoContributionMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var socsoContributionData = db.tbl_JenisCaruman
                .SingleOrDefault(x =>
                    x.fld_JenisCarumanID == id &&
                    x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            return PartialView(socsoContributionData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _SocsoContributionMaintenanceDelete(ModelsCorporate.tbl_JenisCaruman jenisCaruman)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var socsoContributionData = db.tbl_JenisCaruman
                    .SingleOrDefault(x =>
                        x.fld_JenisCarumanID == jenisCaruman.fld_JenisCarumanID &&
                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (socsoContributionData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                socsoContributionData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "socsoContributionMaintenanceDetails",
                    rootUrl = domain,
                    action = "_SocsoContributionMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult SocsoTableMaintenance(int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.Maintenance = "class = active";

            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

            List<SelectListItem> socsoList = new List<SelectListItem>();

            socsoList = new SelectList(db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == socsoCode && x.fld_Deleted == false && x.fldNegaraID == NegaraID &&
                                x.fldSyarikatID == SyarikatID)
                    .OrderBy(o => o.fld_KodCaruman)
                    .Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan })
                , "Value", "Text").ToList();

            socsoList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" }));

            ViewBag.SocsoList = socsoList;

            return View();
        }

        public ActionResult _SocsoTableMaintenance(string socsoList, int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Socso>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var message = "";
            if (String.IsNullOrEmpty(socsoList))
            {
                message = GlobalResCorp.msgNoSOCSOTableData;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            var socsoData = db.tbl_Socso
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

            records.Content = socsoData
                .Where(x => x.fld_KodCaruman.ToUpper().Contains(socsoList.ToUpper()))
                .OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = socsoData
                .Count(x => x.fld_KodCaruman.ToUpper().Contains(socsoList.ToUpper()));

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _SocsoTableMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

            List<SelectListItem> carumanList = new List<SelectListItem>();

            carumanList = new SelectList(
                db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID &&
                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }),
                "Value", "Text").ToList();
            carumanList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.CarumanList = carumanList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _SocsoTableMaintenanceCreate(ModelsCorporate.tbl_SocsoViewModelCreate socsoViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_Socso socso = new ModelsCorporate.tbl_Socso();

                    PropertyCopy.Copy(socso, socsoViewModelCreate);

                    socso.fld_NegaraID = (int)NegaraID;
                    socso.fld_SyarikatID = (int)SyarikatID;
                    socso.fld_Deleted = false;

                    db.tbl_Socso.Add(socso);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "socsoTableMaintenanceDetails",
                        rootUrl = domain,
                        action = "_SocsoTableMaintenance",
                        controller = "Maintenance",
                        paramName = "SocsoList",
                        paramValue = socsoViewModelCreate.fld_KodCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _SocsoTableMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var socsoTableData = db.tbl_Socso.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_SocsoViewModelEdit socsoViewModelEdit = new tbl_SocsoViewModelEdit();

            PropertyCopy.Copy(socsoViewModelEdit, socsoTableData);

            return PartialView(socsoViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _SocsoTableMaintenanceEdit(ModelsCorporate.tbl_SocsoViewModelEdit socsoViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var socsoTableData = db.tbl_Socso.SingleOrDefault(
                        x => x.fld_ID == socsoViewModelEdit.fld_ID && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    socsoTableData.fld_KdrLower = socsoViewModelEdit.fld_KdrLower;
                    socsoTableData.fld_KdrUpper = socsoViewModelEdit.fld_KdrUpper;
                    socsoTableData.fld_SocsoPkj = socsoViewModelEdit.fld_SocsoPkj;
                    socsoTableData.fld_SocsoMjkn = socsoViewModelEdit.fld_SocsoMjkn;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "socsoTableMaintenanceDetails",
                        rootUrl = domain,
                        action = "_SocsoTableMaintenance",
                        controller = "Maintenance",
                        paramName = "socsoList",
                        paramValue = socsoTableData.fld_KodCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _SocsoTableMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var socsoTableData = db.tbl_Socso.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(socsoTableData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _SocsoTableMaintenanceDelete(ModelsCorporate.tbl_Socso socso)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var socsoTableData = db.tbl_Socso.SingleOrDefault(
                    x => x.fld_ID == socso.fld_ID && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (socsoTableData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                socsoTableData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "2",
                    div = "socsoTableMaintenanceDetails",
                    rootUrl = domain,
                    action = "_SocsoTableMaintenance",
                    controller = "Maintenance",
                    paramName = "socsoList",
                    paramValue = socsoTableData.fld_KodCaruman
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult SocsoContributionMaintenanceInUse(int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _SocsoContributionMaintenanceInUse(string filter, int page = 1, string sort = "fld_KodCaruman", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_JenisCaruman>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var socsoCode = GetConfig.GetWebConfigValue("kodCarumanSocso", NegaraID, SyarikatID);

            var socsoContributionData = db.tbl_JenisCaruman
                .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = socsoContributionData
                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = socsoContributionData
                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Keterangan.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = socsoContributionData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = socsoContributionData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _SocsoContributionMaintenanceInUseEdit(List<int> carumanSocsoID)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var socsoCode = GetConfig.GetWebConfigValue("kodCarumanKwsp", NegaraID, SyarikatID);

                var socsoContributionData = db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == socsoCode && x.fldNegaraID == NegaraID &&
                                x.fldSyarikatID == SyarikatID && x.fld_Deleted == false);

                var warganegaraCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                    x.fldOptConfFlag1 == "krytnlist" && x.fldOptConfFlag3 == "1" && x.fld_NegaraID == NegaraID &&
                    x.fld_SyarikatID == SyarikatID).fldOptConfValue;

                foreach (var socsoContribution in socsoContributionData)
                {
                    socsoContribution.fld_Default = false;
                }

                if (carumanSocsoID != null)
                {
                    //remove checkall value from carumanTambahanID list
                    carumanSocsoID.Remove(0);

                    foreach (var id in carumanSocsoID)
                    {
                        var selectedSocsoContributionData = db.tbl_JenisCaruman.SingleOrDefault(x => x.fld_JenisCarumanID == id);

                        selectedSocsoContributionData.fld_Default = true;
                    }
                }

                db.SaveChanges();

                var connectionData = db.tblConnections.Where(x =>
                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

                foreach (var connection in connectionData)
                {
                    var wilayahID = connection.wilayahID;
                    string hostEstate, catalogEstate, userEstate, passEstate = "";
                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate,
                        wilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection =
                        MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

                    var workerData = estateConnection.tbl_Pkjmast.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Kdaktf == "1");

                    var activeSocsoContributionData = db.tbl_JenisCaruman.Where(x =>
                        x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_Deleted == false &&
                        x.fld_Default == true);

                    foreach (var worker in workerData)
                    {
                        if (worker.fld_Kdrkyt == warganegaraCode)
                        {
                            DateDiff workerAge = new DateDiff(Convert.ToDateTime(worker.fld_Trlhr).AddDays(-1),
                                DateTime.Now);

                            foreach (var activeSocsoContribution in activeSocsoContributionData)
                            {
                                if (activeSocsoContribution.fld_UmurLower <= workerAge.Years &&
                                    activeSocsoContribution.fld_UmurUpper >= workerAge.Years)
                                {
                                    worker.fld_KodSocso = activeSocsoContribution.fld_KodCaruman;
                                }
                            }
                        }

                        else
                        {
                            worker.fld_KodSocso = null;
                        }
                    }

                    estateConnection.SaveChanges();
                    estateConnection.Dispose();
                }

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "1"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult KwspMaintenance(string KwspList = "", int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
        {
            ViewBag.Maintenance = "class = active";
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            List<SelectListItem> jnskwsp = new List<SelectListItem>();
            jnskwsp = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "KWSP" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
            jnskwsp.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ViewingModels.tbl_Kwsp>();
            string KeteranganKwsp = "";
            if (KwspList != "0")
            {
                KeteranganKwsp = db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "KWSP" && x.fld_Deleted == false && x.fld_KodCaruman == KwspList).Select(s => s.fld_Keterangan).FirstOrDefault();
                records.Content = dbview.tbl_Kwsp.Where(x => x.fld_KodCaruman == KwspList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                       .OrderBy(sort + " " + sortdir)
                       .Skip((page - 1) * pageSize)
                       .Take(pageSize)
                       .ToList();

                records.TotalRecords = dbview.tbl_Kwsp.Where(x => x.fld_KodCaruman == KwspList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
                records.CurrentPage = page;
                records.PageSize = pageSize;
                db.Dispose();
                dbview.Dispose();
            }
            ViewBag.JnsKwsp = KeteranganKwsp;
            ViewBag.KwspList = jnskwsp;
            ViewBag.Datacount = records.TotalRecords;
            return View(records);
        }

        public ActionResult KwspMaintenanceInsert()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> JnsKwsp = new List<SelectListItem>();
            JnsKwsp = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "KWSP" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
            JnsKwsp.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_KodCaruman = JnsKwsp;
            //ViewBag.fld_KodJenisAktvt = JnsAktvt;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult KwspMaintenanceInsert(ModelsCorporate.tbl_Kwsp tbl_Kwsp)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var checkdata = db.tbl_Kwsp.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodCaruman == tbl_Kwsp.fld_KodCaruman && x.fld_KdrLower == tbl_Kwsp.fld_KdrLower && x.fld_KdrUpper == tbl_Kwsp.fld_KdrUpper && x.fld_Deleted == false).FirstOrDefault();
            if (checkdata == null)
            {
                tbl_Kwsp.fld_SyarikatID = SyarikatID;
                tbl_Kwsp.fld_NegaraID = NegaraID;
                tbl_Kwsp.fld_Deleted = false;
                db.tbl_Kwsp.Add(tbl_Kwsp);
                db.SaveChanges();
                db.Dispose();
                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                return Json(new { success = true, msg = GlobalResCorp.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
            }
            else
            {
                return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
            }
        }

        public ActionResult KwspMaintenanceUpdate(int? id)
        {
            if (id == null)
            {
                return RedirectToAction("KwspMaintenance");
            }
            ModelsCorporate.tbl_Kwsp tbl_Kwsp = db.tbl_Kwsp.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_Kwsp == null)
            {
                return RedirectToAction("KwspMaintenance");
            }
            db.Dispose();
            return PartialView(tbl_Kwsp);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult KwspMaintenanceUpdate(ModelsCorporate.tbl_Kwsp tbl_Kwsp)
        {
            var getdata = db.tbl_Kwsp.Where(w => w.fld_ID == tbl_Kwsp.fld_ID).FirstOrDefault();

            getdata.fld_KdrLower = tbl_Kwsp.fld_KdrLower;
            getdata.fld_KdrUpper = tbl_Kwsp.fld_KdrUpper;
            getdata.fld_Mjkn = tbl_Kwsp.fld_Mjkn;
            getdata.fld_Pkj = tbl_Kwsp.fld_Pkj;

            db.Entry(getdata).State = EntityState.Modified;
            db.SaveChanges();
            db.Dispose();
            return Json(new { success = true, msg = GlobalResCorp.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
        }

        public ActionResult KwspMaintenanceDelete(int? id)
        {
            if (id == null)
            {
                return RedirectToAction("KwspMaintenance");
            }
            ModelsCorporate.tbl_Kwsp tbl_Kwsp = db.tbl_Kwsp.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_Kwsp == null)
            {
                return RedirectToAction("KwspMaintenance");
            }
            db.Dispose();
            return PartialView(tbl_Kwsp);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult KwspMaintenanceDelete(ModelsCorporate.tbl_Kwsp tbl_Kwsp)
        {
            errorlog geterror = new errorlog();
            try
            {
                //ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
                if (tbl_Kwsp == null)
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    var getdata = db.tbl_Kwsp.Where(x => x.fld_ID == tbl_Kwsp.fld_ID && x.fld_NegaraID == tbl_Kwsp.fld_NegaraID && x.fld_SyarikatID == tbl_Kwsp.fld_SyarikatID && x.fld_Deleted == false).FirstOrDefault();
                    getdata.fld_Deleted = true;
                    db.Entry(getdata).State = EntityState.Modified;
                    //db.tbl_UpahMenuai.Remove(tbl_UpahMenuai);
                    db.SaveChanges();
                    db.Dispose();
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
            }
            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new { success = true, msg = GlobalResCorp.msgError, status = "danger", checkingdata = "1" });
            }
        }

        public ActionResult SocsoMaintenance(string SocsoList = "", int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
        {
            ViewBag.Maintenance = "class = active";
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            List<SelectListItem> jnsSocso = new List<SelectListItem>();
            jnsSocso = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "SOCSO" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
            jnsSocso.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ViewingModels.tbl_Socso>();

            if (SocsoList != "0")
            {
                records.Content = dbview.tbl_Socso.Where(x => x.fld_KodCaruman == SocsoList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                       .OrderBy(sort + " " + sortdir)
                       .Skip((page - 1) * pageSize)
                       .Take(pageSize)
                       .ToList();

                records.TotalRecords = dbview.tbl_Socso.Where(x => x.fld_KodCaruman == SocsoList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
                records.CurrentPage = page;
                records.PageSize = pageSize;
                db.Dispose();
                dbview.Dispose();
            }

            ViewBag.SocsoList = jnsSocso;
            ViewBag.Datacount = records.TotalRecords;
            return View(records);
        }

        public ActionResult SocsoMaintenanceInsert()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> JnsSocso = new List<SelectListItem>();
            JnsSocso = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "SOCSO" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
            JnsSocso.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_KodCaruman = JnsSocso;
            //ViewBag.fld_KodJenisAktvt = JnsAktvt;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult SocsoMaintenanceInsert(ModelsCorporate.tbl_Socso tbl_Socso)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var checkdata = db.tbl_Socso.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodCaruman == tbl_Socso.fld_KodCaruman && x.fld_KdrLower == tbl_Socso.fld_KdrLower && x.fld_KdrUpper == tbl_Socso.fld_KdrUpper && x.fld_Deleted == false).FirstOrDefault();
            if (checkdata == null)
            {
                tbl_Socso.fld_SyarikatID = SyarikatID;
                tbl_Socso.fld_NegaraID = NegaraID;
                tbl_Socso.fld_Deleted = false;
                db.tbl_Socso.Add(tbl_Socso);
                db.SaveChanges();
                db.Dispose();
                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                return Json(new { success = true, msg = GlobalResCorp.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
            }
            else
            {
                return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
            }
        }

        public ActionResult SocsoMaintenanceUpdate(int? id)
        {
            if (id == null)
            {
                return RedirectToAction("SocsoMaintenance");
            }
            ModelsCorporate.tbl_Socso tbl_Socso = db.tbl_Socso.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_Socso == null)
            {
                return RedirectToAction("SocsoMaintenance");
            }
            db.Dispose();
            return PartialView(tbl_Socso);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult SocsoMaintenanceUpdate(ModelsCorporate.tbl_Socso tbl_Socso)
        {
            var getdata = db.tbl_Socso.Where(w => w.fld_ID == tbl_Socso.fld_ID).FirstOrDefault();

            getdata.fld_KdrLower = tbl_Socso.fld_KdrLower;
            getdata.fld_KdrUpper = tbl_Socso.fld_KdrUpper;
            getdata.fld_SocsoMjkn = tbl_Socso.fld_SocsoMjkn;
            getdata.fld_SocsoPkj = tbl_Socso.fld_SocsoMjkn;

            db.Entry(getdata).State = EntityState.Modified;
            db.SaveChanges();
            db.Dispose();
            return Json(new { success = true, msg = GlobalResCorp.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
        }

        public ActionResult SocsoMaintenanceDelete(int? id)
        {
            if (id == null)
            {
                return RedirectToAction("SocsoMaintenance");
            }
            ModelsCorporate.tbl_Socso tbl_Socso = db.tbl_Socso.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_Socso == null)
            {
                return RedirectToAction("SocsoMaintenance");
            }
            db.Dispose();
            return PartialView(tbl_Socso);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult SocsoMaintenanceDelete(ModelsCorporate.tbl_Socso tbl_Socso)
        {
            errorlog geterror = new errorlog();
            try
            {
                //ModelsCorporate.tbl_UpahMenuai tbl_UpahMenuai = db.tbl_UpahMenuai.Where(w => w.fld_ID == id).FirstOrDefault();
                if (tbl_Socso == null)
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    var getdata = db.tbl_Socso.Where(x => x.fld_ID == tbl_Socso.fld_ID && x.fld_NegaraID == tbl_Socso.fld_NegaraID && x.fld_SyarikatID == tbl_Socso.fld_SyarikatID && x.fld_Deleted == false).FirstOrDefault();
                    getdata.fld_Deleted = true;
                    db.Entry(getdata).State = EntityState.Modified;
                    //db.tbl_UpahMenuai.Remove(tbl_UpahMenuai);
                    db.SaveChanges();
                    db.Dispose();
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
            }
            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new { success = true, msg = GlobalResCorp.msgError, status = "danger", checkingdata = "1" });
            }
        }

        public ActionResult ProductivityMaintenance(string KategoriList = "", int page = 1, string sort = "fld_KdrLower", string sortdir = "ASC")
        {
            ViewBag.Maintenance = "class = active";
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            List<SelectListItem> jnskategori = new List<SelectListItem>();
            jnskategori = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfValue).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            jnskategori.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_UpahAktiviti>();

            if (KategoriList != "0")
            {
                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_Kategori == KategoriList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                       .OrderBy(sort + " " + sortdir)
                       .Skip((page - 1) * pageSize)
                       .Take(pageSize)
                       .ToList();

                records.TotalRecords = db.tbl_UpahAktiviti.Where(x => x.fld_Kategori == KategoriList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
                records.CurrentPage = page;
                records.PageSize = pageSize;
                db.Dispose();
                dbview.Dispose();
            }

            ViewBag.KategoriList = jnskategori;
            ViewBag.Datacount = records.TotalRecords;
            return View(records);
        }

        //public ActionResult ProductivityMaintenanceInsert()
        //{

        //}

        public ActionResult ProductivityMaintenanceUpdate(int? id)
        {
            if (id == null)
            {
                return RedirectToAction("ProductivityMaintenance");
            }
            ModelsCorporate.tbl_UpahAktiviti tbl_UpahAktiviti = db.tbl_UpahAktiviti.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_UpahAktiviti == null)
            {
                return RedirectToAction("ProductivityMaintenance");
            }
            db.Dispose();
            return PartialView(tbl_UpahAktiviti);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult ProductivityMaintenanceUpdate(ModelsCorporate.tbl_UpahAktiviti tbl_UpahAktiviti)
        {
            var getdata = db.tbl_UpahAktiviti.Where(w => w.fld_ID == tbl_UpahAktiviti.fld_ID).FirstOrDefault();

            //getdata.fld_BonusProduktvt = tbl_UpahAktiviti.fld_BonusProduktvt;
            //getdata.fld_BonusKehadiran = tbl_UpahAktiviti.fld_BonusKehadiran;
            //getdata.fld_BonusKualiti = tbl_UpahAktiviti.fld_BonusKualiti;

            db.Entry(getdata).State = EntityState.Modified;
            db.SaveChanges();
            db.Dispose();
            return Json(new { success = true, msg = GlobalResCorp.msgUpdate, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
        }

        //public ActionResult ProductivityMaintenanceDelete()
        //{

        //}

        public ActionResult WorkerKategoryMaintenance(int page = 1, string sort = "fldOptConfID", string sortdir = "ASC")
        {
            //designation
            ViewBag.Maintenance = "class = active";
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //List<SelectListItem> jnsSocso = new List<SelectListItem>();
            //jnsSocso = new SelectList(db.tbl_JenisCaruman.Where(x => x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_JenisCaruman == "SOCSO" && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman).Select(s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_Keterangan }), "Value", "Text").ToList();
            //jnsSocso.Insert(0, (new SelectListItem { Text = "Sila Pilih", Value = "0" }));

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ViewingModels.tblOptionConfigsWeb>();

            records.Content = dbview.tblOptionConfigsWeb.Where(x => x.fldOptConfFlag1 == "designation" && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fldDeleted == false)
                      .OrderBy(sort + " " + sortdir)
                      .Skip((page - 1) * pageSize)
                      .Take(pageSize)
                      .ToList();

            records.TotalRecords = dbview.tblOptionConfigsWeb.Where(x => x.fldOptConfFlag1 == "designation" && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fldDeleted == false).Count();
            records.CurrentPage = page;
            records.PageSize = pageSize;
            db.Dispose();
            dbview.Dispose();

            //ViewBag.SocsoList = jnsSocso;
            ViewBag.Datacount = records.TotalRecords;
            return View(records);
        }

        public ActionResult WorkerKategoryMaintenanceInsert()
        {

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult WorkerKategoryMaintenanceInsert(ModelsCorporate.tblOptionConfigsWeb tblOptionConfigsWeb)
        {

            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var checkdata = db.tblOptionConfigsWebs.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false && x.fldOptConfDesc == tblOptionConfigsWeb.fldOptConfDesc).FirstOrDefault();
            if (checkdata == null)
            {
                string datacode = db.tblOptionConfigsWebs.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfID).Select(s => s.fldOptConfValue).LastOrDefault();
                int newcode = int.Parse(datacode) + 1;
                tblOptionConfigsWeb.fldOptConfValue = newcode.ToString();
                tblOptionConfigsWeb.fldOptConfFlag1 = "designation";
                tblOptionConfigsWeb.fld_SyarikatID = SyarikatID;
                tblOptionConfigsWeb.fld_NegaraID = NegaraID;
                tblOptionConfigsWeb.fldDeleted = false;
                db.tblOptionConfigsWebs.Add(tblOptionConfigsWeb);
                db.SaveChanges();
                db.Dispose();
                //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                return Json(new { success = true, msg = GlobalResCorp.msgAdd, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "", data3 = "" });
            }
            else
            {
                return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
            }
        }

        //public ActionResult WorkerKategoryMaintenanceUpdate(int? id)
        //{
        //    if (id == null)
        //    {
        //        return RedirectToAction("WorkerKategoryMaintenance");
        //    }
        //    ModelsCorporate.tbl_Socso tbl_Socso = db.tbl_Socso.Where(w => w.fld_ID == id).FirstOrDefault();
        //    if (tbl_Socso == null)
        //    {
        //        return RedirectToAction("WorkerKategoryMaintenance");
        //    }
        //    db.Dispose();
        //    return PartialView(tbl_Socso);
        //}

        public JsonResult GenerateKodAktvt(string jnsAktvt)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            string lastcode = db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodJenisAktvt == jnsAktvt && x.fld_Deleted == false).OrderByDescending(o => o.fld_KodAktvt.Trim()).Select(s => s.fld_KodAktvt).FirstOrDefault();
            //modified to create activity code untuk pertama kali - kamalia 22/4/22
            if (lastcode == null)
            {
                int generated = int.Parse(jnsAktvt + 0 + 1);
                string newcode = generated.ToString("0000");
                return Json(newcode);
            }
            else
            {
                int generated = int.Parse(lastcode) + 1;
                string newcode = generated.ToString("0000");
                return Json(newcode);
            }

        }

        //public ActionResult Upload(FormCollection formCollection)
        //{
        //    if (Request != null)
        //    {
        //        HttpPostedFileBase file = Request.Files["UploadedFile"];
        //        if ((file != null) && (file.ContentLength > 0) && !string.IsNullOrEmpty(file.FileName))
        //        {
        //            string fileName = file.FileName;
        //            string fileContentType = file.ContentType;
        //            byte[] fileBytes = new byte[file.ContentLength];
        //            var data = file.InputStream.Read(fileBytes, 0, Convert.ToInt32(file.ContentLength));
        //            var usersList = new List<Models.tbl_Skb>();
        //            using (var package = new ExcelPackage(file.InputStream))
        //            {
        //                var currentSheet = package.Workbook.Worksheets;
        //                var workSheet = currentSheet.First();
        //                var noOfCol = workSheet.Dimension.End.Column;
        //                var noOfRow = workSheet.Dimension.End.Row;
        //                for (int rowIterator = 2; rowIterator <= noOfRow; rowIterator++)
        //                {
        //                    var user = new Models.tbl_Skb();
        //                    user.fld_Bulan = workSheet.Cells[rowIterator, 1].Value.ToString();
        //                    user.fld_NoSkb = workSheet.Cells[rowIterator, 2].Value.ToString();
        //                    usersList.Add(user);
        //                }
        //            }
        //        }
        //    }
        //    return View();
        //}

        public ActionResult PaidLeaveCategoryMaintenance(string filter, int page = 1, string sort = "fld_KodCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _PaidLeaveCategoryMaintenance(string filter, int page = 1, string sort = "fld_KodCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CutiKategori>();
            int role = GetIdentity.RoleID(getuserid).Value;

            //modified by kamalia 15/8/2021
            var paidLeaveCategoryData = db.tbl_CutiKategori
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = paidLeaveCategoryData
                    .Where(x => x.fld_KodCuti.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KeteranganCuti.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = paidLeaveCategoryData
                    .Count(x => x.fld_KodCuti.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KeteranganCuti.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = paidLeaveCategoryData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = paidLeaveCategoryData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _PaidLeaveCategoryMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            ModelsCorporate.tbl_CutiKategoriViewModelCreate cutiKategori = new ModelsCorporate.tbl_CutiKategoriViewModelCreate();

            var paidLeaveCode = db.tblOptionConfigsWebs
                .SingleOrDefault(
                    x => x.fldOptConfFlag1 == "cutiBerbayar" &&
                         x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                         x.fldDeleted == false)
                .fldOptConfValue;

            var getCurrentRunningLeaveAndActivityCode = db.tblOptionConfigsWebs //sepul tukar dari dbview.tblOptionConfigsWeb kpd db.tblOptionConfigsWebs sb sistem x jumpa tblOptionConfigsWeb
                .Where(x => x.fldOptConfFlag1 == "cuti" && x.fldOptConfFlag2 == "xhadirkerja" &&
                            x.fldOptConfValue.Contains(paidLeaveCode) && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fldOptConfValue)
                .FirstOrDefault();

            if (getCurrentRunningLeaveAndActivityCode == null)
            {
                cutiKategori.fld_KodCuti = db.tblOptionConfigsWebs
                                               .SingleOrDefault(
                                                   x => x.fldOptConfFlag1 == "cutiBerbayar" &&
                                                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                                        x.fldDeleted == false)
                                               .fldOptConfValue + "01";
                cutiKategori.fld_KodAktvt = db.tblOptionConfigsWebs
                                                .SingleOrDefault(
                                                    x => x.fldOptConfFlag1 == "cutiBerbayar" &&
                                                         x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                                         x.fldDeleted == false)
                                                .fldOptConfFlag2;
            }

            else
            {
                var getCurrentRunningActivityCode = db.tbl_CutiKategori
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderByDescending(o => o.fld_KodAktvt)
                    .Select(s => s.fld_KodAktvt).FirstOrDefault();

                var generateCurrentRunningLeaveCode = Convert.ToInt32(
                                                          getCurrentRunningLeaveAndActivityCode.fldOptConfValue
                                                              .Substring(db
                                                                  .tblOptionConfigsWebs
                                                                  .SingleOrDefault(
                                                                      x => x.fldOptConfFlag1 == "cutiBerbayar" &&
                                                                           x.fld_NegaraID == NegaraID &&
                                                                           x.fld_SyarikatID == SyarikatID &&
                                                                           x.fldDeleted == false)
                                                                  .fldOptConfValue.Length)) + 1;

                cutiKategori.fld_KodCuti = paidLeaveCode + generateCurrentRunningLeaveCode.ToString("00");

                var generateCurrentRunningActivityCode = Convert.ToInt32(getCurrentRunningActivityCode) + 1;

                cutiKategori.fld_KodAktvt = generateCurrentRunningActivityCode.ToString();
            }

            List<SelectListItem> waktuBayaranCutiList = new List<SelectListItem>();

            waktuBayaranCutiList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "wktuBayaranCuti" && x.fldDeleted == false &&
                                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            waktuBayaranCutiList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "", Selected = true });

            ViewBag.WaktuBayaranCutiList = waktuBayaranCutiList;

            List<SelectListItem> GLList = new List<SelectListItem>();

            GLList = new SelectList(
                db.tbl_Lejar
                    .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodLejar)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
                "Value", "Text").ToList();
            GLList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.GLList = GLList;

            return PartialView(cutiKategori);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PaidLeaveCategoryMaintenanceCreate(ModelsCorporate.tbl_CutiKategoriViewModelCreate cutiKategoriViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            using (var dbContextTransaction = db.Database.BeginTransaction())
            {
                try
                {
                    if (ModelState.IsValid)
                    {
                        ModelsCorporate.tbl_CutiKategori cutiKategori = new ModelsCorporate.tbl_CutiKategori();

                        cutiKategori.fld_KodCuti = cutiKategoriViewModelCreate.fld_KodCuti;
                        cutiKategori.fld_KeteranganCuti = GetConfig.UppercaseFirst(cutiKategoriViewModelCreate.fld_KeteranganCuti);
                        cutiKategori.fld_WaktuBayaranCuti = Convert.ToByte(cutiKategoriViewModelCreate.fld_WaktuBayaranCuti);
                        cutiKategori.fld_KodGL = cutiKategoriViewModelCreate.fld_KodGL;
                        cutiKategori.fld_KodAktvt = cutiKategoriViewModelCreate.fld_KodAktvt;
                        cutiKategori.fld_Deleted = false;
                        cutiKategori.fld_NegaraID = NegaraID;
                        cutiKategori.fld_SyarikatID = SyarikatID;

                        db.tbl_CutiKategori.Add(cutiKategori);
                        db.SaveChanges();

                        ModelsCorporate.tblOptionConfigsWeb tblOptionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

                        tblOptionConfigsWeb.fldOptConfValue = cutiKategori.fld_KodCuti;
                        tblOptionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(cutiKategori.fld_KeteranganCuti);
                        tblOptionConfigsWeb.fldOptConfFlag1 = "cuti";
                        tblOptionConfigsWeb.fldOptConfFlag2 = "xhadirkerja";
                        tblOptionConfigsWeb.fldDeleted = false;
                        tblOptionConfigsWeb.fld_NegaraID = NegaraID;
                        tblOptionConfigsWeb.fld_SyarikatID = SyarikatID;

                        db.tblOptionConfigsWebs.Add(tblOptionConfigsWeb);
                        db.SaveChanges();

                        dbContextTransaction.Commit();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "paidLeaveCategoryMaintenanceDetails",
                            rootUrl = domain,
                            action = "_PaidLeaveCategoryMaintenance",
                            controller = "Maintenance"
                        });
                    }

                    else
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorData,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }
                }

                catch (Exception ex)
                {
                    dbContextTransaction.Rollback();
                    geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgError,
                        status = "danger",
                        checkingdata = "0"
                    });
                }

                finally
                {
                    db.Dispose();
                }
            }
        }

        public ActionResult _PaidLeaveCategoryMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            ModelsCorporate.tbl_CutiKategori cutiKategori = db.tbl_CutiKategori
                .Single(x => x.fld_CutiKategoriID == id && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

            List<SelectListItem> waktuBayaranCutiList = new List<SelectListItem>();

            waktuBayaranCutiList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "wktuBayaranCuti" && x.fldDeleted == false &&
                                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            waktuBayaranCutiList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "", Selected = true });

            ViewBag.WaktuBayaranCutiList = waktuBayaranCutiList;

            List<SelectListItem> GLList = new List<SelectListItem>();

            GLList = new SelectList(
                db.tbl_Lejar
                    .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodLejar)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
                "Value", "Text").ToList();
            GLList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.GLList = GLList;


            return PartialView(cutiKategori);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PaidLeaveCategoryMaintenanceEdit(ModelsCorporate.tbl_CutiKategori cutiKategori)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var paidLeaveData = db.tbl_CutiKategori
                        .Single(x => x.fld_CutiKategoriID == cutiKategori.fld_CutiKategoriID &&
                                     x.fld_NegaraID == NegaraID &&
                                     x.fld_SyarikatID == SyarikatID);

                    paidLeaveData.fld_KeteranganCuti = GetConfig.UppercaseFirst(cutiKategori.fld_KeteranganCuti);
                    paidLeaveData.fld_WaktuBayaranCuti = cutiKategori.fld_WaktuBayaranCuti;
                    paidLeaveData.fld_KodGL = cutiKategori.fld_KodGL;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "paidLeaveCategoryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PaidLeaveCategoryMaintenance",
                        controller = "Maintenance"
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }

        }

        public ActionResult _PaidLeaveCategoryMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_CutiKategori cutiKategori = db.tbl_CutiKategori
                .Single(x => x.fld_CutiKategoriID == id && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

            return PartialView(cutiKategori);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PaidLeaveCategoryMaintenanceDelete(ModelsCorporate.tbl_CutiKategori cutiKategori)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            using (var dbContextTransaction = db.Database.BeginTransaction())
            {
                try
                {
                    ModelsCorporate.tbl_CutiKategori paidLeaveData = db.tbl_CutiKategori
                        .Single(x => x.fld_CutiKategoriID == cutiKategori.fld_CutiKategoriID &&
                                     x.fld_NegaraID == NegaraID &&
                                     x.fld_SyarikatID == SyarikatID);

                    db.SaveChanges();

                    ModelsCorporate.tblOptionConfigsWeb paidLeaveDataInConfigsWeb = db.tblOptionConfigsWebs
                        .Single(x => x.fldOptConfFlag1 == "cuti" && x.fldOptConfFlag2 == "xhadirkerja" &&
                                     x.fldOptConfValue == cutiKategori.fld_KodCuti && x.fld_NegaraID == NegaraID &&
                                     x.fld_SyarikatID == SyarikatID);

                    bool status = true;

                    var message = "";
                    if (paidLeaveData.fld_Deleted == paidLeaveDataInConfigsWeb.fldDeleted)
                    {
                        if (paidLeaveData.fld_Deleted == false && paidLeaveDataInConfigsWeb.fldDeleted == false)
                        {
                            status = true;
                            message = GlobalResCorp.msgDelete2;
                        }

                        else
                        {
                            status = false;
                            message = GlobalResCorp.msgUndelete;
                        }

                        paidLeaveData.fld_Deleted = status;
                        paidLeaveDataInConfigsWeb.fldDeleted = status;
                    }

                    else
                    {
                        dbContextTransaction.Rollback();
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgError,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    db.SaveChanges();

                    dbContextTransaction.Commit();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgDelete2,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "paidLeaveCategoryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PaidLeaveCategoryMaintenance",
                        controller = "Maintenance"
                    });
                }

                catch (Exception ex)
                {
                    dbContextTransaction.Rollback();
                    geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgError,
                        status = "danger",
                        checkingdata = "0"
                    });
                }

                finally
                {
                    db.Dispose();
                }
            }
        }

        public ActionResult PaidLeaveAllocationMaintenance(int page = 1, string sort = "fld_JenisCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> leaveCategoryList = new List<SelectListItem>();

            var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag1 == "cutiUmumFlag" &&
                x.fldDeleted == false).fldOptConfValue;

            leaveCategoryList = new SelectList(
                db.tbl_CutiKategori
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                x.fld_KodCuti != publicHolidayCode && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodCuti)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCuti, Text = s.fld_KeteranganCuti }),
                "Value", "Text").ToList();
            leaveCategoryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.LeaveCategoryList = leaveCategoryList;

            return View();
        }

        public ActionResult PaidLeaveAllocationTest( string nopkj, ModelsEstate.tbl_PkjmastModelViewEdit pkjmastModelViewEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
                 NegaraID.Value);
            
            MVC_SYSTEM_ModelsEstate dbr = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);


            var workerData = dbr.tbl_Pkjmast.SingleOrDefault(x =>
                      x.fld_UniqueID == pkjmastModelViewEdit.fld_UniqueID);

            ViewBag.Maintenance = "class = active";

            int year = DateTime.Now.Year;

            //dummy starting working date
            DateTime startingDay = new DateTime(2018, 1, 1);

            DateTime lastDay = new DateTime(year, 12, 31);

            var app2 = dbr.tbl_Pkjmast.Where(x => x.fld_Nopkj == nopkj).FirstOrDefault();
            app2.fld_Kdaktf = "1";
            app2.fld_StatusAkaun = "1";
            app2.fld_StatusApproved = 1;
            app2.fld_ActionBy = User.Identity.Name;
            app2.fld_ActionDate = DateTime.Now;

         //edited
      //  DateDiff dateDiff = new DateDiff(Convert.ToDateTime(startingDay).AddDays(-1), lastDay);
            //original
            DateDiff dateDiff = new DateDiff(Convert.ToDateTime(workerData.fld_Trmlkj).AddDays(-1), lastDay);
            var kodCutiUmum = db.tblOptionConfigsWebs
               .SingleOrDefault(x => x.fldOptConfFlag1 == "cutiUmumFlag" && x.fldDeleted == false
                                                                            && x.fld_NegaraID == 1 &&
                                                                             x.fld_SyarikatID == 1).fldOptConfValue;

            var leaveCategoryData = db.tbl_CutiKategori.Where(x =>
               x.fld_KodCuti != kodCutiUmum && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fld_Deleted == false);

            foreach (var leaveCategory in leaveCategoryData)
            {
                var leaveAllocationData = db.tbl_CutiMaintenance.SingleOrDefault(x =>
                        x.fld_JenisCuti == leaveCategory.fld_KodCuti && x.fld_LowerLimit <= dateDiff.Months &&
                     x.fld_LowerLimit <= dateDiff.Months && x.fld_UpperLimit >= dateDiff.Months &&
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .fld_PeruntukkanCuti;

                ModelsEstate.tbl_CutiPeruntukan CutiPeruntukanTahunan = new ModelsEstate.tbl_CutiPeruntukan();

                CutiPeruntukanTahunan.fld_NoPkj = workerData.fld_Nopkj;
             //   CutiPeruntukanTahunan.fld_NoPkj = "Dummy";
                CutiPeruntukanTahunan.fld_JumlahCuti = leaveAllocationData;
                CutiPeruntukanTahunan.fld_KodCuti = leaveCategory.fld_KodCuti;
                CutiPeruntukanTahunan.fld_JumlahCutiDiambil = 0;
                CutiPeruntukanTahunan.fld_Tahun = Convert.ToInt16(year);
                CutiPeruntukanTahunan.fld_NegaraID = NegaraID;
                CutiPeruntukanTahunan.fld_SyarikatID = SyarikatID;
                CutiPeruntukanTahunan.fld_WilayahID = WilayahID;
                CutiPeruntukanTahunan.fld_LadangID = LadangID;
                CutiPeruntukanTahunan.fld_Deleted = false;

                dbr.tbl_CutiPeruntukan.Add(CutiPeruntukanTahunan);
            }

         //calculate public holiday
         var kodNegeriLadang = db.tbl_Ladang
             .Where(x => x.fld_ID == LadangID)
             .Select(s => s.fld_KodNegeri)
              .Single();

            //    //use this
            var CutiUmum = db.tbl_CutiUmum
            .Count(x => x.fld_Negeri == kodNegeriLadang && x.fld_Tahun == year && x.fld_Deleted == false
                          && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_IsSelected == true &&
                         x.fld_TarikhCuti > workerData.fld_Trmlkj);

            var cutiUmumCount = db.tbl_CutiUmum
                 .Count(x => x.fld_Negeri == kodNegeriLadang && x.fld_Tahun == year && x.fld_Deleted == false
                             && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_IsSelected == true &&
                             x.fld_TarikhCuti >= startingDay);

            ModelsEstate.tbl_CutiPeruntukan CutiPeruntukanUmum = new ModelsEstate.tbl_CutiPeruntukan();

            CutiPeruntukanUmum.fld_NoPkj = workerData.fld_Nopkj;
          //  CutiPeruntukanUmum.fld_NoPkj = "Dummy";
            CutiPeruntukanUmum.fld_JumlahCuti = cutiUmumCount;
            CutiPeruntukanUmum.fld_KodCuti = kodCutiUmum;
            CutiPeruntukanUmum.fld_JumlahCutiDiambil = 0;
            CutiPeruntukanUmum.fld_Tahun = Convert.ToInt16(year);
            CutiPeruntukanUmum.fld_NegaraID = NegaraID;
            CutiPeruntukanUmum.fld_SyarikatID = SyarikatID;
            CutiPeruntukanUmum.fld_WilayahID = WilayahID;
            CutiPeruntukanUmum.fld_LadangID = LadangID;
            CutiPeruntukanUmum.fld_Deleted = false;
            dbr.tbl_CutiPeruntukan.Add(CutiPeruntukanUmum);

            var jenisMingguNegeri = db.tbl_MingguNegeri.SingleOrDefault(x =>
                 x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_NegeriID == WilayahID &&
                   x.fld_Deleted == false).fld_JenisMinggu;

            var dayOfWeek = Enum.Parse(typeof(DayOfWeek), jenisMingguNegeri.ToString());

            var cutiUmum = db.tbl_CutiUmum
                       .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                              x.fld_Deleted == false && x.fld_Negeri == kodNegeriLadang &&
                                  x.fld_Tahun == year &&
                                   x.fld_TarikhCuti.Value.Month == startingDay.Month)
                       .ToList();

            //    //First We find out last date of month
            DateTime today = DateTime.Today;
            DateTime endOfMonth = new DateTime(year, Convert.ToInt32(startingDay.Month),
                  DateTime.DaysInMonth(year, Convert.ToInt32(startingDay.Month)));

            //    //get only last day of month
            int daysInMonth = endOfMonth.Day;

            int totalLeaveInAMonth = 0;

            for (int i = 0; i < daysInMonth; ++i)
            {
                DateTime d = new DateTime(year, Convert.ToInt32(startingDay.Month), i + 1);

                //Compare date with sunday
                if (d.DayOfWeek.ToString() == dayOfWeek.ToString())
                {
                    totalLeaveInAMonth = totalLeaveInAMonth + 1;
                }
            }

            var workingDaysInMonth = (DateTime.DaysInMonth(year, Convert.ToInt32(startingDay.Month))) - totalLeaveInAMonth -
                                      cutiUmum.Count;

            ModelsEstate.tbl_Produktiviti Produktiviti = new ModelsEstate.tbl_Produktiviti();
           // Produktiviti.fld_Nopkj = "Dummy";
            Produktiviti.fld_HadirKerja = workingDaysInMonth;
            Produktiviti.fld_Year = year;
            Produktiviti.fld_Month = startingDay.Month;
            Produktiviti.fld_NegaraID = NegaraID;
            Produktiviti.fld_SyarikatID = SyarikatID;
            Produktiviti.fld_WilayahID = WilayahID;
            Produktiviti.fld_LadangID = LadangID;
            Produktiviti.fld_Deleted = false;
            dbr.tbl_Produktiviti.Add(Produktiviti);

            return View();
        }

        public ActionResult _PaidLeaveAllocationMaintenance(string LeaveCategoryList, int page = 1, string sort = "fld_LowerLimit",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(LeaveCategoryList))
            {
                message = GlobalResCorp.msgNoPaidLeaveCategory;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ViewingModels.tbl_CutiMaintenance>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var leaveAllocation = dbview.tbl_CutiMaintenance
                .Where(x => x.fld_JenisCuti == LeaveCategoryList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            records.Content = leaveAllocation.OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = leaveAllocation
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;

            return View(records);
        }

        public ActionResult _PaidLeaveAllocationMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_CutiMaintenanceViewModelCreate cutiMaintenanceViewModelCreate = new ModelsCorporate.tbl_CutiMaintenanceViewModelCreate();

            List<SelectListItem> leaveCategoryList = new List<SelectListItem>();

            var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag1 == "cutiUmumFlag" &&
                x.fldDeleted == false).fldOptConfValue;

            leaveCategoryList = new SelectList(
                db.tbl_CutiKategori
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                x.fld_KodCuti != publicHolidayCode && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodCuti)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCuti, Text = s.fld_KeteranganCuti }),
                "Value", "Text").ToList();
            leaveCategoryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.LeaveCategoryList = leaveCategoryList;

            return PartialView(cutiMaintenanceViewModelCreate);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PaidLeaveAllocationMaintenanceCreate(ModelsCorporate.tbl_CutiMaintenanceViewModelCreate cutiMaintenanceViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_CutiMaintenance cutiMaintenance = new ModelsCorporate.tbl_CutiMaintenance();

                    PropertyCopy.Copy(cutiMaintenance, cutiMaintenanceViewModelCreate);

                    cutiMaintenance.fld_NegaraID = NegaraID;
                    cutiMaintenance.fld_SyarikatID = SyarikatID;
                    cutiMaintenance.fld_Deleted = false;

                    db.tbl_CutiMaintenance.Add(cutiMaintenance);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "paidLeaveAllocationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PaidLeaveAllocationMaintenance",
                        controller = "Maintenance",
                        paramName = "LeaveCategoryList",
                        paramValue = cutiMaintenance.fld_JenisCuti
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PaidLeaveAllocationMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            ModelsCorporate.tbl_CutiMaintenance cutiMaintenance = db.tbl_CutiMaintenance
                .SingleOrDefault(x => x.fld_CutiMaintenanceID == id && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

            ModelsCorporate.tbl_CutiMaintenanceViewModelEdit cutiMaintenanceViewModelEdit = new tbl_CutiMaintenanceViewModelEdit();

            PropertyCopy.Copy(cutiMaintenanceViewModelEdit, cutiMaintenance);

            return PartialView(cutiMaintenanceViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PaidLeaveAllocationMaintenanceEdit(ModelsCorporate.tbl_CutiMaintenanceViewModelEdit cutiMaintenanceViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_CutiMaintenance paidLeaveData = db.tbl_CutiMaintenance
                        .Single(x => x.fld_CutiMaintenanceID == cutiMaintenanceViewModelEdit.fld_CutiMaintenanceID &&
                                     x.fld_NegaraID == NegaraID &&
                                     x.fld_SyarikatID == SyarikatID);

                    paidLeaveData.fld_PeruntukkanCuti = cutiMaintenanceViewModelEdit.fld_PeruntukkanCuti;
                    paidLeaveData.fld_Keterangan = cutiMaintenanceViewModelEdit.fld_Keterangan;
                    paidLeaveData.fld_LowerLimit = cutiMaintenanceViewModelEdit.fld_LowerLimit;
                    paidLeaveData.fld_UpperLimit = cutiMaintenanceViewModelEdit.fld_UpperLimit;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "paidLeaveAllocationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PaidLeaveAllocationMaintenance",
                        controller = "Maintenance",
                        paramName = "LeaveCategoryList",
                        paramValue = paidLeaveData.fld_JenisCuti
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PaidLeaveAllocationMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_CutiMaintenance cutiMaintenance = db.tbl_CutiMaintenance
                .Single(x => x.fld_CutiMaintenanceID == id && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

            return PartialView(cutiMaintenance);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PaidLeaveAllocationMaintenanceDelete(ModelsCorporate.tbl_CutiMaintenance cutiMaintenance)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                ModelsCorporate.tbl_CutiMaintenance paidLeaveData = db.tbl_CutiMaintenance
                    .Single(x => x.fld_CutiMaintenanceID == cutiMaintenance.fld_CutiMaintenanceID && x.fld_NegaraID == NegaraID &&
                                 x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (paidLeaveData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                paidLeaveData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgDelete2,
                    status = "success",
                    checkingdata = "0",
                    method = "2",
                    div = "paidLeaveAllocationMaintenanceDetails",
                    rootUrl = domain,
                    action = "_PaidLeaveAllocationMaintenance",
                    controller = "Maintenance",
                    paramName = "LeaveCategoryList",
                    paramValue = paidLeaveData.fld_JenisCuti
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PublicHolidayAllocationMaintenance(int page = 1, string sort = "fld_TarikhCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            ViewBag.MonthList = new SelectList(
                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "monthlist" && x.fldDeleted == false &&
                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
                "fldOptConfValue", "fldOptConfDesc");

            ViewBag.YearList = yearlist;

            ViewBag.NegeriList = new SelectList(
                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "negeri" && x.fldDeleted == false &&
                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfDesc),
                "fldOptConfFlag3", "fldOptConfDesc");

            return View();
        }

        public ActionResult _PublicHolidayAllocationMaintenance(short? YearList, int? NegeriList, int page = 1, string sort = "fld_TarikhCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()) || String.IsNullOrEmpty(NegeriList.ToString()))
            {
                message = GlobalResCorp.msgChoosePublicHolidayAllocation;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ViewingModels.vw_CutiUmumNegeri>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publicHolidayData = dbview.vw_CutiUmumNegeri
                .Where(x => x.fld_Tahun == YearList && x.fld_Negeri == NegeriList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID & x.fld_Deleted == false)
                .OrderBy(o => o.fld_TarikhCuti);

            records.Content = publicHolidayData.ToList();

            records.TotalRecords = publicHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publicHolidayData
                .Count();

            return View(records);
        }

        public ActionResult _PublicHolidayAllocationMaintenanceEdit(List<int> leaveID, string kodNegeri, int year)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var kodNegeriString = kodNegeri.ToString();

                var publicHolidayData = db.tbl_CutiUmum.Where(x =>
                    x.fld_NegaraID == NegaraID && x.fld_Negeri == kodNegeri && x.fld_SyarikatID == SyarikatID &&
                    x.fld_Tahun == year &&
                    x.fld_Deleted == false);

                foreach (var publicHoliday in publicHolidayData)
                {
                    publicHoliday.fld_IsSelected = false;
                }

                if (leaveID != null)
                {
                    //remove checkall value from leaveID list
                    leaveID.Remove(0);

                    foreach (var id in leaveID)
                    {
                        var selectedPublicHolidayData = db.tbl_CutiUmum.SingleOrDefault(x => x.fld_CutiUmumID == id);

                        selectedPublicHolidayData.fld_IsSelected = true;
                    }
                }

                db.SaveChanges();

                var connectionData = db.tblConnections.Where(x =>
                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

                var allLadangInNegeriData = db.tbl_Ladang.Where(x =>
                    x.fld_KodNegeri == kodNegeriString && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                    x.fld_Deleted == false).Select(s => s.fld_ID);

                var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                        x.fldOptConfFlag1 == "cutiUmumFlag" &&
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .fldOptConfValue;

                var selectedPublicHolidayCount = leaveID != null ? leaveID.Count : 0;

                foreach (var connection in connectionData)
                {
                    var wilayahID = connection.wilayahID;
                    string hostEstate, catalogEstate, userEstate, passEstate = "";
                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate, wilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

                    foreach (var ladangID in allLadangInNegeriData)
                    {
                        var workerPublicHolidayData = estateConnection.tbl_CutiPeruntukan.Where(x =>
                            x.fld_KodCuti == publicHolidayCode && x.fld_Tahun == year &&
                            x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == wilayahID && x.fld_LadangID == ladangID && x.fld_Deleted == false);

                        foreach (var workerPublicHoliday in workerPublicHolidayData)
                        {
                            workerPublicHoliday.fld_JumlahCuti = selectedPublicHolidayCount;
                        }

                        estateConnection.SaveChanges();
                    }

                    estateConnection.Dispose();
                }

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    year = year,
                    negeri = kodNegeri,
                    checkingdata = "1"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PublicHolidayMaintenance(int page = 1, string sort = "fld_TarikhCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            ViewBag.YearList = yearlist;

            return View();
        }

        public ActionResult _PublicHolidayMaintenance(short? YearList, int page = 1, string sort = "fld_TarikhCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()))
            {
                message = GlobalResCorp.msgChoosePublicHolidayAllocation;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CutiUmumMaster>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publiHolidayData = db.tbl_CutiUmumMaster
                .Where(x => x.fld_Tahun == YearList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            records.Content = publiHolidayData.OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = publiHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publiHolidayData
                .Count();

            return View(records);
        }

        public ActionResult _PublicHolidayMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int drpyear = 0;
            int drprangeyear = 0;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            ViewBag.YearList = yearlist;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PublicHolidayMaintenanceCreate(ModelsCorporate.tbl_CutiUmumMasterViewModelCreate cutiUmumMasterViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_CutiUmumMaster cutiUmumMaster = new ModelsCorporate.tbl_CutiUmumMaster();

                    cutiUmumMaster.fld_KeteranganCuti = GetConfig.UppercaseFirst(cutiUmumMasterViewModelCreate.fld_KeteranganCuti);
                    cutiUmumMaster.fld_TarikhCuti = cutiUmumMasterViewModelCreate.fld_TarikhCuti;
                    cutiUmumMaster.fld_Tahun = (short?)cutiUmumMasterViewModelCreate.fld_TarikhCuti.Value.Year;
                    cutiUmumMaster.fld_NegaraID = NegaraID;
                    cutiUmumMaster.fld_SyarikatID = SyarikatID;
                    cutiUmumMaster.fld_Deleted = false;

                    db.tbl_CutiUmumMaster.Add(cutiUmumMaster);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "publicHolidayMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PublicHolidayMaintenance",
                        controller = "Maintenance",
                        paramName = "YearList",
                        paramValue = cutiUmumMasterViewModelCreate.fld_TarikhCuti.Value.Year
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PublicHolidayMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var publicHolidayData = db.tbl_CutiUmumMaster.SingleOrDefault(x => x.fld_CutiUmumMasterID == id);

            tbl_CutiUmumMasterViewModelEdit cutiUmumMasterViewModelEdit = new tbl_CutiUmumMasterViewModelEdit();

            PropertyCopy.Copy(cutiUmumMasterViewModelEdit, publicHolidayData);

            return PartialView(cutiUmumMasterViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PublicHolidayMaintenanceEdit(ModelsCorporate.tbl_CutiUmumMasterViewModelEdit cutiUmumMasterViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var publicHolidayData = db.tbl_CutiUmumMaster.SingleOrDefault(x => x.fld_CutiUmumMasterID == cutiUmumMasterViewModelEdit.fld_CutiUmumMasterID);

                    publicHolidayData.fld_KeteranganCuti = GetConfig.UppercaseFirst(cutiUmumMasterViewModelEdit.fld_KeteranganCuti);
                    publicHolidayData.fld_TarikhCuti = cutiUmumMasterViewModelEdit.fld_TarikhCuti;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "publicHolidayMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PublicHolidayMaintenance",
                        controller = "Maintenance",
                        paramName = "YearList",
                        paramValue = publicHolidayData.fld_Tahun
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PublicHolidayMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var publicHolidayData = db.tbl_CutiUmumMaster.SingleOrDefault(
                x => x.fld_CutiUmumMasterID == id);

            return PartialView(publicHolidayData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PublicHolidayMaintenanceDelete(ModelsCorporate.tbl_CutiUmumMaster cutiUmumMaster)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var publicHolidayData = db.tbl_CutiUmumMaster.SingleOrDefault(
                    x => x.fld_CutiUmumMasterID == cutiUmumMaster.fld_CutiUmumMasterID);

                bool status = true;

                var message = "";
                if (publicHolidayData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                publicHolidayData.fld_Deleted = status;

                var estatePublicholidayData =
                    db.tbl_CutiUmumLdg.Where(x => x.fld_CutiMasterID == cutiUmumMaster.fld_CutiUmumMasterID);

                foreach (var estatePublicHoliday in estatePublicholidayData)
                {
                    publicHolidayData.fld_Deleted = status;
                }

                var estatePublicHolidayEligibilityData =
                    db.tbl_CutiUmumKelayakan.Where(x => x.fld_CutiMasterID == cutiUmumMaster.fld_CutiUmumMasterID);

                foreach (var estatePublicHoliday in estatePublicholidayData)
                {
                    publicHolidayData.fld_Deleted = status;
                }

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "3",
                    div = "publicHolidayMaintenanceDetails",
                    rootUrl = domain,
                    action = "_PublicHolidayMaintenance",
                    controller = "Maintenance",
                    paramName = "YearList",
                    paramValue = publicHolidayData.fld_Tahun
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CountryMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CountryMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var countryData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "krytnlist" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = countryData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = countryData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = countryData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = countryData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _CountryMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CountryMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var countryData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "krytnlist" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (countryData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "krytnlist";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "countryMaintenanceDetails",
                            rootUrl = domain,
                            action = "_CountryMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CountryMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var getNegara = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "krytnlist" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(getNegara);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CountryMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var countryData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "krytnlist" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    countryData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        countryData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    else
                    {
                        countryData.fldOptConfFlag2 = "";
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        countryData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    else
                    {
                        countryData.fldOptConfFlag3 = "";
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "countryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CountryMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CountryMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var countryData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "krytnlist" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(countryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CountryMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var countryData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "krytnlist" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (countryData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                countryData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "countryMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CountryMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult DesignationMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _DesignationMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var designationData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "designation" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = designationData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = designationData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = designationData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = designationData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _DesignationMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            var getDesignationRunningNo = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fldOptConfID)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            //string designationCode = "";

            //if (getDesignationRunningNo == null)
            //{
            //    designationCode = "1";
            //}

            //else
            //{
            //    int generateNewDesignationNo =
            //        Convert.ToInt32(getDesignationRunningNo) + 1;
            //    designationCode = generateNewDesignationNo.ToString();
            //}

            //optionConfigsWeb.fldOptConfValue = designationCode;

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DesignationMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var designationData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "designation" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (designationData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "designation";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "designationMaintenanceDetails",
                            rootUrl = domain,
                            action = "_DesignationMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _DesignationMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(designationData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DesignationMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "designation" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    designationData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        designationData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    else
                    {
                        designationData.fldOptConfFlag2 = "";
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        designationData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    else
                    {
                        designationData.fldOptConfFlag3 = "";

                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "designationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_DesignationMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _DesignationMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(designationData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DesignationMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var designationData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "designation" &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (designationData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                designationData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "designationMaintenanceDetails",
                    rootUrl = domain,
                    action = "_DesignationMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PassportExpiryListMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _PassportExpiryListMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var passportExpiryData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "exprdmonthlist" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = passportExpiryData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = passportExpiryData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = passportExpiryData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = passportExpiryData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _PassportExpiryListMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PassportExpiryListMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var passportExpiryData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "exprdmonthlist" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    int output;
                    bool bNum = int.TryParse(optionConfigsWeb.fldOptConfValue, out output);

                    if (bNum == false)
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorOptionConfigNotANumber,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    if (passportExpiryData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "exprdmonthlist";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "passportExpiryListMaintenanceDetails",
                            rootUrl = domain,
                            action = "_PassportExpiryListMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PassportExpiryListMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "exprdmonthlist" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(passportExpiryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PassportExpiryListMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "exprdmonthlist" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    passportExpiryData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        passportExpiryData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        passportExpiryData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "passportExpiryListMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PassportExpiryListMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PassportExpiryListMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "exprdmonthlist" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(passportExpiryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PassportExpiryListMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var passportExpiryData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "exprdmonthlist" &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (passportExpiryData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                passportExpiryData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "passportExpiryListMaintenanceDetails",
                    rootUrl = domain,
                    action = "_PassportExpiryListMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CalculationMethodMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CalculationMethodMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var calculationMethodData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "kdhPengiraan" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = calculationMethodData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = calculationMethodData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = calculationMethodData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = calculationMethodData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _CalculationMethodMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CalculationMethodMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var calculationMethodData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "kdhPengiraan" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (calculationMethodData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "kdhPengiraan";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "calculationMethodMaintenanceDetails",
                            rootUrl = domain,
                            action = "_CalculationMethodMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CalculationMethodMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kdhPengiraan" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(calculationMethodData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CalculationMethodMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kdhPengiraan" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    calculationMethodData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        calculationMethodData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        calculationMethodData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "calculationMethodMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CalculationMethodMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CalculationMethodMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kdhPengiraan" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(calculationMethodData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CalculationMethodMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var calculationMethodData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kdhPengiraan" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (calculationMethodData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                calculationMethodData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "calculationMethodMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CalculationMethodMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult BusinessNatureMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _BusinessNatureMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var businessNatureData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "businesnature" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = businessNatureData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = businessNatureData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = businessNatureData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = businessNatureData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _BusinessNatureMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BusinessNatureMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var businessNatureData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "businesnature" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (businessNatureData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "businesnature";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "businessNatureMaintenanceDetails",
                            rootUrl = domain,
                            action = "_BusinessNatureMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _BusinessNatureMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "businesnature" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(businessNatureData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BusinessNatureMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "businesnature" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    businessNatureData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        businessNatureData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        businessNatureData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "businessNatureMaintenanceDetails",
                        rootUrl = domain,
                        action = "_BusinessNatureMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _BusinessNatureMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "businesnature" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(businessNatureData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BusinessNatureMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var businessNatureData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "businesnature" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (businessNatureData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                businessNatureData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "businessNatureMaintenanceDetails",
                    rootUrl = domain,
                    action = "_BusinessNatureMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult FamilyRelationshipMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _FamilyRelationshipMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var familyRelationshipData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "relationship" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = familyRelationshipData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = familyRelationshipData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = familyRelationshipData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = familyRelationshipData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _FamilyRelationshipMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _FamilyRelationshipMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var familyRelationshipData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "relationship" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (familyRelationshipData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "relationship";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "familyRelationshipMaintenanceDetails",
                            rootUrl = domain,
                            action = "_FamilyRelationshipMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _FamilyRelationshipMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "relationship" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(familyRelationshipData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _FamilyRelationshipMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "relationship" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    familyRelationshipData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        familyRelationshipData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        familyRelationshipData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "familyRelationshipMaintenanceDetails",
                        rootUrl = domain,
                        action = "_FamilyRelationshipMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _FamilyRelationshipMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "relationship" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(familyRelationshipData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _FamilyRelationshipMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var familyRelationshipData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "relationship" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (familyRelationshipData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                familyRelationshipData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "familyRelationshipMaintenanceDetails",
                    rootUrl = domain,
                    action = "_FamilyRelationshipMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CropTypeMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CropTypeMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var cropTypeData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "jnsTanaman" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = cropTypeData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = cropTypeData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = cropTypeData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = cropTypeData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _CropTypeMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CropTypeMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var cropTypeData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "jnsTanaman" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (cropTypeData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "jnsTanaman";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "cropTypeMaintenanceDetails",
                            rootUrl = domain,
                            action = "_CropTypeMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CropTypeMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsTanaman" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(cropTypeData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CropTypeMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsTanaman" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    cropTypeData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        cropTypeData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        cropTypeData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "cropTypeMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CropTypeMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CropTypeMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsTanaman" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(cropTypeData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CropTypeMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var cropTypeData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsTanaman" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (cropTypeData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                cropTypeData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "cropTypeMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CropTypeMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CropStatusMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CropStatusMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var cropStatusData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "statusTanaman" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = cropStatusData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = cropStatusData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = cropStatusData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = cropStatusData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _CropStatusMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsCorporate.tblOptionConfigsWebCrop optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWebCrop();

            List<SelectListItem> PSheetList = new List<SelectListItem>();

            PSheetList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "jnsPaysheet" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                .OrderBy(o => o.fldOptConfID)
                .Select(s => new SelectListItem { Value = s.fldOptConfValue.ToString(), Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            PSheetList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" }));

            ViewBag.Selection = PSheetList;
            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CropStatusMaintenanceCreate(ModelsCorporate.tblOptionConfigsWebCrop optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var cropStatusData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "statusTanaman" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (cropStatusData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        ModelsCorporate.tblOptionConfigsWeb optionConfigs = new ModelsCorporate.tblOptionConfigsWeb();

                        PropertyCopy.Copy(optionConfigs, optionConfigsWeb);

                        optionConfigs.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigs.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigs.fldOptConfFlag1 = "statusTanaman";
                        optionConfigs.fldDeleted = false;
                        optionConfigs.fld_NegaraID = NegaraID;
                        optionConfigs.fld_SyarikatID = SyarikatID;

                        if (optionConfigs.fldOptConfFlag2 != null)
                        {
                            optionConfigs.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigs.fldOptConfFlag3 != null)
                        {
                            optionConfigs.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigs);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "cropStatusMaintenanceDetails",
                            rootUrl = domain,
                            action = "_CropStatusMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CropStatusMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "statusTanaman" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            List<SelectListItem> PSheetList = new List<SelectListItem>();
            PSheetList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "jnsPaysheet" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                .OrderBy(o => o.fldOptConfID)
                .Select(s => new SelectListItem { Value = s.fldOptConfValue.ToString(), Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();

            ViewBag.Selection = PSheetList;

            return PartialView(cropStatusData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CropStatusMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "statusTanaman" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    cropStatusData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        cropStatusData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        cropStatusData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "cropStatusMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CropStatusMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CropStatusMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "statusTanaman" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(cropStatusData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CropStatusMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "statusTanaman" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (cropStatusData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                cropStatusData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "cropStatusMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CropStatusMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult WorkerTypeMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _WorkerTypeMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var workerTypeData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "jnsPkj" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = workerTypeData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = workerTypeData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = workerTypeData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = workerTypeData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _WorkerTypeMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWebTest optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWebTest();

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _WorkerTypeMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var cropStatusData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "jnsPkj" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (cropStatusData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "jnsPkj";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "workerTypeMaintenanceDetails",
                            rootUrl = domain,
                            action = "_WorkerTypeMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _WorkerTypeMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsPkj" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(cropStatusData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _WorkerTypeMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsPkj" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    cropStatusData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        cropStatusData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        cropStatusData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "workerTypeMaintenanceDetails",
                        rootUrl = domain,
                        action = "_WorkerTypeMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _WorkerTypeMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "jnsPkj" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(cropStatusData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _WorkerTypeMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var cropStatusData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "jnsPkj" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (cropStatusData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                cropStatusData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "workerTypeMaintenanceDetails",
                    rootUrl = domain,
                    action = "_WorkerTypeMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult StateMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _StateMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var stateData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "negeri" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = stateData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = stateData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = stateData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = stateData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _StateMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            var getStateRunningNo = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fldOptConfID)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            string stateCode = "";

            if (getStateRunningNo == null)
            {
                stateCode = "1";
            }

            else
            {
                int generateNewStateNo =
                    Convert.ToInt32(getStateRunningNo) + 1;
                stateCode = generateNewStateNo.ToString();
            }

            optionConfigsWeb.fldOptConfValue = stateCode;
            optionConfigsWeb.fldOptConfFlag3 = stateCode;

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _StateMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var stateData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "negeri" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (stateData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "negeri";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "stateMaintenanceDetails",
                            rootUrl = domain,
                            action = "_StateMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _StateMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(stateData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _StateMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "negeri" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    stateData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper(); //03/03/2021 sepul ubah GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc); kpd .ToUpper

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        stateData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        stateData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "stateMaintenanceDetails",
                        rootUrl = domain,
                        action = "_StateMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _StateMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(stateData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _StateMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var stateData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (stateData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                stateData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "stateMaintenanceDetails",
                    rootUrl = domain,
                    action = "_StateMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult InactiveReasonMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _InactiveReasonMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var inactiveReasonData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "sbbTakAktif" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = inactiveReasonData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = inactiveReasonData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = inactiveReasonData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = inactiveReasonData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _InactiveReasonMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            var getInactiveReasonRunningNo = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fldOptConfID)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            string inactiveReasonCode = "";

            if (getInactiveReasonRunningNo == null)
            {
                inactiveReasonCode = "01";
            }

            else
            {
                int generateNewInactiveReasonNo = Convert.ToInt32(getInactiveReasonRunningNo) + 1;
                inactiveReasonCode = generateNewInactiveReasonNo.ToString("00");
            }

            optionConfigsWeb.fldOptConfValue = inactiveReasonCode;

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _InactiveReasonMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var inactiveReasonData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "sbbTakAktif" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (inactiveReasonData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "sbbTakAktif";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "inactiveReasonMaintenanceDetails",
                            rootUrl = domain,
                            action = "_InactiveReasonMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _InactiveReasonMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(inactiveReasonData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _InactiveReasonMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTakAktif" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    inactiveReasonData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        inactiveReasonData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        inactiveReasonData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "inactiveReasonMaintenanceDetails",
                        rootUrl = domain,
                        action = "_InactiveReasonMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _InactiveReasonMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(inactiveReasonData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _InactiveReasonMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var inactiveReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (inactiveReasonData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                inactiveReasonData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "inactiveReasonMaintenanceDetails",
                    rootUrl = domain,
                    action = "_InactiveReasonMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult RejectReasonMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _RejectReasonMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var rejectReasonData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "sbbTolak" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = rejectReasonData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = rejectReasonData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = rejectReasonData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = rejectReasonData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _RejectReasonMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            var rejectReasonCodeIndicator = GetConfig.GetWebConfigValue("kdSbbTlkPermohonan", NegaraID, SyarikatID);

            var getRejectReasonRunningNo = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fldOptConfID)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            string rejectReasonCode = "";

            if (getRejectReasonRunningNo == null)
            {
                rejectReasonCode = rejectReasonCodeIndicator + "01";
            }

            else
            {
                int generateNewRejectReasonNo = Convert.ToInt32(getRejectReasonRunningNo.Substring(rejectReasonCodeIndicator.Length)) + 1;
                rejectReasonCode = rejectReasonCodeIndicator + generateNewRejectReasonNo.ToString("00");
            }

            optionConfigsWeb.fldOptConfValue = rejectReasonCode;

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _RejectReasonMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var rejectReasonData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "sbbTolak" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (rejectReasonData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "sbbTolak";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        if (optionConfigsWeb.fldOptConfFlag2 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                        }

                        if (optionConfigsWeb.fldOptConfFlag3 != null)
                        {
                            optionConfigsWeb.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                        }

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "rejectReasonMaintenanceDetails",
                            rootUrl = domain,
                            action = "_RejectReasonMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _RejectReasonMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(rejectReasonData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _RejectReasonMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTolak" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    rejectReasonData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    if (optionConfigsWeb.fldOptConfFlag2 != null)
                    {
                        rejectReasonData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    }

                    if (optionConfigsWeb.fldOptConfFlag3 != null)
                    {
                        rejectReasonData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "rejectReasonMaintenanceDetails",
                        rootUrl = domain,
                        action = "_RejectReasonMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _RejectReasonMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(rejectReasonData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _RejectReasonMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var rejectReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sbbTolak" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (rejectReasonData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                rejectReasonData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "rejectReasonMaintenanceDetails",
                    rootUrl = domain,
                    action = "_RejectReasonMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult ContributionCategoryMaintenance(string filter, int page = 1, string sort = "fld_NamaCaruman",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _ContributionCategoryMaintenance(string filter, int page = 1,
            string sort = "fld_NamaCaruman",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CarumanTambahan>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var contributionCategoryData = db.tbl_CarumanTambahan
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = contributionCategoryData
                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = contributionCategoryData
                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = contributionCategoryData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = contributionCategoryData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _ContributionCategoryMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> pencarumList = new List<SelectListItem>();

            pencarumList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pencarum" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            pencarumList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "", Selected = true });

            ViewBag.PencarumList = pencarumList;

            List<SelectListItem> berjadualList = new List<SelectListItem>();

            berjadualList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            berjadualList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "", Selected = true });

            ViewBag.BerjadualList = berjadualList;

            List<SelectListItem> warganegaraList = new List<SelectListItem>();

            warganegaraList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pencarumKategori" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            warganegaraList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "", Selected = true });

            ViewBag.WarganegaraList = warganegaraList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionCategoryMaintenanceCreate(ModelsCorporate.tbl_CarumanTambahanViewModelCreate carumanTambahanViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (db.tbl_CarumanTambahan.Any(x => x.fld_KodCaruman.ToUpper() ==
                                                carumanTambahanViewModelCreate.fld_KodCaruman.ToUpper()))
            {
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_CarumanTambahan carumanTambahan = new ModelsCorporate.tbl_CarumanTambahan();

                    PropertyCopy.Copy(carumanTambahan, carumanTambahanViewModelCreate);

                    carumanTambahan.fld_KodCaruman = carumanTambahan.fld_KodCaruman.ToUpper();
                    carumanTambahan.fld_NamaCaruman = GetConfig.UppercaseFirst(carumanTambahan.fld_NamaCaruman);
                    carumanTambahan.fld_CarumanOleh = carumanTambahan.fld_CarumanOleh;
                    carumanTambahan.fld_Deleted = false;
                    carumanTambahan.fld_NegaraID = (int)NegaraID;
                    carumanTambahan.fld_SyarikatID = (int)SyarikatID;

                    db.tbl_CarumanTambahan.Add(carumanTambahan);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "contributionCategoryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_ContributionCategoryMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult IsContributionCodeExist(string fld_KodCaruman)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            return Json(
                !db.tbl_CarumanTambahan.Any(x => x.fld_KodCaruman.ToUpper() == fld_KodCaruman.ToUpper() &&
                                                 x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
                JsonRequestBehavior.AllowGet);
        }

        public ActionResult _ContributionCategoryMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
                x => x.fld_JenisCarumanID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            List<SelectListItem> pencarumList = new List<SelectListItem>();

            pencarumList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pencarum" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text", contributionCategoryData.fld_CarumanOleh).ToList();
            pencarumList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.PencarumList = pencarumList;

            List<SelectListItem> pilihanList = new List<SelectListItem>();

            pilihanList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            pilihanList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.PilihanList = pilihanList;

            List<SelectListItem> warganegaraList = new List<SelectListItem>();

            warganegaraList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pencarumKategori" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            warganegaraList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "", Selected = true });

            ViewBag.WarganegaraList = warganegaraList;

            return PartialView(contributionCategoryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionCategoryMaintenanceEdit(ModelsCorporate.tbl_CarumanTambahan carumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
                        x => x.fld_JenisCarumanID == carumanTambahan.fld_JenisCarumanID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    contributionCategoryData.fld_NamaCaruman = GetConfig.UppercaseFirst(carumanTambahan.fld_NamaCaruman);
                    contributionCategoryData.fld_CarumanOleh = carumanTambahan.fld_CarumanOleh;
                    contributionCategoryData.fld_Berjadual = carumanTambahan.fld_Berjadual;
                    contributionCategoryData.fld_Default = carumanTambahan.fld_Default;
                    contributionCategoryData.fld_Warganegara = carumanTambahan.fld_Warganegara;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "contributionCategoryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_ContributionCategoryMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _ContributionCategoryMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
                x => x.fld_JenisCarumanID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(contributionCategoryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionCategoryMaintenanceDelete(ModelsCorporate.tbl_CarumanTambahan carumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var contributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(
                    x => x.fld_JenisCarumanID == carumanTambahan.fld_JenisCarumanID && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (contributionCategoryData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                contributionCategoryData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "contributionCategoryMaintenanceDetails",
                    rootUrl = domain,
                    action = "_ContributionCategoryMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult ContributionCategoryMaintenanceInUse(string filter, int page = 1, string sort = "fld_NamaCaruman",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _ContributionCategoryMaintenanceInUse(string filter, int page = 1,
            string sort = "fld_NamaCaruman",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CarumanTambahan>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var contributionCategoryData = db.tbl_CarumanTambahan
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = contributionCategoryData
                    .Where(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = contributionCategoryData
                    .Count(x => x.fld_KodCaruman.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_NamaCaruman.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = contributionCategoryData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = contributionCategoryData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _ContributionCategoryMaintenanceInUseEdit(List<int> carumanTambahanID)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var contributionCategoryData = db.tbl_CarumanTambahan.Where(x =>
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                    x.fld_Deleted == false);

                foreach (var contributionCategory in contributionCategoryData)
                {
                    contributionCategory.fld_Default = false;
                }

                if (carumanTambahanID != null)
                {
                    //remove checkall value from carumanTambahanID list
                    carumanTambahanID.Remove(0);

                    foreach (var id in carumanTambahanID)
                    {
                        var selectedContributionCategoryData = db.tbl_CarumanTambahan.SingleOrDefault(x => x.fld_JenisCarumanID == id);

                        selectedContributionCategoryData.fld_Default = true;
                    }
                }

                db.SaveChanges();

                var connectionData = db.tblConnections.Where(x =>
                    x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.deleted == false);

                foreach (var connection in connectionData)
                {
                    var wilayahID = connection.wilayahID;
                    string hostEstate, catalogEstate, userEstate, passEstate = "";
                    Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate,
                        wilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection =
                        MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

                    var workerContributionData = estateConnection.tbl_PkjCarumanTambahan.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Deleted == false);

                    if (workerContributionData.Count() != 0)
                    {
                        estateConnection.tbl_PkjCarumanTambahan.RemoveRange(workerContributionData);
                        estateConnection.SaveChanges();
                    }

                    var workerData = estateConnection.tbl_Pkjmast.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_Kdaktf == "1");

                    var activeContributionCategoryData = db.tbl_CarumanTambahan.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false &&
                        x.fld_Default == true);

                    var warganegaraCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                        x.fldOptConfFlag1 == "krytnlist" && x.fldOptConfFlag3 == "1" && x.fld_NegaraID == NegaraID &&
                        x.fld_SyarikatID == SyarikatID).fldOptConfValue;

                    var pkjCarumanTambahanData = estateConnection.tbl_PkjCarumanTambahan.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                        x.fld_WilayahID == wilayahID).ToList();

                    if (pkjCarumanTambahanData.Count != 0)
                    {
                        estateConnection.tbl_PkjCarumanTambahan.RemoveRange(pkjCarumanTambahanData);
                        estateConnection.SaveChanges();
                    }

                    foreach (var worker in workerData)
                    {
                        if (worker.fld_Kdrkyt == warganegaraCode)
                        {
                            DateDiff workerAge = new DateDiff(Convert.ToDateTime(worker.fld_Trlhr).AddDays(-1),
                                DateTime.Now);

                            foreach (var activeContribution in activeContributionCategoryData)
                            {
                                var activeSubContributionCategoryData = db.tbl_SubCarumanTambahan.Where(x =>
                                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_Deleted == false && x.fld_KodCaruman == activeContribution.fld_KodCaruman);

                                foreach (var activeSubContribution in activeSubContributionCategoryData)
                                {
                                    if (activeSubContribution.fld_UmurLower <= workerAge.Years &&
                                        activeSubContribution.fld_UmurUpper >= workerAge.Years)
                                    {
                                        tbl_PkjCarumanTambahan pkjCarumanTambahan = new tbl_PkjCarumanTambahan();

                                        pkjCarumanTambahan.fld_Nopkj = worker.fld_Nopkj;
                                        pkjCarumanTambahan.fld_KodCaruman = activeContribution.fld_KodCaruman;
                                        pkjCarumanTambahan.fld_KodSubCaruman = activeSubContribution.fld_KodSubCaruman;
                                        pkjCarumanTambahan.fld_NegaraID = NegaraID;
                                        pkjCarumanTambahan.fld_SyarikatID = SyarikatID;
                                        pkjCarumanTambahan.fld_WilayahID = worker.fld_WilayahID;
                                        pkjCarumanTambahan.fld_LadangID = worker.fld_LadangID;
                                        pkjCarumanTambahan.fld_Deleted = false;

                                        estateConnection.tbl_PkjCarumanTambahan.Add(pkjCarumanTambahan);
                                    }
                                }
                            }
                        }
                    }

                    estateConnection.SaveChanges();
                    estateConnection.Dispose();
                }

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "1"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult ContributionSubCategoryMaintenance(string ContributionList, int page = 1, string sort = "fld_KodSubCaruman",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> contributionList = new List<SelectListItem>();

            contributionList = new SelectList(
                db.tbl_CarumanTambahan
                    .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NamaCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_NamaCaruman }),
                "Value", "Text").ToList();
            contributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.ContributionList = contributionList;

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _ContributionSubCategoryMaintenance(string ContributionList, int page = 1,
            string sort = "fld_KodSubCaruman",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (String.IsNullOrEmpty(ContributionList))
            {
                ViewBag.Message = "Sila Pilih Caruman";
                return View();
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_SubCarumanTambahan>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var contributionSubCategoryData = db.tbl_SubCarumanTambahan
                .Where(x => x.fld_KodCaruman == ContributionList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            records.Content = contributionSubCategoryData.OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = contributionSubCategoryData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.TotalRecords = contributionSubCategoryData
                .Count();
            ViewBag.ContributionCode = ContributionList;

            if (contributionSubCategoryData.Count() <= 0)
            {
                ViewBag.Message = "Tiada Maklumat";
            }

            return View(records);
        }

        public ActionResult _ContributionSubCategoryMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> contributionList = new List<SelectListItem>();

            contributionList = new SelectList(
                db.tbl_CarumanTambahan
                    .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NamaCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_NamaCaruman }),
                "Value", "Text").ToList();
            contributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.ContributionList = contributionList;

            ModelsCorporate.tbl_SubCarumanTambahan subCarumanTambahan = new ModelsCorporate.tbl_SubCarumanTambahan();

            return PartialView(subCarumanTambahan);
        }

        public JsonResult checkSubContributionRunningNo(string contributionCode)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (String.IsNullOrEmpty(contributionCode))
            {
                return Json(0);
            }

            else
            {
                var getCurrentSubContributionRunningNo = db.tbl_SubCarumanTambahan
                    .Where(x => x.fld_KodSubCaruman.Contains(contributionCode) && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID)
                    .OrderByDescending(o => o.fld_KodSubCaruman)
                    .Select(s => s.fld_KodSubCaruman)
                    .FirstOrDefault();

                int contributionCodeLength = contributionCode.Length;

                string contributionSubCategoryCode = "";

                if (getCurrentSubContributionRunningNo == null)
                {
                    contributionSubCategoryCode = contributionCode + "01";
                }

                else
                {
                    int generateNewSubContributionNo = Convert.ToInt32(getCurrentSubContributionRunningNo.Substring(contributionCodeLength)) + 1;
                    contributionSubCategoryCode = contributionCode + generateNewSubContributionNo.ToString("00");
                }

                return Json(new { subContributionCode = contributionSubCategoryCode });
            }
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionSubCategoryMaintenanceCreate(ModelsCorporate.tbl_SubCarumanTambahan subCarumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    subCarumanTambahan.fld_KeteranganSubCaruman = GetConfig.UppercaseFirst(subCarumanTambahan.fld_KeteranganSubCaruman);
                    subCarumanTambahan.fld_NegaraID = (int)NegaraID;
                    subCarumanTambahan.fld_SyarikatID = (int)SyarikatID;
                    subCarumanTambahan.fld_Deleted = false;

                    db.tbl_SubCarumanTambahan.Add(subCarumanTambahan);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "contributionSubCategoryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_ContributionSubCategoryMaintenance",
                        controller = "Maintenance",
                        paramName = "ContributionList",
                        paramValue = subCarumanTambahan.fld_KodCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _ContributionSubCategoryMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var contributionSubCategoryData = db.tbl_SubCarumanTambahan
                .SingleOrDefault(x => x.fld_JenisSubCarumanID == id && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            return PartialView(contributionSubCategoryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionSubCategoryMaintenanceEdit(ModelsCorporate.tbl_SubCarumanTambahan subCarumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var contributionSubCategoryData = db.tbl_SubCarumanTambahan.SingleOrDefault(
                        x => x.fld_JenisSubCarumanID == subCarumanTambahan.fld_JenisSubCarumanID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    contributionSubCategoryData.fld_KeteranganSubCaruman = GetConfig.UppercaseFirst(subCarumanTambahan.fld_KeteranganSubCaruman);
                    contributionSubCategoryData.fld_UmurLower = subCarumanTambahan.fld_UmurLower;
                    contributionSubCategoryData.fld_UmurUpper = subCarumanTambahan.fld_UmurUpper;
                    contributionSubCategoryData.fld_KadarPekerja = subCarumanTambahan.fld_KadarPekerja;
                    contributionSubCategoryData.fld_KadarMajikan = subCarumanTambahan.fld_KadarMajikan;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "contributionSubCategoryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_ContributionSubCategoryMaintenance",
                        controller = "Maintenance",
                        paramName = "ContributionList",
                        paramValue = subCarumanTambahan.fld_KodCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _ContributionSubCategoryMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var contributionSubCategoryData = db.tbl_SubCarumanTambahan
                .SingleOrDefault(x => x.fld_JenisSubCarumanID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(contributionSubCategoryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionSubCategoryMaintenanceDelete(ModelsCorporate.tbl_SubCarumanTambahan subCarumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var contributionSubCategoryData = db.tbl_SubCarumanTambahan.SingleOrDefault(
                    x => x.fld_JenisSubCarumanID == subCarumanTambahan.fld_JenisSubCarumanID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (contributionSubCategoryData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                contributionSubCategoryData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "2",
                    div = "contributionSubCategoryMaintenanceDetails",
                    rootUrl = domain,
                    action = "_ContributionSubCategoryMaintenance",
                    controller = "Maintenance",
                    paramName = "ContributionList",
                    paramValue = subCarumanTambahan.fld_KodCaruman
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult ContributionTableMaintenance(string SubContributionList, int page = 1, string sort = "fld_GajiLower",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> subContributionList = new List<SelectListItem>();

            subContributionList = new SelectList(
                db.tbl_SubCarumanTambahan
                .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodSubCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodSubCaruman, Text = s.fld_KeteranganSubCaruman }),
                "Value", "Text").ToList();
            subContributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.SubContributionList = subContributionList;

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _ContributionTableMaintenance(string SubContributionList, int page = 1,
            string sort = "fld_GajiLower",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (String.IsNullOrEmpty(SubContributionList))
            {
                ViewBag.Message = "Sila Pilih Sub Caruman";
                return View();
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_JadualCarumanTambahan>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var contributionTableData = db.tbl_JadualCarumanTambahan
                .Where(x => x.fld_KodSubCaruman == SubContributionList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            records.Content = contributionTableData.OrderBy(sort + " " + sortdir)
                 .Skip((page - 1) * pageSize)
                 .Take(pageSize)
                 .ToList();

            records.TotalRecords = contributionTableData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.TotalRecords = contributionTableData
                .Count();
            ViewBag.SubContributionCode = SubContributionList;

            if (contributionTableData.Count() <= 0)
            {
                ViewBag.Message = "Tiada Maklumat";
            }

            return View(records);
        }

        public ActionResult _ContributionTableMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> subContributionList = new List<SelectListItem>();

            subContributionList = new SelectList(
                db.tbl_SubCarumanTambahan
                    .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodSubCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodSubCaruman, Text = s.fld_KeteranganSubCaruman }),
                "Value", "Text").ToList();
            subContributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.SubContributionList = subContributionList;

            ModelsCorporate.tbl_JadualCarumanTambahan jadualCarumanTambahan = new ModelsCorporate.tbl_JadualCarumanTambahan();

            return PartialView(jadualCarumanTambahan);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionTableMaintenanceCreate(ModelsCorporate.tbl_JadualCarumanTambahan jadualCarumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    //jadualCarumanTambahan.fld_KodSubCaruman = SubContributionList;
                    jadualCarumanTambahan.fld_NegaraID = (int)NegaraID;
                    jadualCarumanTambahan.fld_SyarikatID = (int)SyarikatID;
                    jadualCarumanTambahan.fld_Deleted = false;

                    db.tbl_JadualCarumanTambahan.Add(jadualCarumanTambahan);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "contributionTableMaintenanceDetails",
                        rootUrl = domain,
                        action = "_ContributionTableMaintenance",
                        controller = "Maintenance",
                        paramName = "SubContributionList",
                        paramValue = jadualCarumanTambahan.fld_KodSubCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _ContributionTableMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var contributionTableData = db.tbl_JadualCarumanTambahan
                .SingleOrDefault(x => x.fld_JadualCarumanTambahanID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(contributionTableData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionTableMaintenanceEdit(ModelsCorporate.tbl_JadualCarumanTambahan jadualCarumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var contributionTableData = db.tbl_JadualCarumanTambahan.SingleOrDefault(
                        x => x.fld_JadualCarumanTambahanID == jadualCarumanTambahan.fld_JadualCarumanTambahanID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    contributionTableData.fld_GajiLower = jadualCarumanTambahan.fld_GajiLower;
                    contributionTableData.fld_GajiUpper = jadualCarumanTambahan.fld_GajiUpper;
                    contributionTableData.fld_CarumanPekerja = jadualCarumanTambahan.fld_CarumanPekerja;
                    contributionTableData.fld_CarumanMajikan = jadualCarumanTambahan.fld_CarumanMajikan;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "contributionTableMaintenanceDetails",
                        rootUrl = domain,
                        action = "_ContributionTableMaintenance",
                        controller = "Maintenance",
                        paramName = "SubContributionList",
                        paramValue = jadualCarumanTambahan.fld_KodSubCaruman
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _ContributionTableMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var contributionTableData = db.tbl_JadualCarumanTambahan
                .SingleOrDefault(x => x.fld_JadualCarumanTambahanID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(contributionTableData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _ContributionTableMaintenanceDelete(ModelsCorporate.tbl_JadualCarumanTambahan jadualCarumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var contributionTableData = db.tbl_JadualCarumanTambahan.SingleOrDefault(
                    x => x.fld_JadualCarumanTambahanID == jadualCarumanTambahan.fld_JadualCarumanTambahanID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (contributionTableData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                contributionTableData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "2",
                    div = "contributionTableMaintenanceDetails",
                    rootUrl = domain,
                    action = "_ContributionTableMaintenance",
                    controller = "Maintenance",
                    paramName = "SubContributionList",
                    paramValue = contributionTableData.fld_KodSubCaruman
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult UnitMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _UnitMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "unit" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _UnitMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> numberList = new List<SelectListItem>();

            numberList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.NumberList = numberList;

            List<SelectListItem> categoryList = new List<SelectListItem>();

            categoryList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.CategoryList = categoryList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _UnitMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "unit" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "unit";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "unitMaintenanceDetails",
                            rootUrl = domain,
                            action = "_UnitMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _UnitMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWebUnitViewModel unitViewModel = new ModelsCorporate.tblOptionConfigsWebUnitViewModel();

            PropertyCopy.Copy(unitViewModel, unitData);

            List<SelectListItem> numberList = new List<SelectListItem>();

            numberList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.NumberList = numberList;

            List<SelectListItem> categoryList = new List<SelectListItem>();

            categoryList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.CategoryList = categoryList;

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _UnitMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebUnitViewModel optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "unit" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper(); //sepul 03/03/2021 ubah dari GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "unitMaintenanceDetails",
                        rootUrl = domain,
                        action = "_UnitMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _UnitMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(unitData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _UnitMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "unitMaintenanceDetails",
                    rootUrl = domain,
                    action = "_UnitMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //kamalia 18/02/2021
        public ActionResult MinimumDailyWageValueMaintenance()
        {
            return RedirectToAction("MinimumWageValueMaintenance", "Maintenance2");
        }

        //kamalia 16/02/2021 -end
        public ActionResult MinimumWageReasonMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _MinimumWageReasonMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var minimumWageReasonData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "sebabGajiMinima" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = minimumWageReasonData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = minimumWageReasonData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = minimumWageReasonData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = minimumWageReasonData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _MinimumWageReasonMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            var getCurrentMinimumWageReasonRunningNo = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "sebabGajiMinima" && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fldOptConfID)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            var minimumWageReasonCodeLength = GetConfig.GetWebConfigValue("kdSebabGajiMinima", NegaraID, SyarikatID);

            string minimumWageReasonCode = "";

            if (getCurrentMinimumWageReasonRunningNo == null)
            {
                minimumWageReasonCode = "01";
            }

            else
            {
                int generateNewMinimumWageReasonNo =
                    Convert.ToInt32(getCurrentMinimumWageReasonRunningNo.Substring(minimumWageReasonCodeLength.Length)) + 1;
                minimumWageReasonCode = generateNewMinimumWageReasonNo.ToString("00");
            }

            optionConfigsWeb.fldOptConfValue = minimumWageReasonCodeLength + minimumWageReasonCode;

            return PartialView(optionConfigsWeb);
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MinimumWageReasonMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    optionConfigsWeb.fldOptConfFlag1 = "sebabGajiMinima";
                    optionConfigsWeb.fldDeleted = false;
                    optionConfigsWeb.fld_NegaraID = NegaraID;
                    optionConfigsWeb.fld_SyarikatID = SyarikatID;

                    db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "minimumWageReasonMaintenanceDetails",
                        rootUrl = domain,
                        action = "_MinimumWageReasonMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _MinimumWageReasonMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sebabGajiMinima" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(minimumWageReasonData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MinimumWageReasonMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sebabGajiMinima" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    minimumWageReasonData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    minimumWageReasonData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
                    minimumWageReasonData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "minimumWageReasonMaintenanceDetails",
                        rootUrl = domain,
                        action = "_MinimumWageReasonMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _MinimumWageReasonMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "sebabGajiMinima" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(minimumWageReasonData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MinimumWageReasonMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var minimumWageReasonData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "sebabGajiMinima" &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (minimumWageReasonData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                minimumWageReasonData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "minimumWageReasonMaintenanceDetails",
                    rootUrl = domain,
                    action = "_MinimumWageReasonMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult MinimumWageActionMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _MinimumWageActionMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var minimumWageActionData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "tindakanGajiMinima" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = minimumWageActionData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = minimumWageActionData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = minimumWageActionData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = minimumWageActionData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _MinimumWageActionMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

            var getCurrentMinimumWageActionRunningNo = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "tindakanGajiMinima" && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fldOptConfID)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            var minimumWageActionCodeLength = GetConfig.GetWebConfigValue("kdTindakanGajiMinima", NegaraID, SyarikatID);

            string minimumWageActionCode = "";

            if (getCurrentMinimumWageActionRunningNo == null)
            {
                minimumWageActionCode = "01";
            }

            else
            {
                int generateNewMinimumWageActionNo =
                    Convert.ToInt32(getCurrentMinimumWageActionRunningNo.Substring(minimumWageActionCodeLength.Length)) + 1;
                minimumWageActionCode = generateNewMinimumWageActionNo.ToString("00");
            }

            optionConfigsWeb.fldOptConfValue = minimumWageActionCodeLength + minimumWageActionCode;

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MinimumWageActionMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var minimumWageActionData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "tindakanGajiMinima" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (minimumWageActionData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "tindakanGajiMinima";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "minimumWageActionMaintenanceDetails",
                            rootUrl = domain,
                            action = "_MinimumWageActionMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _MinimumWageActionMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "tindakanGajiMinima" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(minimumWageActionData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MinimumWageActionMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "tindakanGajiMinima" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    minimumWageActionData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    minimumWageActionData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
                    minimumWageActionData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "minimumWageActionMaintenanceDetails",
                        rootUrl = domain,
                        action = "_MinimumWageActionMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _MinimumWageActionMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "tindakanGajiMinima" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(minimumWageActionData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MinimumWageActionMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var minimumWageActionData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "tindakanGajiMinima" &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (minimumWageActionData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                minimumWageActionData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "minimumWageActionMaintenanceDetails",
                    rootUrl = domain,
                    action = "_MinimumWageActionMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult MinimumWageValueMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _MinimumWageValueMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var minimumWageValueData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "gajiMinima" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

            records.Content = minimumWageValueData.OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = minimumWageValueData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _MinimumWageValueMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var minimumWageValueData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "gajiMinima" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

            ModelsCorporate.tblOptionConfigsWebMinimumWageValueViewModel minimumWagevalueViewModel = new ModelsCorporate.tblOptionConfigsWebMinimumWageValueViewModel();

            PropertyCopy.Copy(minimumWagevalueViewModel, minimumWageValueData);

            return PartialView(minimumWagevalueViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MinimumWageValueMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var minimumWageValueData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "gajiMinima" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

                    minimumWageValueData.fldOptConfValue = optionConfigsWeb.fldOptConfValue;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "minimumWageValueMaintenanceDetails",
                        rootUrl = domain,
                        action = "_MinimumWageValueMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CutOffDateMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CutOffDateMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var cutOffDateData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "haritrakhir" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

            records.Content = cutOffDateData.OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = cutOffDateData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _CutOffDateMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var cutOffDateData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "haritrakhir" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

            ModelsCorporate.tblOptionConfigsWebCutOffDateValueViewModel cutOffDatevalueViewModel = new ModelsCorporate.tblOptionConfigsWebCutOffDateValueViewModel();

            PropertyCopy.Copy(cutOffDatevalueViewModel, cutOffDateData);

            return PartialView(cutOffDatevalueViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CutOffDateMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                int n;
                bool isNumeric = int.TryParse(optionConfigsWeb.fldOptConfValue, out n);

                if (isNumeric == false || n < 0)
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }

                if (ModelState.IsValid)
                {
                    var cutOffDateData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "haritrakhir" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

                    cutOffDateData.fldOptConfValue = optionConfigsWeb.fldOptConfValue;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "cutOffDateMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CutOffDateMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult IncentiveMaintenance(string IncentiveList, int page = 1, string sort = "fld_KodInsentif",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> incentiveList = new List<SelectListItem>();

            incentiveList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            incentiveList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.IncentiveList = incentiveList;

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _IncentiveMaintenance(string IncentiveList, int page = 1,
            string sort = "fld_KodInsentif",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (String.IsNullOrEmpty(IncentiveList))
            {
                ViewBag.Message = "Sila Pilih Jenis Insentif";
                return View();
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_JenisInsentif>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var incentiveCategoryData = db.tbl_JenisInsentif
                .Where(x => x.fld_KodInsentif.Contains(IncentiveList) && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            records.Content = incentiveCategoryData.OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = incentiveCategoryData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.TotalRecords = incentiveCategoryData
                .Count();
            ViewBag.ContributionCode = IncentiveList;

            if (incentiveCategoryData.Count() <= 0)
            {
                ViewBag.Message = "Tiada Maklumat";
            }

            return View(records);
        }

        public ActionResult _IncentiveMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> incentiveList = new List<SelectListItem>();

            incentiveList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            incentiveList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.IncentiveList = incentiveList;

            List<SelectListItem> GLList = new List<SelectListItem>();

            GLList = new SelectList(
                db.tbl_Lejar
                    .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodLejar)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
                "Value", "Text").ToList();
            GLList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.GLList = GLList;

            List<SelectListItem> optionList = new List<SelectListItem>();

            optionList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            optionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.OptionList = optionList;

            List<SelectListItem> workerTypeList = new List<SelectListItem>();

            workerTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisKelayakanInsentif" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            workerTypeList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.WorkerTypeList = workerTypeList;

            List<SelectListItem> incentiveValueTypeList = new List<SelectListItem>();

            incentiveValueTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "tetapanNilai" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            incentiveValueTypeList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.IncentiveValueTypeList = incentiveValueTypeList;

            //fatin added - 30/03/2023
            List<SelectListItem> CompanyCode = new List<SelectListItem>();

            CompanyCode = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "kodSAPSyarikat" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc + " (" + s.fldOptConfValue + ") " }),
                "Value", "Text").ToList();
            CompanyCode.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CompanyCode = CompanyCode;
            // end

            ModelsCorporate.tbl_JenisInsentif jenisInsentif = new ModelsCorporate.tbl_JenisInsentif();

            return PartialView(jenisInsentif);
        }
        //fatin added - 06/04/2023
        public ActionResult checkKodSyarikat(string companycode)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.listGL = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "KodGLAdmin" && x.fldOptConfFlag3 == companycode && x.fldDeleted == false
                                       && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).ToList();
            ViewBag.countlist = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "KodGLAdmin" && x.fldOptConfFlag3 == companycode && x.fldDeleted == false
                                       && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).Count();

            return View("ListGLCode");
        }
        //end 
        public JsonResult checkIncentiveRunningNo(string incentiveType)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (!String.IsNullOrEmpty(incentiveType))
            {
                var getIncentiveRunningNo = db.tbl_JenisInsentif
                    .Where(x => x.fld_KodInsentif.Contains(incentiveType) && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID)
                    .OrderByDescending(o => o.fld_KodInsentif)
                    .Select(s => new { s.fld_KodInsentif, s.fld_KodAktvt })
                    .FirstOrDefault();

                int incentiveTypeCodeLength = incentiveType.Length;

                string incentiveCode = "";

                if (getIncentiveRunningNo == null)
                {
                    incentiveCode = incentiveType + "01";
                }

                else
                {
                    int generateNewInsentiveNo =
                        Convert.ToInt32(getIncentiveRunningNo.fld_KodInsentif.Substring(incentiveTypeCodeLength)) + 1;
                    incentiveCode = incentiveType + generateNewInsentiveNo.ToString("00");
                }

                var getInsentifConfigData = db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fldOptConfValue == incentiveType &&
                                x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .Select(s => new { s.fldOptConfFlag2 })
                    .SingleOrDefault();

                string activityCode = "";

                if (getIncentiveRunningNo == null)
                {
                    activityCode = getInsentifConfigData.fldOptConfFlag2;
                }

                else
                {
                    int generateNewKodAktvtNo = Convert.ToInt32(getIncentiveRunningNo.fld_KodAktvt) + 1;
                    activityCode = generateNewKodAktvtNo.ToString();
                }

                return Json(new
                {
                    incentiveCode = incentiveCode,
                    activityCode = activityCode
                });
            }

            else
            {
                return Json(new
                {
                    incentiveCode = "",
                    activityCode = ""
                });
            }
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        //original code
        //public ActionResult _IncentiveMaintenanceCreate(ModelsCorporate.tbl_JenisInsentif jenisInsentif) 

        //fatin added - 30/03/2023
        public ActionResult _IncentiveMaintenanceCreate(ModelsCorporate.tbl_JenisInsentif jenisInsentif, ModelsCorporate.tbl_CustomerVendorGLMap CustomerVendorGLMap)
        //end
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    //Fatin added - 30/03/2023
                    int? fld_KelayakanKepada = jenisInsentif.fld_KelayakanKepada;
                    String fld_KodGL = jenisInsentif.fld_KodGL;
                    String fld_KodAktvt = jenisInsentif.fld_KodAktvt;
                    String fld_JenisInsentif = jenisInsentif.fld_JenisInsentif;
                    //end

                    jenisInsentif.fld_Keterangan = GetConfig.UppercaseFirst(jenisInsentif.fld_Keterangan);
                    jenisInsentif.fld_NegaraID = NegaraID;
                    jenisInsentif.fld_SyarikatID = SyarikatID;
                    jenisInsentif.fld_Deleted = false;

                    db.tbl_JenisInsentif.Add(jenisInsentif);
                    db.SaveChanges();

                    //Fatin added - 30/03/2023
                    if (fld_KodGL == "1000")
                    {
                        var GLCode = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "KodGLAdmin" && x.fldOptConfFlag3 == "1000" && x.fldDeleted == false
                                            && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).ToList();

                        foreach (var kodGL in GLCode)
                        {
                            var paysheet = "";
                            var staTanaman = "";
                            var lot = kodGL.fldOptConfFlag2;
                            var status = kodGL.fldOptConfDesc;
                            var code = kodGL.fldOptConfValue;

                            if (status == "Matured")
                            {
                                paysheet = "BH";
                            }
                            else if (status == "Non Matured")
                            {
                                paysheet = "PH";
                            }
                            else
                            {
                                paysheet = "SH";
                            }

                            if (status == "Matured")
                            {
                                staTanaman = "M";
                            }
                            else if (status == "Non Matured")
                            {
                                staTanaman = "N";
                            }
                            else
                            {
                                staTanaman = "C";
                            }

                            //Earning
                            if (jenisInsentif.fld_KodAktvt.Substring(0, 2) == "32")
                            {

                                CustomerVendorGLMap.fld_KodAktiviti = fld_KodAktvt;
                                CustomerVendorGLMap.fld_Flag = "2";
                                CustomerVendorGLMap.fld_TypeCode = "GL";
                                CustomerVendorGLMap.fld_SAPCode = code;
                                CustomerVendorGLMap.fld_NegaraID = NegaraID;
                                CustomerVendorGLMap.fld_SyarikatID = SyarikatID;
                                CustomerVendorGLMap.fld_WIlayahID = 0;
                                CustomerVendorGLMap.fld_LadangID = 0;
                                CustomerVendorGLMap.fld_Deleted = false;
                                CustomerVendorGLMap.fld_JnsLot = lot;
                                CustomerVendorGLMap.fld_Paysheet = paysheet;
                                CustomerVendorGLMap.fld_StatusTnmn = staTanaman;

                                db.tbl_CustomerVendorGLMap.Add(CustomerVendorGLMap);
                                db.SaveChanges();

                            }

                            //Deduction
                            else if (jenisInsentif.fld_KodAktvt.Substring(0, 2) == "35")
                            {
                                CustomerVendorGLMap.fld_KodAktiviti = fld_KodAktvt;
                                CustomerVendorGLMap.fld_Flag = "5";
                                CustomerVendorGLMap.fld_TypeCode = "GL";
                                CustomerVendorGLMap.fld_SAPCode = code;
                                CustomerVendorGLMap.fld_NegaraID = NegaraID;
                                CustomerVendorGLMap.fld_SyarikatID = SyarikatID;
                                CustomerVendorGLMap.fld_WIlayahID = 0;
                                CustomerVendorGLMap.fld_LadangID = 0;
                                CustomerVendorGLMap.fld_Deleted = false;
                                CustomerVendorGLMap.fld_JnsLot = lot;
                                CustomerVendorGLMap.fld_Paysheet = paysheet;
                                CustomerVendorGLMap.fld_StatusTnmn = staTanaman;

                                db.tbl_CustomerVendorGLMap.Add(CustomerVendorGLMap);
                                db.SaveChanges();
                            }
                        }
                    }
                    //fatin added - 13/04/2023
                    else if (fld_KodGL == "8800")
                    {
                        //Earning
                        if (jenisInsentif.fld_KodAktvt.Substring(0, 2) == "32")
                        {

                            CustomerVendorGLMap.fld_KodAktiviti = fld_KodAktvt;
                            CustomerVendorGLMap.fld_Flag = "2";
                            CustomerVendorGLMap.fld_TypeCode = "GL";
                            CustomerVendorGLMap.fld_SAPCode = "602";
                            CustomerVendorGLMap.fld_NegaraID = NegaraID;
                            CustomerVendorGLMap.fld_SyarikatID = SyarikatID;
                            CustomerVendorGLMap.fld_WIlayahID = 0;
                            CustomerVendorGLMap.fld_LadangID = 0;
                            CustomerVendorGLMap.fld_Deleted = false;
                            //CustomerVendorGLMap.fld_JnsLot = "";
                            //CustomerVendorGLMap.fld_Paysheet = "";
                            //CustomerVendorGLMap.fld_StatusTnmn = "";

                            db.tbl_CustomerVendorGLMap.Add(CustomerVendorGLMap);
                            db.SaveChanges();

                        }

                        //Deduction
                        else if (jenisInsentif.fld_KodAktvt.Substring(0, 2) == "35")
                        {
                            CustomerVendorGLMap.fld_KodAktiviti = fld_KodAktvt;
                            CustomerVendorGLMap.fld_Flag = "5";
                            CustomerVendorGLMap.fld_TypeCode = "GL";
                            CustomerVendorGLMap.fld_SAPCode = "602";
                            CustomerVendorGLMap.fld_NegaraID = NegaraID;
                            CustomerVendorGLMap.fld_SyarikatID = SyarikatID;
                            CustomerVendorGLMap.fld_WIlayahID = 0;
                            CustomerVendorGLMap.fld_LadangID = 0;
                            CustomerVendorGLMap.fld_Deleted = false;
                            //CustomerVendorGLMap.fld_JnsLot = "";
                            //CustomerVendorGLMap.fld_Paysheet = "";
                            //CustomerVendorGLMap.fld_StatusTnmn = "";

                            db.tbl_CustomerVendorGLMap.Add(CustomerVendorGLMap);
                            db.SaveChanges();
                        }
                    }
                    //end

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "incentiveMaintenanceDetails",
                        rootUrl = domain,
                        action = "_IncentiveMaintenance",
                        controller = "Maintenance",
                        paramName = "IncentiveList",
                        paramValue = jenisInsentif.fld_JenisInsentif
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _IncentiveMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var incentiveCategoryData = db.tbl_JenisInsentif
                .Where(x => x.fld_JenisInsentifID == id && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID)
                .SingleOrDefault();

            List<SelectListItem> GLList = new List<SelectListItem>();

            GLList = new SelectList(
                db.tbl_Lejar
                    .Where(x => x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_KodLejar)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodLejar, Text = s.fld_KodLejar + " - " + s.fld_Desc }),
                "Value", "Text").ToList();
            GLList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.GLList = GLList;

            List<SelectListItem> optionList = new List<SelectListItem>();

            optionList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            optionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.OptionList = optionList;

            List<SelectListItem> workerTypeList = new List<SelectListItem>();

            workerTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisKelayakanInsentif" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            workerTypeList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.WorkerTypeList = workerTypeList;

            List<SelectListItem> incentiveValueTypeList = new List<SelectListItem>();

            incentiveValueTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "tetapanNilai" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            incentiveValueTypeList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.IncentiveValueTypeList = incentiveValueTypeList;

            //fatin added - 06/04/2023
            List<SelectListItem> CompanyCode = new List<SelectListItem>();

            CompanyCode = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "kodSAPSyarikat" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc + " (" + s.fldOptConfValue + ") " }),
                "Value", "Text").ToList();
            CompanyCode.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CompanyCode = CompanyCode;
            // end

            return PartialView(incentiveCategoryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _IncentiveMaintenanceEdit(ModelsCorporate.tbl_JenisInsentif jenisInsentif)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {

                    var incentiveCategoryData = db.tbl_JenisInsentif.SingleOrDefault(
                        x => x.fld_JenisInsentifID == jenisInsentif.fld_JenisInsentifID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    incentiveCategoryData.fld_Keterangan = GetConfig.UppercaseFirst(jenisInsentif.fld_Keterangan);
                    incentiveCategoryData.fld_KodGL = jenisInsentif.fld_KodGL;
                    incentiveCategoryData.fld_TetapanNilai = jenisInsentif.fld_TetapanNilai;
                    incentiveCategoryData.fld_AdaCaruman = jenisInsentif.fld_AdaCaruman;
                    incentiveCategoryData.fld_MinValue = jenisInsentif.fld_MinValue;
                    incentiveCategoryData.fld_MaxValue = jenisInsentif.fld_MaxValue;
                    incentiveCategoryData.fld_FixedValue = jenisInsentif.fld_FixedValue;
                    incentiveCategoryData.fld_DailyFixedValue = jenisInsentif.fld_DailyFixedValue;
                    incentiveCategoryData.fld_KelayakanKepada = jenisInsentif.fld_KelayakanKepada;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "incentiveMaintenanceDetails",
                        rootUrl = domain,
                        action = "_IncentiveMaintenance",
                        controller = "Maintenance",
                        paramName = "IncentiveList",
                        paramValue = incentiveCategoryData.fld_JenisInsentif
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _IncentiveMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var incentiveCategoryData = db.tbl_JenisInsentif.SingleOrDefault(
                x => x.fld_JenisInsentifID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(incentiveCategoryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _IncentiveMaintenanceDelete(ModelsCorporate.tbl_JenisInsentif jenisInsentif)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var incentiveCategoryData = db.tbl_JenisInsentif.SingleOrDefault(
                    x => x.fld_JenisInsentifID == jenisInsentif.fld_JenisInsentifID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (incentiveCategoryData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                incentiveCategoryData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "2",
                    div = "incentiveMaintenanceDetails",
                    rootUrl = domain,
                    action = "_IncentiveMaintenance",
                    controller = "Maintenance",
                    paramName = "IncentiveList",
                    paramValue = incentiveCategoryData.fld_JenisInsentif
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult BankMaintenance(string filter, int page = 1, string sort = "fld_KodBank",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _BankMaintenance(string filter, int page = 1,
            string sort = "fld_KodBank",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Bank>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var bankData = db.tbl_Bank
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = bankData
                    .Where(x => x.fld_KodBank.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_NamaBank.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = bankData
                    .Count(x => x.fld_KodBank.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_NamaBank.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = bankData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = bankData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _BankMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_Bank bank = new ModelsCorporate.tbl_Bank();

            var getBankRunningNo = db.tbl_Bank
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fld_KodBank)
                .Select(s => s.fld_KodBank)
                .FirstOrDefault();

            int bankCodeLength = getBankRunningNo.Length;

            string bankCode = "";

            if (String.IsNullOrEmpty(getBankRunningNo))
            {
                bankCode = "01";
            }

            else
            {
                int generateNewBankNo = Convert.ToInt32(getBankRunningNo) + 1;
                bankCode = generateNewBankNo.ToString("0");
            }

            bank.fld_KodBank = bankCode;

            return PartialView(bank);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BankMaintenanceCreate(ModelsCorporate.tbl_Bank bank)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    bank.fld_NamaBank = GetConfig.UppercaseFirst(bank.fld_NamaBank);
                    bank.fld_NegaraID = NegaraID;
                    bank.fld_SyarikatID = SyarikatID;
                    bank.fld_Deleted = false;

                    db.tbl_Bank.Add(bank);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "bankMaintenanceDetails",
                        rootUrl = domain,
                        action = "_BankMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _BankMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var bankData = db.tbl_Bank
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            return PartialView(bankData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BankMaintenanceEdit(ModelsCorporate.tbl_Bank bank)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var bankData = db.tbl_Bank.SingleOrDefault(
                        x => x.fld_ID == bank.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    bankData.fld_NamaBank = GetConfig.UppercaseFirst(bank.fld_NamaBank);

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "bankMaintenanceDetails",
                        rootUrl = domain,
                        action = "_BankMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _BankMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var bankData = db.tbl_Bank
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(bankData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BankMaintenanceDelete(ModelsCorporate.tbl_Bank bank)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var bankData = db.tbl_Bank.SingleOrDefault(
                    x => x.fld_ID == bank.fld_ID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (bankData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                bankData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "2",
                    div = "bankMaintenanceDetails",
                    rootUrl = domain,
                    action = "_BankMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CompanyGroupMaintenance(string filter, int page = 1, string sort = "fld_NamaKmplnSyrkt",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CompanyGroupMaintenance(string filter, int page = 1, string sort = "fld_NamaKmplnSyrkt", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_KumpulanSyarikat>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var companyGroupData = db.tbl_KumpulanSyarikat;

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = companyGroupData
                    .Where(x => x.fld_NamaKmplnSyrkt.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = companyGroupData
                    .Count(x => x.fld_NamaKmplnSyrkt.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = companyGroupData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = companyGroupData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.SyarikatID = SyarikatID;
            ViewBag.NegaraID = NegaraID;

            return View(records);
        }

        public ActionResult _CompanyGroupMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_KumpulanSyarikat kumpulanSyarikat = new ModelsCorporate.tbl_KumpulanSyarikat();

            return PartialView(kumpulanSyarikat);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyGroupMaintenanceCreate(ModelsCorporate.tbl_KumpulanSyarikat kumpulanSyarikat)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var companyGroupData = db.tbl_KumpulanSyarikat
                    .Where(x => x.fld_NamaKmplnSyrkt.ToUpper() == kumpulanSyarikat.fld_NamaKmplnSyrkt.ToUpper());

                if (companyGroupData.ToList().Count != 0)
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorDuplicateCompanyGroup,
                        status = "danger",
                        checkingdata = "0"
                    });
                }

                if (ModelState.IsValid)
                {
                    kumpulanSyarikat.fld_NamaKmplnSyrkt = kumpulanSyarikat.fld_NamaKmplnSyrkt.ToUpper();
                    kumpulanSyarikat.fld_Deleted = false;

                    db.tbl_KumpulanSyarikat.Add(kumpulanSyarikat);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "companyGroupMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CompanyGroupMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CompanyGroupMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var companyGroupData = db.tbl_KumpulanSyarikat
                .SingleOrDefault(x => x.fld_KmplnSyrktID == id);

            return PartialView(companyGroupData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyGroupMaintenanceEdit(ModelsCorporate.tbl_KumpulanSyarikat kumpulanSyarikat)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var companyGroupData = db.tbl_KumpulanSyarikat
                        .SingleOrDefault(x => x.fld_KmplnSyrktID == kumpulanSyarikat.fld_KmplnSyrktID);

                    companyGroupData.fld_NamaKmplnSyrkt = kumpulanSyarikat.fld_NamaKmplnSyrkt.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "companyGroupMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CompanyGroupMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CompanyGroupMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var companyGroupData = db.tbl_KumpulanSyarikat
                .SingleOrDefault(x => x.fld_KmplnSyrktID == id);

            return PartialView(companyGroupData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyGroupMaintenanceDelete(ModelsCorporate.tbl_KumpulanSyarikat kumpulanSyarikat)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var companyGroupData = db.tbl_KumpulanSyarikat
                    .SingleOrDefault(x => x.fld_KmplnSyrktID == kumpulanSyarikat.fld_KmplnSyrktID);

                bool status = true;

                var message = "";
                if (companyGroupData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                companyGroupData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgDelete2,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "companyGroupMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CompanyGroupMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CompanyCountryMaintenance(string filter, int page = 1, string sort = "fld_NamaNegara",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CompanyCountryMaintenance(string filter, int page = 1, string sort = "fld_NamaNegara", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Negara>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var companyCountryData = db.tbl_Negara;

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = companyCountryData
                    .Where(x => x.fld_NamaNegara.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = companyCountryData
                    .Count(x => x.fld_NamaNegara.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = companyCountryData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = companyCountryData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.SyarikatID = SyarikatID;
            ViewBag.NegaraID = NegaraID;

            return View(records);
        }

        public ActionResult _CompanyCountryMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_Negara negara = new ModelsCorporate.tbl_Negara();

            List<SelectListItem> CountryList = new List<SelectListItem>();

            CountryList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "krytnlist" && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfDesc, Text = s.fldOptConfDesc }),
                "Value", "Text").DistinctBy(d => d.Value).ToList();
            CountryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CountryList = CountryList;

            List<SelectListItem> CompanyGroupList = new List<SelectListItem>();

            CompanyGroupList = new SelectList(
                db.tbl_KumpulanSyarikat
                    .Where(x => x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NamaKmplnSyrkt)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KmplnSyrktID.ToString(), Text = s.fld_NamaKmplnSyrkt }),
                "Value", "Text").ToList();
            CompanyGroupList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CompanyGroupList = CompanyGroupList;

            return PartialView(negara);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyCountryMaintenanceCreate(ModelsCorporate.tbl_Negara negara)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var companyCountryData = db.tbl_Negara
                    .Where(x => x.fld_NamaNegara.ToUpper() == negara.fld_NamaNegara.ToUpper() && x.fld_KmplnSyrktID == negara.fld_KmplnSyrktID);

                if (companyCountryData.ToList().Count != 0)
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorDuplicateCompanyCountry,
                        status = "danger",
                        checkingdata = "0"
                    });
                }

                if (ModelState.IsValid)
                {
                    negara.fld_Deleted = false;

                    db.tbl_Negara.Add(negara);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "companyCountryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CompanyCountryMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CompanyCountryMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var companyCountryData = db.tbl_Negara
                .SingleOrDefault(x => x.fld_NegaraID == id);

            List<SelectListItem> CountryList = new List<SelectListItem>();

            CountryList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "krytnlist" && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfDesc, Text = s.fldOptConfDesc }),
                "Value", "Text").DistinctBy(d => d.Value).ToList();
            CountryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CountryList = CountryList;

            List<SelectListItem> CompanyGroupList = new List<SelectListItem>();

            CompanyGroupList = new SelectList(
                db.tbl_KumpulanSyarikat
                    .Where(x => x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NamaKmplnSyrkt)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KmplnSyrktID.ToString(), Text = s.fld_NamaKmplnSyrkt }),
                "Value", "Text").ToList();
            CompanyGroupList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CompanyGroupList = CompanyGroupList;

            return PartialView(companyCountryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyCountryMaintenanceEdit(ModelsCorporate.tbl_Negara negara)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var companyCountryData = db.tbl_Negara
                        .SingleOrDefault(x => x.fld_NegaraID == negara.fld_NegaraID);

                    companyCountryData.fld_NamaNegara = negara.fld_NamaNegara;
                    companyCountryData.fld_KmplnSyrktID = negara.fld_KmplnSyrktID;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "companyCountryMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CompanyCountryMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CompanyCountryMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var companyCountryData = db.tbl_Negara
                .SingleOrDefault(x => x.fld_NegaraID == id);

            return PartialView(companyCountryData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyCountryMaintenanceDelete(ModelsCorporate.tbl_Negara negara)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var companyCountryData = db.tbl_Negara
                    .SingleOrDefault(x => x.fld_NegaraID == negara.fld_NegaraID);

                bool status = true;

                var message = "";
                if (companyCountryData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                companyCountryData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "companyCountryMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CompanyCountryMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult CompanyMaintenance(string filter, int page = 1, string sort = "fld_NamaSyarikat",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CompanyMaintenance(string filter, int page = 1, string sort = "fld_NamaSyarikat", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Syarikat>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var companyData = db.tbl_Syarikat;

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = companyData
                    .Where(x => x.fld_NamaSyarikat.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = companyData
                    .Count(x => x.fld_NamaSyarikat.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = companyData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = companyData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _CompanyMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_Syarikat syarikat = new ModelsCorporate.tbl_Syarikat();

            var companyGroupCountryData = from tbl_Negara in db.tbl_Negara
                                          join tbl_KumpulanSyarikat in db.tbl_KumpulanSyarikat on tbl_Negara.fld_KmplnSyrktID equals
                                          tbl_KumpulanSyarikat.fld_KmplnSyrktID
                                          where tbl_Negara.fld_Deleted == false && tbl_KumpulanSyarikat.fld_Deleted == false
                                          select new { Negara = tbl_Negara, KumpulanSyarikat = tbl_KumpulanSyarikat };

            List<SelectListItem> CompanyGroupCountryList = new List<SelectListItem>();

            CompanyGroupCountryList = new SelectList(
                companyGroupCountryData
                    .Select(
                        s => new SelectListItem { Value = s.Negara.fld_NegaraID.ToString(), Text = s.KumpulanSyarikat.fld_NamaKmplnSyrkt + " (" + s.Negara.fld_NamaNegara + ")" }),
                "Value", "Text").ToList();
            CompanyGroupCountryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CompanyGroupCountryList = CompanyGroupCountryList;

            return PartialView(syarikat);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyMaintenanceCreate(ModelsCorporate.tbl_Syarikat syarikat, int? CompanyGroupCountryLists)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var companyData = db.tbl_Syarikat
                    .Where(x => x.fld_NamaSyarikat.ToUpper() == syarikat.fld_NamaSyarikat.ToUpper() ||
                                x.fld_NamaPndkSyarikat.ToUpper() == syarikat.fld_NamaPndkSyarikat.ToUpper() ||
                                x.fld_NoSyarikat.ToUpper() == syarikat.fld_NoSyarikat.ToUpper() ||
                                x.fld_FrstNmeUsrNme.ToUpper() == syarikat.fld_FrstNmeUsrNme.ToUpper() ||
                                x.fld_RequestCode.ToUpper() == syarikat.fld_RequestCode.ToUpper());

                if (companyData.ToList().Count != 0)
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorDuplicateCompanyCountry,
                        status = "danger",
                        checkingdata = "0"
                    });
                }

                if (ModelState.IsValid)
                {
                    syarikat.fld_NamaSyarikat = syarikat.fld_NamaSyarikat.ToUpper();
                    syarikat.fld_NamaPndkSyarikat = syarikat.fld_NamaPndkSyarikat.ToUpper();
                    syarikat.fld_NoSyarikat = syarikat.fld_NoSyarikat.ToUpper();
                    syarikat.fld_SyarikatEmail = syarikat.fld_SyarikatEmail.ToUpper();
                    syarikat.fld_FrstNmeUsrNme = syarikat.fld_FrstNmeUsrNme.ToUpper();
                    syarikat.fld_RequestCode = syarikat.fld_RequestCode.ToUpper();
                    syarikat.fld_Deleted = false;

                    db.tbl_Syarikat.Add(syarikat);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "companyMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CompanyMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CompanyMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var companyData = db.tbl_Syarikat
                .SingleOrDefault(x => x.fld_SyarikatID == id);

            var companyGroupCountryData = from tbl_Negara in db.tbl_Negara
                                          join tbl_KumpulanSyarikat in db.tbl_KumpulanSyarikat on tbl_Negara.fld_KmplnSyrktID equals
                                          tbl_KumpulanSyarikat.fld_KmplnSyrktID
                                          where tbl_Negara.fld_Deleted == false && tbl_KumpulanSyarikat.fld_Deleted == false
                                          select new { Negara = tbl_Negara, KumpulanSyarikat = tbl_KumpulanSyarikat };

            List<SelectListItem> CompanyGroupCountryList = new List<SelectListItem>();

            CompanyGroupCountryList = new SelectList(
                companyGroupCountryData
                    .Select(
                        s => new SelectListItem { Value = s.Negara.fld_NegaraID.ToString(), Text = s.KumpulanSyarikat.fld_NamaKmplnSyrkt + " (" + s.Negara.fld_NamaNegara + ")" }),
                "Value", "Text", companyData.fld_NegaraID).ToList();
            CompanyGroupCountryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CompanyGroupCountryLists = CompanyGroupCountryList;

            return PartialView(companyData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyMaintenanceEdit(ModelsCorporate.tbl_Syarikat syarikat)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var companyData = db.tbl_Syarikat
                        .SingleOrDefault(x => x.fld_SyarikatID == syarikat.fld_SyarikatID);

                    companyData.fld_NegaraID = syarikat.fld_NegaraID;
                    companyData.fld_NamaSyarikat = syarikat.fld_NamaSyarikat.ToUpper();
                    companyData.fld_NamaPndkSyarikat = syarikat.fld_NamaPndkSyarikat.ToUpper();
                    companyData.fld_NoSyarikat = syarikat.fld_NoSyarikat.ToUpper();
                    companyData.fld_SyarikatEmail = syarikat.fld_SyarikatEmail.ToUpper();
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "companyMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CompanyMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CompanyMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var companyData = db.tbl_Syarikat
                .SingleOrDefault(x => x.fld_SyarikatID == id);

            var companyGroupCountryData = from tbl_Negara in db.tbl_Negara
                                          join tbl_KumpulanSyarikat in db.tbl_KumpulanSyarikat on tbl_Negara.fld_KmplnSyrktID equals
                                          tbl_KumpulanSyarikat.fld_KmplnSyrktID
                                          where tbl_Negara.fld_Deleted == false && tbl_KumpulanSyarikat.fld_Deleted == false
                                          select new { Negara = tbl_Negara, KumpulanSyarikat = tbl_KumpulanSyarikat };

            List<SelectListItem> CompanyGroupCountryList = new List<SelectListItem>();

            CompanyGroupCountryList = new SelectList(
                companyGroupCountryData
                    .Select(
                        s => new SelectListItem { Value = s.Negara.fld_NegaraID.ToString(), Text = s.KumpulanSyarikat.fld_NamaKmplnSyrkt + " (" + s.Negara.fld_NamaNegara + ")" }),
                "Value", "Text").ToList();
            CompanyGroupCountryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.CompanyGroupCountryList = CompanyGroupCountryList;

            return PartialView(companyData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CompanyMaintenanceDelete(ModelsCorporate.tbl_Syarikat syarikat)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var companyData = db.tbl_Syarikat
                    .SingleOrDefault(x => x.fld_SyarikatID == syarikat.fld_SyarikatID);

                companyData.fld_Deleted = true;
                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgDelete2,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "companyMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CompanyMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult KiraanMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _KiraanMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "kiraot" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _KiraanMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kiraot" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsKiraOTViewModel unitViewModel = new ModelsCorporate.tblOptionConfigsKiraOTViewModel();

            PropertyCopy.Copy(unitViewModel, unitData);

            //List<SelectListItem> numberList = new List<SelectListItem>();

            //numberList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.NumberList = numberList;

            //List<SelectListItem> categoryList = new List<SelectListItem>();

            //categoryList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.CategoryList = categoryList;

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KiraanMaintenanceEdit(ModelsCorporate.tblOptionConfigsKiraOTViewModel optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kiraot" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "kiraMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KiraanMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult KdrHargaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _KdrHargaMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            //modified by kamalia 23/3/2021
            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "kadarot" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID &&
                            x.fldOptConfFlag2 == "1" || x.fldOptConfFlag1 == "gajiMinimaHarian");
            //
            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _KdrHargaMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kadarot" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag2 == "1");

            ModelsCorporate.tblOptionConfigsHargaOTViewModel unitViewModel = new ModelsCorporate.tblOptionConfigsHargaOTViewModel();

            PropertyCopy.Copy(unitViewModel, unitData);

            //List<SelectListItem> numberList = new List<SelectListItem>();

            //numberList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.NumberList = numberList;

            //List<SelectListItem> categoryList = new List<SelectListItem>();

            //categoryList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.CategoryList = categoryList;

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KdrHargaMaintenanceEdit(ModelsCorporate.tblOptionConfigsHargaOTViewModel optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kadarot" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID &&
                             x.fldOptConfFlag2 == "1");

                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "KdrHargaMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KdrHargaMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PmbhgiHargaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _PmbhgiHargaMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "kadarot" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID &&
                            x.fldOptConfFlag2 == "2");

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _PmbhgiHargaMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kadarot" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag2 == "2");

            ModelsCorporate.tblOptionConfigsOTViewModel unitViewModel = new ModelsCorporate.tblOptionConfigsOTViewModel();

            PropertyCopy.Copy(unitViewModel, unitData);

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PmbhgiHargaMaintenanceEdit(ModelsCorporate.tblOptionConfigsOTViewModel optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kadarot" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID &&
                             x.fldOptConfFlag2 == "2");

                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "PmbhgiHargaMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PmbhgiHargaMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult StateWeekTypeMaintenance(string filter, int page = 1, string sort = "fld_NegeriID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            var negeriCount = db.tblOptionConfigsWebs.Where(
                x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                     x.fldDeleted == false).Count();

            var mingguNegeriCount = db.tbl_MingguNegeri.Where(
                x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                     x.fld_Deleted == false).Count();

            bool completed = false;

            if (negeriCount == mingguNegeriCount)
            {
                completed = true;
            }

            ViewBag.Completed = completed;

            return View();
        }

        public ActionResult _StateWeekTypeMaintenance(string filter, int page = 1, string sort = "fld_NegeriID", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_MingguNegeri>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var weeklyLeaveData =
                db.vw_MingguNegeri.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = weeklyLeaveData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = weeklyLeaveData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = weeklyLeaveData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = weeklyLeaveData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _StateWeekTypeMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> stateList = new List<SelectListItem>();

            stateList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag3, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
                "Value", "Text").ToList();
            stateList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.StateList = stateList;

            List<SelectListItem> weeklyLeaveList = new List<SelectListItem>();

            weeklyLeaveList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "hari" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
                "Value", "Text").ToList();
            weeklyLeaveList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.WeeklyLeaveList = weeklyLeaveList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _StateWeekTypeMaintenanceCreate(ModelsCorporate.tbl_MingguNegeri mingguNegeri)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    mingguNegeri.fld_Deleted = false;
                    mingguNegeri.fld_NegaraID = NegaraID;
                    mingguNegeri.fld_SyarikatID = SyarikatID;

                    db.tbl_MingguNegeri.Add(mingguNegeri);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "stateWeekTypeMaintenanceDetails",
                        rootUrl = domain,
                        action = "_StateWeekTypeMaintenance",
                        controller = "Maintenance"
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult IsStateWeekTypeExist(int fld_NegeriID)
        {
            return Json(!db.tbl_MingguNegeri.Any(x => x.fld_NegeriID == fld_NegeriID), JsonRequestBehavior.AllowGet);
        }

        public ActionResult _StateWeekTypeMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
                x => x.fld_MingguNegeriID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            tbl_MingguNegeriViewModel mingguNegeriViewModel = new tbl_MingguNegeriViewModel();

            PropertyCopy.Copy(mingguNegeriViewModel, weeklyLeaveData);

            List<SelectListItem> weeklyLeaveList = new List<SelectListItem>();

            weeklyLeaveList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "hari" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
                "Value", "Text").ToList();
            weeklyLeaveList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.WeeklyLeaveList = weeklyLeaveList;

            return PartialView(mingguNegeriViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _StateWeekTypeMaintenanceEdit(ModelsCorporate.tbl_MingguNegeriViewModel mingguNegeri)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
                        x => x.fld_MingguNegeriID == mingguNegeri.fld_MingguNegeriID && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    weeklyLeaveData.fld_JenisMinggu = mingguNegeri.fld_JenisMinggu;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "stateWeekTypeMaintenanceDetails",
                        rootUrl = domain,
                        action = "_StateWeekTypeMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _StateWeekTypeMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
                x => x.fld_MingguNegeriID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(weeklyLeaveData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _StateWeekTypeMaintenanceDelete(ModelsCorporate.tbl_MingguNegeri mingguNegeri)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var weeklyLeaveData = db.tbl_MingguNegeri.SingleOrDefault(
                    x => x.fld_MingguNegeriID == mingguNegeri.fld_MingguNegeriID && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (weeklyLeaveData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                weeklyLeaveData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "stateWeekTypeMaintenanceDetails",
                    rootUrl = domain,
                    action = "_StateWeekTypeMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult WorkingDayMaintenance(string StateList, string YearList, int page = 1, string sort = "fld_NegeriID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> stateList = new List<SelectListItem>();

            stateList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag3, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }),
                "Value", "Text").ToList();
            stateList.Insert(0, new SelectListItem { Text = "SEMUA", Value = "" });

            ViewBag.StateList = stateList;

            int drpyear = 0;
            int drprangeyear = 0;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            ViewBag.YearList = yearlist;

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _WorkingDayMaintenance(string StateList, string YearList, int page = 1,
            string sort = "fld_NegeriID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_HariBekerja>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var workingDayData = db.vw_HariBekerja
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

            if (String.IsNullOrEmpty(YearList))
            {
                YearList = DateTime.Now.Year.ToString();
            }

            if (!String.IsNullOrEmpty(StateList))
            {
                records.Content = workingDayData
                    .Where(x => x.fld_NegeriID.ToString() == StateList && x.fld_Year.ToString() == YearList)
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = workingDayData
                    .Count(x => x.fld_NegeriID.ToString() == StateList && x.fld_Year.ToString() == YearList);
            }

            else
            {
                records.Content = workingDayData.Where(x => x.fld_Year.ToString() == YearList)
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = workingDayData.Where(x => x.fld_Year.ToString() == YearList)
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _WorkingDayMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int drpyear = 0;
            int drprangeyear = 0;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            ViewBag.YearList = yearlist;

            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _WorkingDayMaintenanceCreate(string YearList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var workingDayData = db.tbl_HariBekerja.Where(x => x.fld_Year.ToString() == YearList && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

                foreach (var workingDay in workingDayData)
                {
                    workingDay.fld_Deleted = true;
                }

                db.SaveChanges();

                int year = Convert.ToInt32(YearList);

                //get list of month
                var monthList = db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "monthlist" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .Select(s => s.fldOptConfValue)
                    .ToList();

                //get all kod negeri in malaysia
                var NegeriList = db.vw_MingguNegeri
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .ToList();

                foreach (var negeri in NegeriList)
                {
                    var kodNegeri = negeri.fldOptConfValue;

                    foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                    {
                        if ((int)day == negeri.fld_JenisMinggu)
                        {
                            foreach (var month in monthList)
                            {
                                var cutiUmum = db.tbl_CutiUmum
                                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                                x.fld_Deleted == false && x.fld_Negeri == kodNegeri &&
                                                x.fld_Tahun == year &&
                                                x.fld_TarikhCuti.Value.Month.ToString() == month && x.fld_IsSelected == true)
                                    .ToList();

                                //First We find out last date of mont
                                //DateTime today = DateTime.Today;
                                DateTime endOfMonth = new DateTime(year, Convert.ToInt32(month),
                                    DateTime.DaysInMonth(year, Convert.ToInt32(month)));

                                //get only last day of month
                                int daysInMonth = endOfMonth.Day;

                                int totalLeaveInAMonth = 0;

                                for (int i = 0; i < daysInMonth; ++i)
                                {
                                    DateTime d = new DateTime(year, Convert.ToInt32(month), i + 1);

                                    //Compare date with sunday
                                    if (d.DayOfWeek == day)
                                    {
                                        totalLeaveInAMonth = totalLeaveInAMonth + 1;
                                    }
                                }

                                var workingDaysInMonth = (DateTime.DaysInMonth(year, Convert.ToInt32(month))) - totalLeaveInAMonth -
                                                         cutiUmum.Count;

                                ModelsCorporate.tbl_HariBekerja hariBekerjaMinggu1 = new ModelsCorporate.tbl_HariBekerja();

                                hariBekerjaMinggu1.fld_Month = Convert.ToInt16(month);
                                hariBekerjaMinggu1.fld_Year = Convert.ToInt16(year);
                                hariBekerjaMinggu1.fld_BilanganHariBekerja = Convert.ToInt16(workingDaysInMonth);
                                hariBekerjaMinggu1.fld_JenisMinggu = negeri.fld_JenisMinggu;
                                hariBekerjaMinggu1.fld_NegaraID = NegaraID;
                                hariBekerjaMinggu1.fld_NegeriID = Convert.ToInt32(kodNegeri);
                                hariBekerjaMinggu1.fld_SyarikatID = SyarikatID;
                                hariBekerjaMinggu1.fld_Deleted = false;

                                db.tbl_HariBekerja.Add(hariBekerjaMinggu1);
                                db.SaveChanges();
                            }

                        }
                    }
                }

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgGenerateWorkingDay,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "workingDayMaintenanceDetails",
                    rootUrl = domain,
                    action = "_WorkingDayMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "1"
                });
            }
        }

        public ActionResult OilPriceRangeMaintenance(string filter, int page = 1, string sort = "fld_RangeHargaLower",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _OilPriceRangeMaintenance(string filter, int page = 1, string sort = "fld_RangeHargaLower", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_HargaSawitRange>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var oilPriceRangeData = db.tbl_HargaSawitRange
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = oilPriceRangeData
                    .Where(x => x.fld_KodHarga.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = oilPriceRangeData
                    .Count(x => x.fld_KodHarga.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = oilPriceRangeData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = oilPriceRangeData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _OilPriceRangeMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _OilPriceRangeMaintenanceCreate(ModelsCorporate.tbl_HargaSawitRange hargaSawitRange)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    hargaSawitRange.fld_KodHarga = hargaSawitRange.fld_KodHarga.ToUpper();
                    hargaSawitRange.fld_Deleted = false;
                    hargaSawitRange.fld_NegaraID = NegaraID;
                    hargaSawitRange.fld_SyarikatID = SyarikatID;

                    db.tbl_HargaSawitRange.Add(hargaSawitRange);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "oilPriceRangeMaintenanceDetails",
                        rootUrl = domain,
                        action = "_OilPriceRangeMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult IsOilPriceRangeCodeExist(string fld_KodHarga)
        {
            return Json(!db.tbl_HargaSawitRange.Any(x => x.fld_KodHarga.ToUpper() == fld_KodHarga.ToUpper()), JsonRequestBehavior.AllowGet);
        }

        public ActionResult _OilPriceRangeMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            tbl_HargaSawitRangeViewModel oilPriceRangeViewModel = new tbl_HargaSawitRangeViewModel();

            PropertyCopy.Copy(oilPriceRangeViewModel, oilPriceRangeData);

            return PartialView(oilPriceRangeViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _OilPriceRangeMaintenanceEdit(ModelsCorporate.tbl_HargaSawitRangeViewModel hargaSawitRange)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
                        x => x.fld_ID == hargaSawitRange.fld_ID && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    oilPriceRangeData.fld_KodHarga = hargaSawitRange.fld_KodHarga.ToUpper();
                    oilPriceRangeData.fld_RangeHargaLower = hargaSawitRange.fld_RangeHargaLower;
                    oilPriceRangeData.fld_RangeHargaUpper = hargaSawitRange.fld_RangeHargaUpper;
                    oilPriceRangeData.fld_Insentif = hargaSawitRange.fld_Insentif;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "oilPriceRangeMaintenanceDetails",
                        rootUrl = domain,
                        action = "_OilPriceRangeMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _OilPriceRangeMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(oilPriceRangeData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _OilPriceRangeMaintenanceDelete(ModelsCorporate.tbl_HargaSawitRangeViewModel hargaSawitRange)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var oilPriceRangeData = db.tbl_HargaSawitRange.SingleOrDefault(
                    x => x.fld_ID == hargaSawitRange.fld_ID && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (oilPriceRangeData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                oilPriceRangeData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "oilPriceRangeMaintenanceDetails",
                    rootUrl = domain,
                    action = "_OilPriceRangeMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //public ActionResult IncentiveEligibilityMaintenance(string IncentiveList, int page = 1, string sort = "fld_KodInsentif",
        //    string sortdir = "ASC")
        //{
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

        //    ViewBag.Maintenance = "class = active";

        //    return View();
        //}

        //public ActionResult _IncentiveEligibilityMaintenance(string filter, int page = 1,
        //    string sort = "fldOptConfFlag1",
        //    string sortdir = "ASC")
        //{
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

        //    List<CustMod_DesignationIncentiveEligibility> DesignationIncentiveEligibility = new List<CustMod_DesignationIncentiveEligibility>();

        //    ViewBag.pageSize = int.Parse(GetConfig.GetData("paging"));

        //    if (!String.IsNullOrEmpty(filter))
        //    {
        //        var incentiveTypeData = db.tbl_JenisInsentif
        //            .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
        //            .OrderBy(x => x.fld_KodInsentif);

        //        foreach (var i in incentiveTypeData)
        //        {
        //            var designationData = db.tblOptionConfigsWebs
        //                .Where(a => a.fldOptConfFlag2 == i.fld_KodInsentif && a.fld_NegaraID == NegaraID &&
        //                            a.fld_SyarikatID == SyarikatID && a.fldDeleted == false)
        //                .OrderBy(x => x.fldOptConfValue)
        //                .ToList();
        //            DesignationIncentiveEligibility.Add(new CustMod_DesignationIncentiveEligibility { JenisInsentif = i, Designation = designationData });
        //        }
        //    }

        //    else
        //    {
        //        var incentiveTypeData = db.tbl_JenisInsentif
        //            .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
        //            .OrderBy(x => x.fld_KodInsentif);

        //        foreach (var i in incentiveTypeData)
        //        {
        //            var designationData = db.tblOptionConfigsWebs
        //                .Where(a => a.fldOptConfFlag2 == i.fld_KodInsentif && a.fld_NegaraID == NegaraID &&
        //                            a.fld_SyarikatID == SyarikatID)
        //                .OrderBy(x => x.fldOptConfValue)
        //                .ToList();
        //            DesignationIncentiveEligibility.Add(new CustMod_DesignationIncentiveEligibility { JenisInsentif = i, Designation = designationData });
        //        }
        //    }

        //    return View(DesignationIncentiveEligibility);
        //}

        public ActionResult _IncentiveEligibilityMaintenanceCreate(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> designationList = new List<SelectListItem>();

            designationList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            designationList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.DesignationList = designationList;

            ModelsCorporate.tblOptionConfigsWebIncentiveEligibilityViewModel optionConfigsWeb =
                new ModelsCorporate.tblOptionConfigsWebIncentiveEligibilityViewModel();

            optionConfigsWeb.fldOptConfFlag2 = GetConfig.GetIncentiveCodeFromID(id);
            optionConfigsWeb.fld_NegaraID = NegaraID;
            optionConfigsWeb.fld_SyarikatID = SyarikatID;

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _IncentiveEligibilityMaintenanceCreate(ModelsCorporate.tblOptionConfigsWebIncentiveEligibilityViewModel optionConfigsWebViewModel)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (db.tblOptionConfigsWebs.Any(x => x.fldOptConfValue.ToUpper() == optionConfigsWebViewModel.fldOptConfValue.ToUpper() &&
                                                     x.fldOptConfFlag2.ToUpper() == optionConfigsWebViewModel.fldOptConfFlag2.ToUpper() &&
                                                     x.fldOptConfFlag1 == "kelayakanInsentif"))
                {
                    ModelState.AddModelError("", "");
                }

                if (ModelState.IsValid)
                {
                    optionConfigsWebViewModel.fldOptConfDesc = GetConfig.GetWebConfigDesc(optionConfigsWebViewModel.fldOptConfValue,
                        "designation", NegaraID, SyarikatID);
                    optionConfigsWebViewModel.fldOptConfFlag1 = "kelayakanInsentif";
                    optionConfigsWebViewModel.fldDeleted = false;
                    optionConfigsWebViewModel.fld_NegaraID = NegaraID;
                    optionConfigsWebViewModel.fld_SyarikatID = SyarikatID;

                    ModelsCorporate.tblOptionConfigsWeb tblOptionConfigsWeb = new ModelsCorporate.tblOptionConfigsWeb();

                    PropertyCopy.Copy(tblOptionConfigsWeb, optionConfigsWebViewModel);

                    db.tblOptionConfigsWebs.Add(tblOptionConfigsWeb);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "incentiveEligibilityMaintenanceDetails",
                        rootUrl = domain,
                        action = "_IncentiveEligibilityMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _IncentiveEligibilityMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var incentiveEligibilityData = db.tblOptionConfigsWebs
                .SingleOrDefault(x => x.fldOptConfID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

            return PartialView(incentiveEligibilityData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _IncentiveEligibilityMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var incentiveEligibilityData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kelayakanInsentif" &&
                         x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (incentiveEligibilityData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                incentiveEligibilityData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "incentiveEligibilityMaintenanceDetails",
                    rootUrl = domain,
                    action = "_IncentiveEligibilityMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult IsIncentiveEligibilityExist(string fldOptConfFlag2, string fldOptConfValue)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            return Json(
                !db.tblOptionConfigsWebs.Any(x => x.fldOptConfValue.ToUpper() == fldOptConfValue.ToUpper() &&
                                                  x.fldOptConfFlag2.ToUpper() == fldOptConfFlag2.ToUpper() &&
                                                  x.fldOptConfFlag1 == "kelayakanInsentif" &&
                                                  x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
                JsonRequestBehavior.AllowGet);
        }

        //Added by Shazana 15/5/2023

        public ActionResult DifficultyPriceMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
           string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _DifficultyPriceMaintenance(string filter, int page = 1,
            string sort = "fldOptConfvalue",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCustom.CustMod_HargaKesukaran>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var JenisDifficulty = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag2 == "HargaKesukaran").Select(x => x.fldOptConfFlag1).ToList();

            //Commented by Shazana 22/7/2023
            //var DifficultyData = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1.Contains("Kesukaran") && (JenisDifficulty.Contains(x.fldOptConfFlag1)) && x.fldOptConfFlag2 != "HargaKesukaran").ToList();
            //Added by Shazana 22/7/2023
            var DifficultyData = db.tblOptionConfigsWebs.Where(x => (x.fldOptConfFlag1.ToUpper().Contains("Kesukaran") || x.fldOptConfFlag1.ToUpper().Contains("tambahan")) && (JenisDifficulty.Contains(x.fldOptConfFlag1)) && x.fldOptConfFlag2 != "HargaKesukaran").ToList();
            string JenisHargaKesukaran = "";
            List<CustMod_HargaKesukaran> custMod_HargaKesukaran = new List<CustMod_HargaKesukaran>();

            var CustMod_HargaKesukaran = new List<CustMod_HargaKesukaran>();
            foreach (var DifficultyDatadetails in DifficultyData)
            {
                JenisHargaKesukaran = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == DifficultyDatadetails.fldOptConfFlag1 && x.fldOptConfFlag2 == "HargaKesukaran" && x.fldDeleted == false).Select(s => s.fldOptConfDesc).FirstOrDefault();
                //Added by Shazana 14/6/2023
                CustMod_HargaKesukaran.Add(new CustMod_HargaKesukaran { fldOptConfFlag1 = DifficultyDatadetails.fldOptConfFlag1, fldOptConfFlag2 = DifficultyDatadetails.fldOptConfFlag2, fldOptConfDesc = DifficultyDatadetails.fldOptConfDesc, fldOptConfValue = DifficultyDatadetails.fldOptConfValue, fldOptConfFlag3 = DifficultyDatadetails.fldOptConfFlag3, JenisHargaKesukaran = JenisHargaKesukaran, fldOptConfID = DifficultyDatadetails.fldOptConfID, fldDeleted = DifficultyDatadetails.fldDeleted });
            }

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = CustMod_HargaKesukaran
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = CustMod_HargaKesukaran
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = CustMod_HargaKesukaran.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = CustMod_HargaKesukaran
                    .Count();
            }


            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _DifficultyPriceMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> JnsHargaKesukaran = new List<SelectListItem>();
            JnsHargaKesukaran = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag2 == "HargaKesukaran" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            JnsHargaKesukaran.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fldOptConfFlag1 = JnsHargaKesukaran;

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate();

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DifficultyPriceMaintenanceCreate(ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var detailjnsHargaKesukaran = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag2 == "HargaKesukaran" && x.fldOptConfValue == optionConfigsWeb.fldOptConfValue.Substring(0, 1) && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).FirstOrDefault();

                    ModelsCorporate.tblOptionConfigsWeb harvestingDifficultyPriceModel = new ModelsCorporate.tblOptionConfigsWeb();

                    harvestingDifficultyPriceModel.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    harvestingDifficultyPriceModel.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    harvestingDifficultyPriceModel.fldOptConfFlag1 = detailjnsHargaKesukaran.fldOptConfFlag1;
                    harvestingDifficultyPriceModel.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
                    harvestingDifficultyPriceModel.fldDeleted = false;
                    harvestingDifficultyPriceModel.fld_NegaraID = NegaraID;
                    harvestingDifficultyPriceModel.fld_SyarikatID = SyarikatID;

                    db.tblOptionConfigsWebs.Add(harvestingDifficultyPriceModel);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "DifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_DifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GenerateKodHargaKesukaran(string jnsHargaKesukaran)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            var detailjnsHargaKesukaran = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag2 == "HargaKesukaran" && x.fldOptConfValue == jnsHargaKesukaran && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).FirstOrDefault();
            //Modify by Shazana 16/6/2023
            string lastcode = db.tblOptionConfigsWebs.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag1 == detailjnsHargaKesukaran.fldOptConfFlag1 && x.fldOptConfFlag2 != "HargaKesukaran").OrderByDescending(o => o.fldOptConfValue).Select(s => s.fldOptConfValue).FirstOrDefault();
            if (lastcode == null)
            {
                int generated = 1;
                string newcode = jnsHargaKesukaran + generated.ToString("00");
                return Json(newcode);
            }
            else
            {
                int generated = int.Parse(lastcode.Substring(1, 2)) + 1;
                string newcode = jnsHargaKesukaran + generated.ToString("00");
                return Json(newcode);
            }

        }

        public ActionResult _DifficultyPriceMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                //Commented by Shazana 22/7/2023
                //x => x.fldOptConfID == id && x.fldOptConfFlag1.Contains("Kesukaran") && x.fld_NegaraID == NegaraID &&
                //Commented by Shazana 22/7/2023
                x => x.fldOptConfID == id && (x.fldOptConfFlag1.Contains("Kesukaran") || x.fldOptConfFlag1.ToUpper().Contains("tambahan")) && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit harvestingDifficultyPriceViewModel = new ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit();

            PropertyCopy.Copy(harvestingDifficultyPriceViewModel, harvestingDifficultyPriceData);
            ViewBag.DifficultyName = harvestingDifficultyPriceData.fldOptConfDesc;
            ViewBag.DifficultyNameType = harvestingDifficultyPriceData.fldOptConfValue + " - " + harvestingDifficultyPriceData.fldOptConfDesc;
            return PartialView(harvestingDifficultyPriceViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DifficultyPriceMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    harvestingDifficultyPriceData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "DifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_DifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //Added by Shazana 12/6/2023
        public ActionResult _DifficultyPriceMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag2 != "HargaKesukaran");

            return PartialView(harvestingDifficultyPriceData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DifficultyPriceMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (harvestingDifficultyPriceData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                harvestingDifficultyPriceData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "DifficultyPriceMaintenanceDetails",
                    rootUrl = domain,
                    action = "_DifficultyPriceMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult HarvestingDifficultyPriceMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _HarvestingDifficultyPriceMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var harvestingDifficultyData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "KesukaranMenuai" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = harvestingDifficultyData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = harvestingDifficultyData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = harvestingDifficultyData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = harvestingDifficultyData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _HarvestingDifficultyPriceMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate();

            var getCurrentRunningHarvestingDifficultyPriceCode = dbview.tblOptionConfigsWeb
                .Where(x => x.fldOptConfFlag1 == "KesukaranMenuai")
                .OrderByDescending(o => o.fldOptConfValue)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            if (getCurrentRunningHarvestingDifficultyPriceCode == null)
            {
                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
                                                       .Where(
                                                           x => x.fldOptConfFlag1 == "KesukaranMenuaiFlag" &&
                                                                x.fld_NegaraID == NegaraID &&
                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() + "01";
            }

            else
            {
                int generateNewHarvestingDifficultyPriceCode =
                    Convert.ToInt32(getCurrentRunningHarvestingDifficultyPriceCode.Substring(1)) + 1;

                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
                                                       .Where(
                                                           x => x.fldOptConfFlag1 == "KesukaranMenuaiFlag" &&
                                                                x.fld_NegaraID == NegaraID &&
                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() +
                                                   generateNewHarvestingDifficultyPriceCode.ToString("00");
            }

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _HarvestingDifficultyPriceMaintenanceCreate(ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelCreate optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tblOptionConfigsWeb harvestingDifficultyPriceModel = new ModelsCorporate.tblOptionConfigsWeb();

                    harvestingDifficultyPriceModel.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    harvestingDifficultyPriceModel.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    harvestingDifficultyPriceModel.fldOptConfFlag1 = "KesukaranMenuai";
                    harvestingDifficultyPriceModel.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
                    harvestingDifficultyPriceModel.fldDeleted = false;
                    harvestingDifficultyPriceModel.fld_NegaraID = NegaraID;
                    harvestingDifficultyPriceModel.fld_SyarikatID = SyarikatID;

                    db.tblOptionConfigsWebs.Add(harvestingDifficultyPriceModel);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "harvestingDifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_HarvestingDifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _HarvestingDifficultyPriceMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMenuai" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit harvestingDifficultyPriceViewModel = new ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit();

            PropertyCopy.Copy(harvestingDifficultyPriceViewModel, harvestingDifficultyPriceData);

            return PartialView(harvestingDifficultyPriceViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _HarvestingDifficultyPriceMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebHarvestingDifficultyPriceViewModelEdit optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMenuai" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    harvestingDifficultyPriceData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "harvestingDifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_HarvestingDifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _HarvestingDifficultyPriceMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMenuai" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(harvestingDifficultyPriceData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _HarvestingDifficultyPriceMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMenuai" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (harvestingDifficultyPriceData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                harvestingDifficultyPriceData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "harvestingDifficultyPriceMaintenanceDetails",
                    rootUrl = domain,
                    action = "_HarvestingDifficultyPriceMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult FertilizingDifficultyPriceMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _FertilizingDifficultyPriceMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var fertilizingDifficultyData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "KesukaranMembaja" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = fertilizingDifficultyData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = fertilizingDifficultyData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = fertilizingDifficultyData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = fertilizingDifficultyData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _FertilizingDifficultyPriceMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            ModelsCorporate.tblOptionConfigsWebFertilizingDifficultyPriceViewModelCreate optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWebFertilizingDifficultyPriceViewModelCreate();

            var getCurrentRunningFertilizingDifficultyPriceCode = dbview.tblOptionConfigsWeb
                .Where(x => x.fldOptConfFlag1 == "KesukaranMembaja")
                .OrderByDescending(o => o.fldOptConfValue)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            if (getCurrentRunningFertilizingDifficultyPriceCode == null)
            {
                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
                                                       .Where(
                                                           x => x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&
                                                                x.fld_NegaraID == NegaraID &&
                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() + "01";
            }

            else
            {
                int generateNewFertilizingDifficultyPriceCode =
                    Convert.ToInt32(getCurrentRunningFertilizingDifficultyPriceCode.Substring(1)) + 1;

                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
                                                       .Where(
                                                           x => x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&
                                                                x.fld_NegaraID == NegaraID &&
                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() +
                                                   generateNewFertilizingDifficultyPriceCode.ToString("00");
            }

            return PartialView(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _FertilizingDifficultyPriceMaintenanceCreate(ModelsCorporate.tblOptionConfigsWebFertilizingDifficultyPriceViewModelCreate optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tblOptionConfigsWeb fertilizingDifficultyPriceModel = new ModelsCorporate.tblOptionConfigsWeb();

                    fertilizingDifficultyPriceModel.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    fertilizingDifficultyPriceModel.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    fertilizingDifficultyPriceModel.fldOptConfFlag1 = "KesukaranMembaja";
                    fertilizingDifficultyPriceModel.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
                    fertilizingDifficultyPriceModel.fldDeleted = false;
                    fertilizingDifficultyPriceModel.fld_NegaraID = NegaraID;
                    fertilizingDifficultyPriceModel.fld_SyarikatID = SyarikatID;

                    db.tblOptionConfigsWebs.Add(fertilizingDifficultyPriceModel);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "fertilizingDifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_FertilizingDifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _FertilizingDifficultyPriceMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var fertilizingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMembaja" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWebFertilizingDifficultyPriceViewModelEdit fertilizingDifficultyPriceViewModel = new ModelsCorporate.tblOptionConfigsWebFertilizingDifficultyPriceViewModelEdit();

            PropertyCopy.Copy(fertilizingDifficultyPriceViewModel, fertilizingDifficultyPriceData);

            return PartialView(fertilizingDifficultyPriceViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _FertilizingDifficultyPriceMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebFertilizingDifficultyPriceViewModelEdit optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMembaja" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    harvestingDifficultyPriceData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "fertilizingDifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_FertilizingDifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _FertilizingDifficultyPriceMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMembaja" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(harvestingDifficultyPriceData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _FertilizingDifficultyPriceMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var harvestingDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMembaja" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (harvestingDifficultyPriceData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                harvestingDifficultyPriceData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "fertilizingDifficultyPriceMaintenanceDetails",
                    rootUrl = domain,
                    action = "_FertilizingDifficultyPriceMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PayRateMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "unit" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult KmplnKategoriMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _KmplnKategoriMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "kmplnKategoriList" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _KmplnKategoriMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kmplnKategoriList" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsKmplnViewModel unitViewModel = new ModelsCorporate.tblOptionConfigsKmplnViewModel();

            PropertyCopy.Copy(unitViewModel, unitData);

            //List<SelectListItem> numberList = new List<SelectListItem>();

            //numberList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID &&
            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //numberList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.NumberList = numberList;

            //List<SelectListItem> categoryList = new List<SelectListItem>();

            //categoryList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
            //                    x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //categoryList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.CategoryList = categoryList;

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KmplnKategoriMaintenanceEdit(ModelsCorporate.tblOptionConfigsKmplnViewModel optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kmplnKategoriList" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    unitData.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper(); //03/03/2021 sepul ubah GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc); kpd .ToUpper
                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "KmplnKategoriMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KmplnKategoriMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KmplnKategoriMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KmplnKategoriMaintenanceCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "kmplnKategoriList" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = optionConfigsWeb.fldOptConfDesc.ToUpper(); //03/03/2021 sepul ubah GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "kmplnKategoriList";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "KmplnKategoriMaintenanceDetails",
                            rootUrl = domain,
                            action = "_KmplnKategoriMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KmplnKategoriMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "kmplnKategoriList" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(unitData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KmplnKategoriMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "kmplnKategoriList" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "KmplnKategoriMaintenanceDetails",
                    rootUrl = domain,
                    action = "_KmplnKategoriMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult GLMaintenance(string filter, int page = 1, string sort = "fld_KodGL",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _GLMaintenance(string filter, int page = 1,
            string sort = "fld_KodGL",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_MapGL>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var glData = db.tbl_MapGL
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = glData
                    .Where(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = glData
                    .Count(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = glData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = glData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }


        public JsonResult GetAktvt(string JnisAktvt)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> PilihAktiviti = new List<SelectListItem>();

            var tbl_UpahAktiviti = db.tbl_UpahAktiviti.Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodJenisAktvt == JnisAktvt && x.fld_Deleted == false).ToList();

            PilihAktiviti = new SelectList(tbl_UpahAktiviti.OrderBy(o => o.fld_KodAktvt).Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_KodAktvt.Trim() + " - " + s.fld_Desc }), "Value", "Text").ToList();
            PilihAktiviti.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            return Json(new { PilihAktiviti });
        }

        public ActionResult _GLMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var jnsxtivlist = db.tbl_JenisAktiviti
                    .Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_KodJnsAktvt).ToList();

                ViewBag.JnisAktvt = new SelectList(
                    jnsxtivlist
                    .Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();

                var fistxtivit = jnsxtivlist.Select(s => s.fld_KodJnsAktvt).Take(1).FirstOrDefault();
                ViewBag.KodAktvtList = new SelectList(
                    db.tbl_UpahAktiviti.Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KodJenisAktvt == fistxtivit && x.fld_Deleted == false).OrderBy(o => o.fld_KodAktvt)
                    .Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_KodAktvt.Trim() + " - " + s.fld_Desc }), "Value", "Text").ToList();

                ViewBag.JnsLotList = new SelectList(
                    db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "jnsLot" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
                        .Select(
                            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();

                ViewBag.PaysheetList = new SelectList(
                    db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "jnsPaysheet" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
                        .Select(
                            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();

                ViewBag.KodGLList = new SelectList(
                    db.tbl_GLSAP
                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_GLcode)
                        .Select(
                            s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_GLcode }), "Value", "Text").ToList();

                return PartialView();
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }


        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _GLMaintenanceCreate(ModelsCorporate.tbl_MapGL GlMaintenance, string KodAktvtList, string PaysheetList, string KodGLList, string JnsLotList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                                    x.fld_KodAktvt == KodAktvtList && x.fld_KodGL == KodGLList && x.fld_JnsLot == JnsLotList &&
                                                    x.fld_Paysheet == PaysheetList && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    GlMaintenance.fld_KodAktvt = KodAktvtList;
                    GlMaintenance.fld_KodGL = KodGLList;
                    GlMaintenance.fld_Paysheet = PaysheetList;
                    GlMaintenance.fld_JnsLot = JnsLotList;
                    GlMaintenance.fld_Deleted = false;
                    GlMaintenance.fld_NegaraID = NegaraID;
                    GlMaintenance.fld_SyarikatID = SyarikatID;
                    GlMaintenance.fld_WilayahID = WilayahID;
                    GlMaintenance.fld_LadangID = LadangID;

                    db.tbl_MapGL.Add(GlMaintenance);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "GLMaintenanceDetails",
                        rootUrl = domain,
                        action = "_GLMaintenance",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }


            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _GLMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);



            var glData = db.tbl_MapGL
                .SingleOrDefault(x => x.fld_ID == id &&
                                    x.fld_Deleted == false);

            var JnsAktivitiData = db.tbl_UpahAktiviti
                .SingleOrDefault(x => x.fld_KodAktvt == glData.fld_KodAktvt.Trim() && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);


            List<SelectListItem> JnisAktvt = new List<SelectListItem>();
            JnisAktvt = new SelectList(
                db.tbl_JenisAktiviti
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodJnsAktvt.ToString(), Text = s.fld_Desc }), "Value", "Text", JnsAktivitiData.fld_KodJenisAktvt).ToList();
            JnisAktvt.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KodJnsAktvt = JnisAktvt;


            List<SelectListItem> kodAktvtList = new List<SelectListItem>();
            kodAktvtList = new SelectList(
                db.tbl_UpahAktiviti
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodAktvt)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodAktvt.ToString(), Text = s.fld_KodAktvt.Trim() + " - " + s.fld_Desc }), "Value", "Text", glData.fld_KodAktvt.Trim()).ToList();
            kodAktvtList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KodAktvt = kodAktvtList;



            List<SelectListItem> JnsLot = new List<SelectListItem>();
            JnsLot = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jnsLot" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
                    .Select(
                           s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", glData.fld_JnsLot.Trim()).ToList();
            JnsLot.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_JnsLot = JnsLot;

            List<SelectListItem> paysheetList = new List<SelectListItem>();
            paysheetList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jnsPaysheet" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
                    .Select(
                           s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", glData.fld_Paysheet.Trim()).ToList();
            paysheetList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_Paysheet = paysheetList;


            List<SelectListItem> kodGLList = new List<SelectListItem>();
            kodGLList = new SelectList(
                db.tbl_GLSAP
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_GLcode)
                    .Select(
                        s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_GLcode }), "Value", "Text", glData.fld_KodGL.Trim()).ToList();
            kodGLList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KodGL = kodGLList;


            return PartialView(glData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _GLMaintenanceEdit(ModelsCorporate.tbl_MapGL gl)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                                    x.fld_KodAktvt == gl.fld_KodAktvt && x.fld_KodGL == gl.fld_KodGL && x.fld_JnsLot == gl.fld_JnsLot &&
                                                    x.fld_Paysheet == gl.fld_Paysheet && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    ModelsCorporate.tbl_MapGL getGL = db.tbl_MapGL
                        .Single(x => x.fld_ID == gl.fld_ID &&
                                     x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID && x.fld_Deleted == false);

                    getGL.fld_KodAktvt = gl.fld_KodAktvt;
                    getGL.fld_JnsLot = gl.fld_JnsLot;
                    getGL.fld_KodGL = gl.fld_KodGL;
                    getGL.fld_Paysheet = gl.fld_Paysheet;


                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "GLMaintenanceDetails",
                        rootUrl = domain,
                        action = "_GLMaintenance",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _GLMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var GlData = db.tbl_MapGL
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(GlData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _GLMaintenanceDelete(ModelsCorporate.tbl_MapGL gL)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var GlData = db.tbl_MapGL.SingleOrDefault(
                    x => x.fld_ID == gL.fld_ID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (GlData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                GlData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "GLMaintenanceDetails",
                    rootUrl = domain,
                    action = "_GLMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult GmnMapping(string filter, int page = 1, string sort = "fld_KodGL",
           string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _GmnMapping(string filter, int page = 1,
            string sort = "fld_KodGL",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_MapGL>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var glData = db.tbl_MapGL
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == 2);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = glData
                    .Where(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = glData
                    .Count(x => x.fld_KodGL.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KodAktvt.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = glData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = glData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }


        public JsonResult GetAktvtGMN(string KategoriAktiviti)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> PilihAktiviti = new List<SelectListItem>();

            var tbl_UpahAktiviti = db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KategoriAktvt == KategoriAktiviti && x.fld_Deleted == false).ToList();

            PilihAktiviti = new SelectList(tbl_UpahAktiviti.OrderBy(o => o.fld_KodAktvt).Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
            PilihAktiviti.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            return Json(new { PilihAktiviti });
        }


        public JsonResult GetGLGMN(string JnsGL)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> PilihGL = new List<SelectListItem>();

            var tblOptionConfigsWebs = db.tblOptionConfigsWebs.Where(x => x.fldOptConfValue == JnsGL && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).ToList();

            PilihGL = new SelectList(tblOptionConfigsWebs.OrderBy(o => o.fldOptConfValue).Select(s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfFlag2 }), "Value", "Text").ToList();
            //PilihGL.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" }));

            return Json(new { PilihGL });
        }

        public ActionResult _GmnMappingCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var jnsxtivlist = db.tbl_KategoriAktiviti
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID).ToList();

                ViewBag.KategoriAktiviti = new SelectList(
                    jnsxtivlist
                    .Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();

                var fistxtivit = jnsxtivlist.Select(s => s.fld_KodKategori).Take(1).FirstOrDefault();
                ViewBag.KodAktvtList = new SelectList(
                    db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KategoriAktvt == fistxtivit && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                    .Select(s => new SelectListItem { Value = s.fld_KodAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();



                var JnsGLlist = db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jnsGL" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue);

                ViewBag.JnsGL = new SelectList(
                    JnsGLlist
                    .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();

                var fistJnsGL = JnsGLlist.Select(s => s.fldOptConfFlag2).FirstOrDefault();
                ViewBag.KodJnsGL = new SelectList(
                    db.tbl_GLSAP.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_GLcode == fistJnsGL && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                    .Select(s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_Desc }), "Value", "Text").ToList();


                return PartialView();
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }


        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _GmnMappingCreate(ModelsCorporate.tbl_MapGL GmnMapping, string KodAktvtList, string KodJnsGL, string JnsGL)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                                    x.fld_KodAktvt == KodAktvtList && x.fld_KodGL == KodJnsGL &&
                                                    x.fld_Paysheet == JnsGL && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    GmnMapping.fld_KodAktvt = KodAktvtList;

                    GmnMapping.fld_KodGL = KodJnsGL;
                    GmnMapping.fld_Paysheet = JnsGL;
                    GmnMapping.fld_Deleted = false;
                    GmnMapping.fld_NegaraID = NegaraID;
                    GmnMapping.fld_SyarikatID = SyarikatID;
                    GmnMapping.fld_WilayahID = WilayahID;
                    GmnMapping.fld_LadangID = LadangID;

                    db.tbl_MapGL.Add(GmnMapping);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "GmnMappingDetails",
                        rootUrl = domain,
                        action = "_GmnMapping",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }


            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _GmnMappingEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);



            var glData = db.tbl_MapGL
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                    x.fld_Deleted == false);

            var JnsAktivitiData = db.tbl_UpahAktiviti
                .SingleOrDefault(x => x.fld_KodAktvt == glData.fld_KodAktvt.Trim() && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);


            var KategoriAktivitis = db.tbl_KategoriAktiviti
                .SingleOrDefault(x => x.fld_KodKategori == JnsAktivitiData.fld_KategoriAktvt.Trim() && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);


            List<SelectListItem> KodKategori = new List<SelectListItem>();
            KodKategori = new SelectList(
                db.tbl_KategoriAktiviti
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodKategori.ToString(), Text = s.fld_Kategori }), "Value", "Text", JnsAktivitiData.fld_KategoriAktvt.Trim()).ToList();
            KodKategori.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KodKategori = KodKategori;


            List<SelectListItem> kodAktvtList = new List<SelectListItem>();
            kodAktvtList = new SelectList(
                db.tbl_UpahAktiviti
                    .Where(x => x.fld_KategoriAktvt == KategoriAktivitis.fld_KodKategori && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodAktvt)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodAktvt.ToString(), Text = s.fld_Desc }), "Value", "Text", glData.fld_KodAktvt.Trim()).ToList();
            kodAktvtList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KodAktvt = kodAktvtList;


            //paysheet
            List<SelectListItem> JnsGL = new List<SelectListItem>();
            JnsGL = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "JnsGL" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfValue)
                    .Select(
                           s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", glData.fld_Paysheet.Trim()).ToList();
            JnsGL.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_Paysheet = JnsGL;


            //kodGL
            List<SelectListItem> KodJnsGL = new List<SelectListItem>();
            KodJnsGL = new SelectList(
                db.tbl_GLSAP
                    .Where(x => x.fld_GLcode == glData.fld_KodGL && x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_ID)
                    .Select(
                           s => new SelectListItem { Value = s.fld_GLcode, Text = s.fld_GLcode }), "Value", "Text", glData.fld_KodGL.Trim()).ToList();
            JnsGL.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KodGL = KodJnsGL;

            return PartialView(glData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _GmnMappingEdit(ModelsCorporate.tbl_MapGL gl)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var checkdata = db.tbl_MapGL.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                                    x.fld_KodAktvt == gl.fld_KodAktvt && x.fld_KodGL == gl.fld_KodGL &&
                                                    x.fld_Paysheet == gl.fld_Paysheet && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    ModelsCorporate.tbl_MapGL getGL = db.tbl_MapGL
                        .Single(x => x.fld_ID == gl.fld_ID &&
                                     x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID && x.fld_Deleted == false);

                    getGL.fld_KodAktvt = gl.fld_KodAktvt;
                    getGL.fld_KodGL = gl.fld_KodGL;
                    getGL.fld_Paysheet = gl.fld_Paysheet;


                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "GmnMappingDetails",
                        rootUrl = domain,
                        action = "_GmnMapping",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _GmnMappingDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var GlData = db.tbl_MapGL
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(GlData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _GmnMappingDelete(ModelsCorporate.tbl_MapGL gL)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var GlData = db.tbl_MapGL.SingleOrDefault(
                    x => x.fld_ID == gL.fld_ID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (GlData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                GlData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "GmnMappingDetails",
                    rootUrl = domain,
                    action = "_GmnMapping",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult KategoriAktiMaintenance(string filter, int page = 1, string sort = "fld_KodKategori",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _KategoriAktiMaintenance(string filter, int page = 1,
            string sort = "fld_KodKategori",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_KategoriAktiviti>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var KategoriAktiData = db.tbl_KategoriAktiviti
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = KategoriAktiData
                    .Where(x => x.fld_KodKategori.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Kategori.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = KategoriAktiData
                    .Count(x => x.fld_KodKategori.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Kategori.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = KategoriAktiData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = KategoriAktiData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _KategoriAktiMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);



            ModelsCorporate.tbl_KategoriAktivitiCreate optionConfigsWeb = new ModelsCorporate.tbl_KategoriAktivitiCreate();

            var getAktCode = db.tbl_KategoriAktiviti
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                .OrderByDescending(o => o.fld_KodKategori)
                .Select(s => s.fld_KodKategori)
                .FirstOrDefault();

            if (getAktCode == null)
            {
                optionConfigsWeb.fld_KodKategori = "01";

                //db.tbl_KategoriAktiviti
                //                                   .SingleOrDefault(
                //                                       x => /*x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&*/
                //                                            x.fld_NegaraID == NegaraID &&
                //                                            x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                //                                   .fld_KodKategori + "01";

            }

            else
            {

                var AktCode = db.tbl_KategoriAktiviti
                .Where(x => /*x.fldOptConfFlag1 == "KesukaranMembajaFlag" &&*/
                       x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                .OrderByDescending(o => o.fld_KodKategori)
                .Select(s => s.fld_KodKategori)
                .FirstOrDefault();

                var generateCurrentCode = Convert.ToInt32(AktCode) + 1;

                if (generateCurrentCode < 10)
                {
                    var Code = "0" + Convert.ToInt32(generateCurrentCode);
                    optionConfigsWeb.fld_KodKategori = Code.ToString();
                }
                else
                {
                    optionConfigsWeb.fld_KodKategori = generateCurrentCode.ToString();
                }
            }

            List<SelectListItem> KodKmplnKategori = new List<SelectListItem>();
            KodKmplnKategori = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "kmplnKategoriAktvt" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            KodKmplnKategori.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KmplnKategoriAktvt = KodKmplnKategori;

            return View(optionConfigsWeb);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KategoriAktiMaintenanceCreate(ModelsCorporate.tbl_KategoriAktivitiCreate optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_KategoriAktiviti
                        .Where(x =>
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fld_PrefixPkt)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fld_PrefixPkt.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigPrefix,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }
                    else
                    {
                        ModelsCorporate.tbl_KategoriAktiviti KateAKtModel = new ModelsCorporate.tbl_KategoriAktiviti();

                        KateAKtModel.fld_KodKategori = optionConfigsWeb.fld_KodKategori;
                        KateAKtModel.fld_Kategori = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Kategori);
                        KateAKtModel.fld_Deleted = false;
                        KateAKtModel.fld_NegaraID = NegaraID;
                        KateAKtModel.fld_SyarikatID = SyarikatID;
                        KateAKtModel.fld_PrefixPkt = optionConfigsWeb.fld_PrefixPkt.ToUpper();



                        db.tbl_KategoriAktiviti.Add(KateAKtModel);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "KategoriAktiMaintenanceDetails",
                            rootUrl = domain,
                            action = "_KategoriAktiMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KategoriAktiMaintenanceEdit(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> KodKmplnKategori = new List<SelectListItem>();
            KodKmplnKategori = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "kmplnKategoriAktvt" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            KodKmplnKategori.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KmplnKategoriAktvt = KodKmplnKategori;

            var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_KategoriAktivitiView unitViewModel = new ModelsCorporate.tbl_KategoriAktivitiView();

            PropertyCopy.Copy(unitViewModel, unitData);

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KategoriAktiMaintenanceEdit(ModelsCorporate.tbl_KategoriAktivitiView optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fld_KodKategori = optionConfigsWeb.fld_KodKategori.ToUpper();
                    unitData.fld_Kategori = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Kategori);
                    unitData.fld_PrefixPkt = optionConfigsWeb.fld_PrefixPkt.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "KategoriAktiMaintenanceDetails",
                        rootUrl = domain,
                        action = "_KategoriAktiMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _KategoriAktiMaintenanceDelete(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(unitData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _KategoriAktiMaintenanceDelete(ModelsCorporate.tbl_KategoriAktiviti optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tbl_KategoriAktiviti.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "KategoriAktiMaintenanceDetails",
                    rootUrl = domain,
                    action = "_KategoriAktiMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //public ActionResult PayrateAllMaintenance()
        //{
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
        //        NegaraID.Value);

        //    List<SelectListItem> aktvtlist = new List<SelectListItem>();

        //    aktvtlist = new SelectList(db.tbl_JenisAktiviti
        //        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
        //        .OrderBy(o => o.fld_KodJnsAktvt)
        //        .Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();

        //    aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

        //    ViewBag.Maintenance = "class = active";
        //    ViewBag.AktvtList = aktvtlist;

        //    return View();
        //}

        //public ActionResult _PayrateAllMaintenance(string AktvtList = "", int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
        //{
        //    //ViewBag.Maintenance = "class = active";
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

        //    MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
        //    int pageSize = int.Parse(GetConfig.GetData("paging"));
        //    var records = new PagedList<ViewingModels.tbl_UpahAktiviti>();

        //    if (AktvtList != "0")
        //    {
        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
        //               .OrderBy(sort + " " + sortdir)
        //               .Skip((page - 1) * pageSize)
        //               .Take(pageSize)
        //               .ToList();

        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_KodJenisAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
        //        records.CurrentPage = page;
        //        records.PageSize = pageSize;
        //        //ViewBag.AktvtList = AktvtList;
        //        db.Dispose();
        //        dbview.Dispose();
        //    }
        //    else
        //    {
        //        records.Content = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
        //               .OrderBy(sort + " " + sortdir)
        //               .Skip((page - 1) * pageSize)
        //               .Take(pageSize)
        //               .ToList();

        //        records.TotalRecords = dbview.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fld_Deleted == false).Count();
        //        records.CurrentPage = page;
        //        records.PageSize = pageSize;
        //        db.Dispose();
        //        dbview.Dispose();
        //    }

        //    //ViewBag.AktvtList = aktvtlist;
        //    ViewBag.Datacount = records.TotalRecords;
        //    return View(records);

        //}

        //public ActionResult _PayrateAllMaintenanceEdit(int id)
        //{
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

        //    MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

        //    List<SelectListItem> unitlist = new List<SelectListItem>();

        //    unitlist = new SelectList(db.tblOptionConfigsWebs
        //        .Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
        //        x.fld_SyarikatID == SyarikatID)
        //        .OrderBy(o => o.fldOptConfID)
        //        .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
        //        , "Value", "Text").ToList();

        //    //unitlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

        //    var PayData = db.tbl_UpahAktiviti.SingleOrDefault(
        //        x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
        //             x.fld_SyarikatID == SyarikatID);

        //    ModelsCorporate.tbl_UpahAktiviti unitViewModel = new ModelsCorporate.tbl_UpahAktiviti();

        //    PropertyCopy.Copy(unitViewModel, PayData);

        //    ViewBag.fld_Unit = unitlist;
        //    return View(unitViewModel);
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult _PayrateAllMaintenanceEdit(ModelsCorporate.tbl_UpahAktiviti UpahAktiviti)
        //{
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

        //    try
        //    {
        //        if (ModelState.IsValid)
        //        {
        //            var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
        //                x => x.fld_ID == UpahAktiviti.fld_ID &&
        //                     x.fld_NegaraID == NegaraID &&
        //                     x.fld_SyarikatID == SyarikatID);

        //            var unit = "0" + UpahAktiviti.fld_Unit;

        //            unitData.fld_Desc = UpahAktiviti.fld_Desc;
        //            unitData.fld_Harga = UpahAktiviti.fld_Harga;
        //            unitData.fld_Unit = unit;

        //            db.SaveChanges();

        //            string appname = Request.ApplicationPath;
        //            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
        //            var lang = Request.RequestContext.RouteData.Values["lang"];

        //            if (appname != "/")
        //            {
        //                domain = domain + appname;
        //            }

        //            return Json(new
        //            {
        //                success = true,
        //                msg = GlobalResCorp.msgUpdate,
        //                status = "success",
        //                checkingdata = "0",
        //                method = "1",
        //                div = "PayRateMaintenanceDetails",
        //                rootUrl = domain,
        //                action = "_PayrateAllMaintenance",
        //                controller = "Maintenance"
        //            });

        //        }

        //        else
        //        {
        //            return Json(new
        //            {
        //                success = false,
        //                msg = GlobalResCorp.msgErrorData,
        //                status = "danger",
        //                checkingdata = "0"
        //            });
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
        //        return Json(new
        //        {
        //            success = false,
        //            msg = GlobalResCorp.msgError,
        //            status = "danger",
        //            checkingdata = "0"
        //        });
        //    }

        //    finally
        //    {
        //        db.Dispose();
        //    }

        //}

        public ActionResult BlokDataMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _BlokDataMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "blokDataKerja" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _BlokDataMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "blokdatakerja" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            tblOptionConfigsWebBlokUpdate unitViewModel = new tblOptionConfigsWebBlokUpdate();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BlokDataMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebBlokUpdate optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "blokDataKerja" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);


                    int no = Convert.ToInt32(unitData.fldOptConfValue);
                    int max = Convert.ToInt32(unitData.fldOptConfFlag2);

                    if (no > max)
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.lblError,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {

                        unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "BlokDataMaintenanceDetails",
                            rootUrl = domain,
                            action = "_BlokDataMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult BlokDataVldMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _BlokDataVldMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "blokDataKerjaVldDt" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _BlokDataVldMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "blokdatakerjavlddt" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            tblOptionConfigsWebBlokUpdate unitViewModel = new tblOptionConfigsWebBlokUpdate();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BlokDataVldMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebBlokUpdate optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "blokdatakerjavlddt" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);


                    int no = Convert.ToInt32(unitData.fldOptConfValue);
                    int max = Convert.ToInt32(unitData.fldOptConfFlag2);

                    if (no > max)
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.lblError,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }
                    else
                    {

                        unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "BlokDataVldMaintenanceDetails",
                            rootUrl = domain,
                            action = "_BlokDataVldMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult BangsaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _BangsaMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "Bangsa" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _BangsaMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Bangsa" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            tblOptionConfigsWebBangsa unitViewModel = new tblOptionConfigsWebBangsa();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BangsaMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebBangsa optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Bangsa" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "BangsaMaintenanceDetails",
                        rootUrl = domain,
                        action = "_BangsaMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _BangsaMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Bangsa" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            tblOptionConfigsWebBangsa unitViewModel = new tblOptionConfigsWebBangsa();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BangsaMaintenanceDelete(ModelsCorporate.tblOptionConfigsWebBangsa optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Bangsa" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "BangsaMaintenanceDetails",
                    rootUrl = domain,
                    action = "_BangsaMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _BangsaCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _BangsaCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "Bangsa" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "Bangsa";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "BangsaMaintenanceDetails",
                            rootUrl = domain,
                            action = "_BangsaMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult AgamaMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _AgamaMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "Agama" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _AgamaMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Agama" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWeb unitViewModel = new ModelsCorporate.tblOptionConfigsWeb();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _AgamaMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Agama" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "AgamaMaintenanceDetails",
                        rootUrl = domain,
                        action = "_AgamaMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _AgamaMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Agama" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWeb unitViewModel = new ModelsCorporate.tblOptionConfigsWeb();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _AgamaMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Agama" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "AgamaMaintenanceDetails",
                    rootUrl = domain,
                    action = "_AgamaMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _AgamaCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _AgamaCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "Agama" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "Agama";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "AgamaMaintenanceDetails",
                            rootUrl = domain,
                            action = "_AgamaMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PositionMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _PositionMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "Position" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));


            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _PositionCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PositionCreate(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "Position" &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fldOptConfValue)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                        optionConfigsWeb.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                        optionConfigsWeb.fldOptConfFlag1 = "Position";
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fld_NegaraID = NegaraID;
                        optionConfigsWeb.fld_SyarikatID = SyarikatID;

                        db.tblOptionConfigsWebs.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "PositionMaintenanceDetails",
                            rootUrl = domain,
                            action = "_PositionMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PositionMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Position" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWeb unitViewModel = new ModelsCorporate.tblOptionConfigsWeb();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PositionMaintenanceEdit(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Position" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    unitData.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "PositionMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PositionMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PositionMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "Position" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWeb unitViewModel = new ModelsCorporate.tblOptionConfigsWeb();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PositionMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "Position" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "PositionMaintenanceDetails",
                    rootUrl = domain,
                    action = "_PositionMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }
        public JsonResult GetSubAkt(string KateAkt)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
            //MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);

            //var findsub = db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "kmplnKategoriAktvt" && x.fldOptConfValue == KateAkt && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).Select(s => s.fldOptConfValue).FirstOrDefault();

            List<SelectListItem> kateAkt = new List<SelectListItem>();
            kateAkt = new SelectList(db.tbl_KategoriAktiviti
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KmplnKategoriAktvt == KateAkt && x.fld_Deleted == false)
                .OrderBy(o => o.fld_ID)
                .Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();

            return Json(kateAkt);
        }

        public ActionResult PayrateGMNMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> aktvtlist = new List<SelectListItem>();
            aktvtlist = new SelectList(db.tbl_KategoriAktiviti
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false)
                .OrderBy(o => o.fld_KodKategori)
                .Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();
            aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblAll, Value = "0" }));

            List<SelectListItem> katelist = new List<SelectListItem>();
            katelist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "kmplnKategoriAktvt" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();

            ViewBag.Maintenance = "class = active";
            ViewBag.AktvtList = aktvtlist;
            ViewBag.KateList = katelist;

            return View();
        }

        public ActionResult _PayrateGMNMaintenance(string AktvtList, int page = 1, string sort = "fld_KodAktvt", string sortdir = "ASC")
        {
            //ViewBag.Maintenance = "class = active";
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //List<SelectListItem> aktvtlist = new List<SelectListItem>();
            //aktvtlist = new SelectList(db.tbl_JenisAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID==SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodJnsAktvt).Select(s => new SelectListItem { Value = s.fld_KodJnsAktvt, Text = s.fld_Desc }), "Value", "Text").ToList();
            //aktvtlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_UpahAktiviti>();

            //if (!String.IsNullOrEmpty(AktvtList))
            //{
            //    ViewBag.message = "Sila pilih kategori kerja dan aktiviti kerja";
            //    return View();
            //}
            if (AktvtList != "0")
            {
                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_KategoriAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID)
                       .OrderBy(sort + " " + sortdir)
                       .Skip((page - 1) * pageSize)
                       .Take(pageSize)
                       .ToList();

                records.TotalRecords = db.tbl_UpahAktiviti.Where(x => x.fld_KategoriAktvt == AktvtList && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID).Count();
                records.CurrentPage = page;
                records.PageSize = pageSize;
                //ViewBag.AktvtList = AktvtList;
                db.Dispose();
                dbview.Dispose();
            }
            else
            {
                records.Content = db.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID)
                       .OrderBy(sort + " " + sortdir)
                       .Skip((page - 1) * pageSize)
                       .Take(pageSize)
                       .ToList();

                records.TotalRecords = db.tbl_UpahAktiviti.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID).Count();
                records.CurrentPage = page;
                records.PageSize = pageSize;
                db.Dispose();
                dbview.Dispose();
            }

            //ViewBag.AktvtList = aktvtlist;
            ViewBag.Datacount = records.TotalRecords;
            return View(records);

        }

        public ActionResult PayrateGMNInsert()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> JnsAktvt = new List<SelectListItem>();
            List<SelectListItem> unitlist = new List<SelectListItem>();
            List<SelectListItem> Flaglist = new List<SelectListItem>();
            JnsAktvt = new SelectList(db.tbl_KategoriAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID).Select(s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();
            JnsAktvt.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));
            unitlist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            unitlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));
            Flaglist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "upahflag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            Flaglist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_DisabledFlag = Flaglist;
            ViewBag.fld_Unit = unitlist;
            ViewBag.fld_KategoriAktvt = JnsAktvt;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateGMNInsert(ModelsCorporate.tbl_UpahAktiviti UpahAktiviti)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {

                    UpahAktiviti.fld_KodAktvt = UpahAktiviti.fld_KodAktvt;
                    UpahAktiviti.fld_Desc = GetConfig.UppercaseFirst(UpahAktiviti.fld_Desc);
                    UpahAktiviti.fld_Unit = UpahAktiviti.fld_Unit.ToUpper();
                    UpahAktiviti.fld_Harga = UpahAktiviti.fld_Harga;
                    UpahAktiviti.fld_KategoriAktvt = UpahAktiviti.fld_KategoriAktvt;
                    UpahAktiviti.fld_DisabledFlag = UpahAktiviti.fld_DisabledFlag;
                    UpahAktiviti.fld_KdhByr = "B";
                    UpahAktiviti.fld_MaxProduktiviti = UpahAktiviti.fld_MaxProduktiviti;
                    UpahAktiviti.fld_Deleted = false;
                    UpahAktiviti.fld_NegaraID = NegaraID;
                    UpahAktiviti.fld_SyarikatID = SyarikatID;

                    db.tbl_UpahAktiviti.Add(UpahAktiviti);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "GMNMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PayrateGMNMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GenerateKodKategori(string jnsAktvt)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            string lastcode = db.tbl_UpahAktiviti.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_KategoriAktvt == jnsAktvt && x.fld_Deleted == false).OrderByDescending(o => o.fld_KodAktvt.Trim()).Select(s => s.fld_KodAktvt).FirstOrDefault();
            //modified to create activity code untuk pertama kali - kamalia 22/4/22
            if (lastcode == null)
            {
                int generated =  int.Parse(jnsAktvt +0 +1) ;
                string newcode = generated.ToString("0000");
                return Json(newcode);
            }
            else
            {
                int generated = int.Parse(lastcode) + 1;
                string newcode = generated.ToString("0000");
                return Json(newcode);
            }//
        }

        public ActionResult _PayrateGMNUpdate(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> unitlist = new List<SelectListItem>();
            List<SelectListItem> Flaglist = new List<SelectListItem>();

            unitlist = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "unit" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID)
                .OrderBy(o => o.fldOptConfID)
                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
                , "Value", "Text").ToList();

            Flaglist = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "upahFlag" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID)
                .OrderBy(o => o.fldOptConfID)
                .Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc })
                , "Value", "Text").ToList();

            //unitlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            var PayData = db.tbl_UpahAktiviti.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_UpahAktivitiViewModelGMN unitViewModel = new ModelsCorporate.tbl_UpahAktivitiViewModelGMN();

            PropertyCopy.Copy(unitViewModel, PayData);

            ViewBag.fld_Select = Flaglist;
            ViewBag.fld_Selection = unitlist;
            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PayrateGMNUpdate(ModelsCorporate.tbl_UpahAktivitiViewModelGMN tbl_UpahAktiviti)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fld_Desc = GetConfig.UppercaseFirst(tbl_UpahAktiviti.fld_Desc);
                    unitData.fld_Harga = tbl_UpahAktiviti.fld_Harga;
                    unitData.fld_Unit = tbl_UpahAktiviti.fld_Unit;
                    unitData.fld_DisabledFlag = tbl_UpahAktiviti.fld_DisabledFlag;
                    //getdata.fld_Produktvt = tbl_UpahAktiviti.fld_Produktvt;

                    //db.Entry(unitData).State = EntityState.Modified;
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "GMNMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PayrateGMNMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _PayrateGMNDelete(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            ModelsCorporate.tbl_UpahAktiviti Payrate = db.tbl_UpahAktiviti
                .Single(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

            return PartialView(Payrate);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PayrateGMNDelete(ModelsCorporate.tbl_UpahAktiviti tbl_UpahAktiviti)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tbl_UpahAktiviti.SingleOrDefault(
                        x => x.fld_ID == tbl_UpahAktiviti.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "GMNMaintenanceDetails",
                    rootUrl = domain,
                    action = "_PayrateGMNMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult YieldInfoMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _YieldInfoMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var yieldInfoData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "kodJenisHasilSawit" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            records.Content = yieldInfoData.OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = yieldInfoData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _YieldInfoMaintenanceEdit()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> yieldInfoList = new List<SelectListItem>();

            yieldInfoList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "kodJenisHasilSawit" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag3, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            yieldInfoList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.YieldInfoList = yieldInfoList;

            var yieldInfoMenuData = db.tblMenuLists.SingleOrDefault(x =>
                x.fld_Flag == "maklumatPkjList" && x.fld_Sub == "yieldInfo" && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

            ModelsCorporate.tblMenuListYieldInfoViewModel menuListYieldInfoViewModel = new ModelsCorporate.tblMenuListYieldInfoViewModel();

            PropertyCopy.Copy(menuListYieldInfoViewModel, yieldInfoMenuData);

            return PartialView(menuListYieldInfoViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _YieldInfoMaintenanceEdit(ModelsCorporate.tblMenuListYieldInfoViewModel menuListYieldInfoViewModel)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var yieldInfoMenuData = db.tblMenuLists.SingleOrDefault(x =>
                        x.fld_Flag == "maklumatPkjList" && x.fld_Sub == "yieldInfo" && x.fld_NegaraID == NegaraID &&
                        x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

                    yieldInfoMenuData.fld_Val = menuListYieldInfoViewModel.fld_Val;

                    var yieldInfoData = db.tblOptionConfigsWebs.Where(x =>
                        x.fldOptConfFlag1 == "kodJenisHasilSawit" && x.fld_NegaraID == NegaraID &&
                        x.fld_SyarikatID == SyarikatID && x.fldDeleted == false);

                    foreach (var yieldInfo in yieldInfoData)
                    {
                        if (yieldInfo.fldOptConfFlag3 == menuListYieldInfoViewModel.fld_Val)
                        {
                            yieldInfo.fldOptConfFlag2 = "True";
                        }

                        else
                        {
                            yieldInfo.fldOptConfFlag2 = "False";
                        }
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "yieldInfoMaintenanceDetails",
                        rootUrl = domain,
                        action = "_YieldInfoMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //tambah maklumat Cost Center
        //tbl_CCSAP
        public ActionResult CostCenterMaintenance(string filter, int page = 1, string sort = "fld_CstCnter", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
            //    NegaraID.Value);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CostCenterMaintenance(string filter, int page = 1, string sort = "fld_CstCnter", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value,
            //    NegaraID.Value);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CCSAP>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var glData = db.tbl_CCSAP
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = glData
                    .Where(x => x.fld_CstCnter.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Desc.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = glData
                    .Count(x => x.fld_CstCnter.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_Desc.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = glData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = glData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }



        public ActionResult _CostCenterMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CostCenterMaintenanceCreate(ModelsCorporate.tbl_CCSAP ccMaintenance)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var checkdata = db.tbl_CCSAP.Where(x => x.fld_CstCnter == ccMaintenance.fld_CstCnter && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    ccMaintenance.fld_CstCnter = ccMaintenance.fld_CstCnter;
                    ccMaintenance.fld_Desc = GetConfig.UppercaseFirst(ccMaintenance.fld_Desc);
                    ccMaintenance.fld_Deleted = false;
                    ccMaintenance.fld_NegaraID = NegaraID;
                    ccMaintenance.fld_SyarikatID = SyarikatID;
                    ccMaintenance.fld_DTCreated = timezone.gettimezone();

                    db.tbl_CCSAP.Add(ccMaintenance);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "CostCentMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CostCenterMaintenance",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }


            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CostCenterMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            var ccData = db.tbl_CCSAP
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

            return PartialView(ccData);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CostCenterMaintenanceEdit(ModelsCorporate.tbl_CCSAP cc)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var checkdata = db.tbl_CCSAP.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                                    x.fld_CstCnter == cc.fld_CstCnter && x.fld_Desc == cc.fld_Desc && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    ModelsCorporate.tbl_CCSAP getCC = db.tbl_CCSAP
                        .Single(x => x.fld_ID == cc.fld_ID && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

                    getCC.fld_CstCnter = cc.fld_CstCnter;
                    getCC.fld_Desc = cc.fld_Desc;
                    getCC.fld_DTModified = timezone.gettimezone();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "CostCentMaintenanceDetails",
                        rootUrl = domain,
                        action = "_CostCenterMaintenance",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CostCenterMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            var CcData = db.tbl_CCSAP
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(CcData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CostCenterMaintenanceDelete(ModelsCorporate.tbl_CCSAP cc)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var CcData = db.tbl_CCSAP.SingleOrDefault(
                    x => x.fld_ID == cc.fld_ID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (CcData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                CcData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "CostCentMaintenanceDetails",
                    rootUrl = domain,
                    action = "_CostCenterMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //cost center mapping
        //table tbl_CostCentre
        public ActionResult CostCentMapping(string filter, int page = 1, string sort = "fld_CostCentre", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _CostCentMapping(string filter, int page = 1, string sort = "fld_CostCentre", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CostCentre>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var ccData = db.tbl_CostCentre
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = ccData
                    .Where(x => x.fld_CostCentre.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KodKtgri.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = ccData
                    .Count(x => x.fld_CostCentre.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_KodKtgri.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = ccData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = ccData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _CostCentMappingCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {

                ViewBag.ccList = new SelectList(
                    db.tbl_CCSAP
                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                        .Select(
                            s => new SelectListItem { Value = s.fld_CstCnter, Text = s.fld_CstCnter }), "Value", "Text").ToList();

                ViewBag.katxtivitiList = new SelectList(
                    db.tbl_KategoriAktiviti
                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                        .Select(
                            s => new SelectListItem { Value = s.fld_KodKategori, Text = s.fld_Kategori }), "Value", "Text").ToList();


                return PartialView();
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }


        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CostCentMappingCreate(ModelsCorporate.tbl_CostCentre CostCentMapping, string ccList, string katxtivitiList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var checkdata = db.tbl_CostCentre.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                                    x.fld_CostCentre == ccList && x.fld_KodKtgri == katxtivitiList && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    CostCentMapping.fld_CostCentre = ccList;
                    CostCentMapping.fld_KodKtgri = katxtivitiList;
                    CostCentMapping.fld_Deleted = false;
                    CostCentMapping.fld_NegaraID = NegaraID;
                    CostCentMapping.fld_SyarikatID = SyarikatID;
                    CostCentMapping.fld_WilayahID = WilayahID;
                    CostCentMapping.fld_LadangID = LadangID;

                    db.tbl_CostCentre.Add(CostCentMapping);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "CostCentMappingDetails",
                        rootUrl = domain,
                        action = "_CostCentMapping",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }


            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }
        public ActionResult _CostCentMappingEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);


            var ccData = db.tbl_CostCentre
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                    x.fld_Deleted == false);


            List<SelectListItem> Kodcostcent = new List<SelectListItem>();
            Kodcostcent = new SelectList(
                db.tbl_CCSAP
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_CstCnter.ToString(), Text = s.fld_CstCnter }), "Value", "Text", ccData.fld_CostCentre.Trim()).ToList();
            Kodcostcent.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_CCcode = Kodcostcent;


            List<SelectListItem> KodKategori = new List<SelectListItem>();
            KodKategori = new SelectList(
                db.tbl_KategoriAktiviti
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodKategori.ToString(), Text = s.fld_Kategori }), "Value", "Text", ccData.fld_KodKtgri.Trim()).ToList();
            KodKategori.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.fld_KodKategori = KodKategori;


            return PartialView(ccData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CostCentMappingEdit(ModelsCorporate.tbl_CostCentre cc)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var checkdata = db.tbl_CostCentre.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID &&
                                                    x.fld_CostCentre == cc.fld_CostCentre && x.fld_KodKtgri == cc.fld_KodKtgri && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    ModelsCorporate.tbl_CostCentre getcc = db.tbl_CostCentre
                        .Single(x => x.fld_ID == cc.fld_ID &&
                                     x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_LadangID == LadangID && x.fld_Deleted == false);

                    getcc.fld_CostCentre = cc.fld_CostCentre;
                    getcc.fld_KodKtgri = cc.fld_KodKtgri;


                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "CostCentMappingDetails",
                        rootUrl = domain,
                        action = "_CostCentMapping",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _CostCentMappingDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            var ccData = db.tbl_CostCentre
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(ccData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _CostCentMappingDelete(ModelsCorporate.tbl_CostCentre cc)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            // Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var ccData = db.tbl_CostCentre.SingleOrDefault(
                    x => x.fld_ID == cc.fld_ID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (ccData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                ccData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "CostCentMappingDetails",
                    rootUrl = domain,
                    action = "_CostCentMapping",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstatePublicHolidayMaintenance(int page = 1, string sort = "fld_TarikhCuti",
             string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var nextYear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            yearlist.Add(new SelectListItem { Text = nextYear.ToString(), Value = nextYear.ToString() });

            ViewBag.YearList = yearlist;

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            //comment by fatin - 17/04/2023
            /*wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();*/

            //fatin added - 17/04/2023
            if (WilayahID == 0 && LadangID == 0)
            {
                wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            }
            else
            {
                wilayahList = new SelectList(db.tbl_Wilayah.Where(x => x.fld_ID == WilayahID), "fld_ID", "fld_WlyhName").ToList();

            }
            //end

            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            //comment by fatin 17/042023
            //ladangList = new SelectList(
            //    db.tbl_Ladang
            //        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_LdgName)
            //        .Select(
            //            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_LdgName }), "Value", "Text").ToList();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.LadangList = ladangList;

            return View();
        }

        public ActionResult _EstatePublicHolidayMaintenance(int? YearList, int? WilayahList, int? LadangList, int page = 1, string sort = "fld_TarikhCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()) || String.IsNullOrEmpty(WilayahList.ToString()) || String.IsNullOrEmpty(LadangList.ToString()))
            {
                message = GlobalResCorp.msgChoosePublicHolidayAllocation;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_CutiUmumLdg>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publicHolidayData = db.vw_CutiUmumLdg
                .Where(x => x.fld_Year == YearList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_WlyhID == WilayahList && x.fld_Deleted == false).ToList();

            List<vw_CutiUmumLdg> vw_CutiUmumLdg = new List<vw_CutiUmumLdg>();

            if (!String.IsNullOrEmpty(LadangList.ToString()))
            {
                if (LadangList == 0)
                {
                    vw_CutiUmumLdg = publicHolidayData;
                }

                else
                {
                    vw_CutiUmumLdg = publicHolidayData.Where(x => x.fld_ID == LadangList).ToList();
                }
            }

            records.Content = vw_CutiUmumLdg;
            records.TotalRecords = vw_CutiUmumLdg.Count;

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = vw_CutiUmumLdg
                .Count();

            return View(records);
        }

        public JsonResult GetLadang(int WilayahID)
        {
            List<SelectListItem> ladanglist = new List<SelectListItem>();

            int? NegaraID = 0;
            int? SyarikatID = 0;
            int? WilayahID2 = 0;
            int? LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID2, out LadangID, getuserid, User.Identity.Name);

            if (getwilyah.GetAvailableWilayah(SyarikatID))
            {
                if (WilayahID == 0)
                {
                    ladanglist = new SelectList(db.vw_NSWL.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_Deleted_L == false).OrderBy(o => o.fld_NamaLadang).Select(s => new SelectListItem { Value = s.fld_LadangID.ToString(), Text = s.fld_LdgCode + " - " + s.fld_NamaLadang }), "Value", "Text").ToList();
                }
                else
                {
                    ladanglist = new SelectList(db.vw_NSWL.Where(x => x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID && x.fld_Deleted_L == false).OrderBy(o => o.fld_NamaLadang).Select(s => new SelectListItem { Value = s.fld_LadangID.ToString(), Text = s.fld_LdgCode + " - " + s.fld_NamaLadang }), "Value", "Text").ToList();
                }
            }

            return Json(ladanglist);
        }

        public ActionResult _EstatePublicHolidayMaintenanceInfo(int? id, int? year, int page = 1, string sort = "fld_TarikhCuti", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ViewingModels.vw_CutiUmumLdgDetails>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publicHolidayData = dbview.vw_CutiUmumLdgDetails
                .Where(x => x.fld_Year == year && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_LadangID == id && x.fld_Deleted == false).OrderBy(o => o.fld_TarikhCuti);

            records.Content = publicHolidayData.ToList();

            records.TotalRecords = publicHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publicHolidayData
                .Count();

            return View(records);
        }

        public ActionResult _EstatePublicHolidayMaintenanceDelete(int? id, int? year, int page = 1, string sort = "fld_TarikhCuti", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ViewingModels.vw_CutiUmumLdgDetails>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publicHolidayData = dbview.vw_CutiUmumLdgDetails
                .Where(x => x.fld_Year == year && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_LadangID == id && x.fld_Deleted == false).OrderBy(o => o.fld_TarikhCuti);

            var message = "";
            if (publicHolidayData.Count() == 0)
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            records.Content = publicHolidayData.ToList();

            records.TotalRecords = publicHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publicHolidayData.Count();
            ViewBag.LadangID = id;

            return View(records);
        }

        public ActionResult _PublicHolidayAllocationMaintenanceDelete(List<int> leaveID, int year, int ladang)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (leaveID != null)
                {
                    //remove checkall value from leaveID list
                    leaveID.Remove(0);

                    foreach (var id in leaveID)
                    {
                        var selectedPublicHolidayData = db.tbl_CutiUmumLdg.SingleOrDefault(x =>
                            x.fld_CutiMasterID == id && x.fld_LadangID == ladang && x.fld_Deleted == false);

                        selectedPublicHolidayData.fld_ModifiedBy = getuserid;
                        selectedPublicHolidayData.fld_ModifiedDT = timezone.gettimezone();
                        selectedPublicHolidayData.fld_Deleted = true;
                    }
                }

                db.SaveChanges();

                var ladangData = db.tbl_Ladang.SingleOrDefault(x => x.fld_ID == ladang);

                var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                        x.fldOptConfFlag1 == "cutiUmumFlag" &&
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .fldOptConfValue;

                var selectedPublicHolidayCount = db.tbl_CutiUmumLdg.Count(x =>
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                    x.fld_WilayahID == ladangData.fld_WlyhID && x.fld_LadangID == ladang &&
                    x.fld_Deleted == false);

                string hostEstate, catalogEstate, userEstate, passEstate = "";
                Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate, ladangData.fld_WlyhID, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

                var workerPublicHolidayData = estateConnection.tbl_CutiPeruntukan.Where(x =>
                    x.fld_KodCuti == publicHolidayCode && x.fld_Tahun == year &&
                    x.fld_LadangID == ladang && x.fld_Deleted == false);

                foreach (var workerPublicHoliday in workerPublicHolidayData)
                {
                    workerPublicHoliday.fld_JumlahCuti = selectedPublicHolidayCount;
                }

                estateConnection.SaveChanges();

                estateConnection.Dispose();


                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgDelete2,
                    status = "success",
                    year = year,
                    wilayah = ladangData.fld_WlyhID,
                    ladang = 0,
                    checkingdata = "1"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstatePublicHolidayMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            tbl_CutiUmumLdgViewModelCreateHQ tblCutiUmumLdgViewModelCreateHq = new tbl_CutiUmumLdgViewModelCreateHQ();

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> cutiList = new List<SelectListItem>();

            ViewBag.CutiList = cutiList;

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var nextYear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }

            yearlist.Add(new SelectListItem { Text = nextYear.ToString(), Value = nextYear.ToString() });

            yearlist.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "0" });

            ViewBag.YearList = yearlist;

            return View(tblCutiUmumLdgViewModelCreateHq);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstatePublicHolidayMaintenanceCreate(ModelsCorporate.tbl_CutiUmumLdgViewModelCreateHQ tblCutiUmumLdgViewModelCreateHq)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    List<tbl_CutiUmumLdg> cutiUmumLdgList = new List<tbl_CutiUmumLdg>();

                    var estatePublicHolidayData = db.tbl_CutiUmumLdg
                        .Where(x => tblCutiUmumLdgViewModelCreateHq.fld_LadangID.ToList()
                                        .Contains((int)x.fld_LadangID) && tblCutiUmumLdgViewModelCreateHq
                                        .fld_CutiMasterID.ToList()
                                        .Contains((int)x.fld_CutiMasterID) &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID
                                    && x.fld_Year == tblCutiUmumLdgViewModelCreateHq.fld_Year);

                    foreach (var estatePublicHoliday in estatePublicHolidayData)
                    {
                        estatePublicHoliday.fld_ModifiedBy = getuserid;
                        estatePublicHoliday.fld_ModifiedDT = timezone.gettimezone();
                        estatePublicHoliday.fld_Deleted = false;
                        estatePublicHoliday.fld_CreatedInd = "HQ";
                    }

                    db.SaveChanges();

                    foreach (var ladangID in tblCutiUmumLdgViewModelCreateHq.fld_LadangID)
                    {
                        var ladangData = db.tbl_Ladang.Single(x => x.fld_ID == ladangID);

                        foreach (var cutiUmumLdgNew in tblCutiUmumLdgViewModelCreateHq.fld_CutiMasterID)
                        {
                            if (estatePublicHolidayData.Count(x => x.fld_LadangID == ladangID && x.fld_CutiMasterID == cutiUmumLdgNew) == 0)
                            {
                                tbl_CutiUmumLdg cutiUmumLdg = new tbl_CutiUmumLdg();

                                cutiUmumLdg.fld_CutiMasterID = Convert.ToInt32(cutiUmumLdgNew);
                                cutiUmumLdg.fld_Year = tblCutiUmumLdgViewModelCreateHq.fld_Year;
                                cutiUmumLdg.fld_NegaraID = NegaraID;
                                cutiUmumLdg.fld_SyarikatID = SyarikatID;
                                cutiUmumLdg.fld_WilayahID = ladangData.fld_WlyhID;
                                cutiUmumLdg.fld_LadangID = ladangData.fld_ID;
                                cutiUmumLdg.fld_Deleted = false;
                                cutiUmumLdg.fld_CreatedBy = getuserid;
                                cutiUmumLdg.fld_CreatedDT = timezone.gettimezone();
                                cutiUmumLdg.fld_CreatedInd = "HQ";

                                cutiUmumLdgList.Add(cutiUmumLdg);
                            }
                        }
                    }

                    if (cutiUmumLdgList.Count > 0)
                    {
                        db.tbl_CutiUmumLdg.AddRange(cutiUmumLdgList);
                        db.SaveChanges();
                    }

                    foreach (var ladangID in tblCutiUmumLdgViewModelCreateHq.fld_LadangID)
                    {
                        var ladangData = db.tbl_Ladang.SingleOrDefault(x => x.fld_ID == ladangID);

                        var connectionData = db.tblConnections.Where(x =>
                            x.negaraID == NegaraID && x.syarikatID == SyarikatID && x.wilayahID == ladangData.fld_WlyhID && x.deleted == false);

                        var publicHolidayCode = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                                x.fldOptConfFlag1 == "cutiUmumFlag" &&
                                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                            .fldOptConfValue;

                        var selectedPublicHolidayCount = db.tbl_CutiUmumLdg.Count(x =>
                            x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == ladangData.fld_WlyhID && x.fld_LadangID == ladangID &&
                            x.fld_Deleted == false);

                        string hostEstate, catalogEstate, userEstate, passEstate = "";
                        Connection.GetConnection(out hostEstate, out catalogEstate, out userEstate, out passEstate, ladangData.fld_WlyhID, SyarikatID.Value, NegaraID.Value);
                        MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(hostEstate, catalogEstate, userEstate, passEstate);

                        var workerPublicHolidayData = estateConnection.tbl_CutiPeruntukan.Where(x =>
                            x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == ladangData.fld_WlyhID &&
                            x.fld_KodCuti == publicHolidayCode &&
                            x.fld_Tahun == tblCutiUmumLdgViewModelCreateHq.fld_Year &&
                            x.fld_LadangID == ladangID && x.fld_Deleted == false);

                        foreach (var workerPublicHoliday in workerPublicHolidayData)
                        {
                            workerPublicHoliday.fld_JumlahCuti = selectedPublicHolidayCount;
                        }

                        estateConnection.SaveChanges();

                        estateConnection.Dispose();
                    }

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "4",
                        div = "publicHolidayAllocationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstatePublicHolidayMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = tblCutiUmumLdgViewModelCreateHq.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = "0",
                        paramName3 = "YearList",
                        paramValue3 = tblCutiUmumLdgViewModelCreateHq.fld_Year
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GetLeave(int year)
        {
            List<SelectListItem> ladanglist = new List<SelectListItem>();

            int? NegaraID = 0;
            int? SyarikatID = 0;
            int? WilayahID2 = 0;
            int? LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID2, out LadangID, getuserid, User.Identity.Name);

            if (getwilyah.GetAvailableWilayah(SyarikatID))
            {
                ladanglist = new SelectList(
                    db.tbl_CutiUmumMaster
                        .Where(x => x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID &&
                                    x.fld_Tahun == year && x.fld_Deleted == false).OrderBy(o => o.fld_TarikhCuti)
                        .Select(s => new SelectListItem
                        {
                            Value = s.fld_CutiUmumMasterID.ToString(),
                            Text = s.fld_TarikhCuti.Value.Day + "/" +
                                   s.fld_TarikhCuti.Value.Month + "/" + s.fld_TarikhCuti.Value.Year + " - "  + s.fld_KeteranganCuti
                        }), "Value", "Text").ToList();
            }

            return Json(ladanglist);
        }

        //public ActionResult Kepuasan()
        //{
        //    ViewBag.Maintenance = "class = active";
        //    int? NegaraID, SyarikatID, WilayahID, LadangID;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
        //    MVC_SYSTEM_Models dbr = MVC_SYSTEM_Models.ConnectToSqlServer(host, catalog, user, pass);

        //    //MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();


        //    var result = dbr.tbl_Kepuasan
        //        .Where(x => x.fld_UserID == getuserid && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_LadangID == LadangID)
        //        ;

        //    if (result != null)
        //    {
        //        ViewBag.Message = "Ada Data";
        //        return View();
        //    }
        //    else
        //    {
        //        return View();
        //    }
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult Kepuasan(ModelsEstate.tbl_Kepuasan UpahAktiviti, int RadioGroup)
        //{
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
        //    Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
        //    MVC_SYSTEM_ModelsEstate dbr = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

        //    try
        //    {
        //        if (ModelState.IsValid)
        //        {

        //            UpahAktiviti.fld_UserID = getuserid;
        //            UpahAktiviti.fld_Kepuasan = RadioGroup;
        //            UpahAktiviti.fld_LadangID = LadangID;
        //            UpahAktiviti.fld_SyarikatID = SyarikatID;
        //            UpahAktiviti.fld_WilayahID = WilayahID;
        //            UpahAktiviti.fld_NegaraID = NegaraID;
        //            UpahAktiviti.fld_Tarikh = DateTime.Today;
        //            UpahAktiviti.fld_Catatan = UpahAktiviti.fld_Catatan;

        //            dbr.tbl_Kepuasan.Add(UpahAktiviti);
        //            dbr.SaveChanges();

        //            string appname = Request.ApplicationPath;
        //            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
        //            var lang = Request.RequestContext.RouteData.Values["lang"];

        //            if (appname != "/")
        //            {
        //                domain = domain + appname;
        //            }

        //            return Json(new
        //            {
        //                success = true,
        //                msg = GlobalResCorp.msgUpdate,
        //                status = "success",
        //                checkingdata = "0",
        //                action = "index",
        //            });
        //        }


        //        else
        //        {
        //            return Json(new
        //            {
        //                success = false,
        //                msg = GlobalResCorp.msgErrorData,
        //                status = "danger",
        //                checkingdata = "0"
        //            });
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
        //        return Json(new
        //        {
        //            success = false,
        //            msg = GlobalResCorp.msgError,
        //            status = "danger",
        //            checkingdata = "0"
        //        });
        //    }

        //    finally
        //    {
        //        db.Dispose();
        //    }
        //}

        public ActionResult EmailMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> EmailList = new List<SelectListItem>();
            List<SelectListItem> DepartList = new List<SelectListItem>();
            List<SelectListItem> WilayahIDList = new List<SelectListItem>();

            EmailList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "emailcategory" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fldOptConfValue", "fldOptConfDesc").ToList();

            DepartList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "department" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fldOptConfValue", "fldOptConfDesc").ToList();
            DepartList.Insert(0, (new SelectListItem { Text = GlobalResReport.sltAll, Value = " " }));

            WilayahIDList = new SelectList(db.tbl_Wilayah
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fld_ID", "fld_WlyhName").ToList();
            WilayahIDList.Insert(0, (new SelectListItem { Text = GlobalResReport.sltAll, Value = "0" }));


            ViewBag.Maintenance = "class = active";
            ViewBag.CateList = EmailList;
            ViewBag.DepartList = DepartList;
            ViewBag.WilayahList = WilayahIDList;
            return View();
        }

        public ActionResult _EmailMaintenance(string CateList, string DepartList, int? WilayahList, int page = 1,
            string sort = "fldID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<Models.tblEmailList>();
            int role = GetIdentity.RoleID(getuserid).Value;

            //if(Email == null && Depart == null)
            //{
            //    ViewBag.message = " SIla Pilih Kategory dan Department";
            //    return View();
            //}
            if (DepartList != " ")
            {

                var unitData = dbo.tblEmailLists
                    .Where(x => x.fldCategory == CateList &&
                                x.fldDepartment == DepartList &&
                                x.fldWilayahID == WilayahList  
                                //farahin tambah condition flddeleted - 15/2/2021
                                && x.fldDeleted == false
                                //&& x.fldNegaraID == NegaraID 
                                // && x.fldSyarikatID == SyarikatID
                                );

                if (unitData != null)
                {
                    records.Content = unitData
                        //.Where(x => x.fldNegaraID == NegaraID &&
                        //            x.fldSyarikatID == SyarikatID)
                        .OrderBy(sort + " " + sortdir)
                        .Skip((page - 1) * pageSize)
                        .Take(pageSize)
                        .ToList();

                    records.TotalRecords = unitData
                        .Count();


                }

                else
                {
                    records.Content = unitData.OrderBy(sort + " " + sortdir)
                        .Skip((page - 1) * pageSize)
                        .Take(pageSize)
                        .ToList();

                    records.TotalRecords = unitData
                        .Count();
                }

                records.CurrentPage = page;
                records.PageSize = pageSize;
                ViewBag.RoleID = role;
                ViewBag.pageSize = 1;

                //return View(records);

            }
            else
            {
                var unitData = dbo.tblEmailLists
                    .Where(x => x.fldCategory == CateList &&
                                x.fldWilayahID == WilayahList
                                //farahin tambah condition flddeleted - 15/2/2021
                                && x.fldDeleted == false
                                //&& x.fldNegaraID == NegaraID 
                                // && x.fldSyarikatID == SyarikatID
                                );

                if (unitData != null)
                {
                    records.Content = unitData
                        //.Where(x => x.fldNegaraID == NegaraID &&
                        //            x.fldSyarikatID == SyarikatID)
                        .OrderBy(sort + " " + sortdir)
                        .Skip((page - 1) * pageSize)
                        .Take(pageSize)
                        .ToList();

                    records.TotalRecords = unitData
                        .Count();


                }

                else
                {
                    records.Content = unitData.OrderBy(sort + " " + sortdir)
                        .Skip((page - 1) * pageSize)
                        .Take(pageSize)
                        .ToList();

                    records.TotalRecords = unitData
                        .Count();
                }

                records.CurrentPage = page;
                records.PageSize = pageSize;
                ViewBag.RoleID = role;
                ViewBag.pageSize = 1;


            }

            return View(records);

        }

        public ActionResult _EmailCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> EmailList = new List<SelectListItem>();
            List<SelectListItem> DepartList = new List<SelectListItem>();
            List<SelectListItem> WilayahIDList = new List<SelectListItem>();

            EmailList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "emailcategory" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fldOptConfValue", "fldOptConfDesc").ToList();
            EmailList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose }));

            DepartList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "department" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fldOptConfValue", "fldOptConfDesc").ToList();
            DepartList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose }));

            WilayahIDList = new SelectList(db.tbl_Wilayah
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fld_ID", "fld_WlyhName").ToList();
            WilayahIDList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" })); //farahin tambah value = 0 - 16/02/2021

            ViewBag.EmailCate = EmailList;
            ViewBag.Department = DepartList;
            ViewBag.Wilayah = WilayahIDList;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EmailCreate(Models.tblEmailList optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();
            //farahin tambah declaration - 16/2/2021
            string appname = Request.ApplicationPath;
            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
            var lang = Request.RequestContext.RouteData.Values["lang"];

            try
            {
                if (ModelState.IsValid)
                {
                    //var unitData = db.tblEmailList
                    //    .Where(x => x.fldOptConfFlag1 == "Agama" &&
                    //                x.fld_NegaraID == NegaraID &&
                    //                x.fld_SyarikatID == SyarikatID)
                    //    .Select(s => s.fldOptConfValue)
                    //    .ToList();

                    //if (unitData.Contains(optionConfigsWeb.fldOptConfValue.ToUpper()))
                    //{
                    //    return Json(new
                    //    {
                    //        success = false,
                    //        msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                    //        status = "danger",
                    //        checkingdata = "0"
                    //    });
                    //}

                    //else
                    //{
                    //farahin comment - 16/2/2021
                    /*optionConfigsWeb.fldName = GetConfig.UppercaseFirst(optionConfigsWeb.fldName);
                    optionConfigsWeb.fldEmail = optionConfigsWeb.fldEmail;
                    optionConfigsWeb.fldCategory = optionConfigsWeb.fldCategory;
                    optionConfigsWeb.fldDepartment = optionConfigsWeb.fldDepartment;
                    optionConfigsWeb.fldWilayahID = optionConfigsWeb.fldWilayahID;
                    optionConfigsWeb.fldDeleted = false;
                    optionConfigsWeb.fldNegaraID = NegaraID;
                    optionConfigsWeb.fldSyarikatID = SyarikatID;

                    dbo.tblEmailLists.Add(optionConfigsWeb);
                    dbo.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "EmailMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EmailMaintenance",
                        controller = "Maintenance"
                    }); */

                    //farahin tambah - 16/02/2021
                    var data = dbo.tblEmailLists.Where(x => x.fldName == optionConfigsWeb.fldName && x.fldEmail == optionConfigsWeb.fldEmail
                                                       && x.fldCategory == optionConfigsWeb.fldCategory && x.fldDepartment == optionConfigsWeb.fldDepartment
                                                       && x.fldWilayahID == optionConfigsWeb.fldWilayahID).Select(s => s.fldID).SingleOrDefault();

                    //farahin tambah condition - 16/02/2021
                    if (data == 0)
                    {
                        optionConfigsWeb.fldName = GetConfig.UppercaseFirst(optionConfigsWeb.fldName);
                        optionConfigsWeb.fldEmail = optionConfigsWeb.fldEmail;
                        optionConfigsWeb.fldCategory = optionConfigsWeb.fldCategory;
                        optionConfigsWeb.fldDepartment = optionConfigsWeb.fldDepartment;
                        optionConfigsWeb.fldWilayahID = optionConfigsWeb.fldWilayahID;
                        optionConfigsWeb.fldDeleted = false;
                        optionConfigsWeb.fldNegaraID = NegaraID;
                        optionConfigsWeb.fldSyarikatID = SyarikatID;

                        dbo.tblEmailLists.Add(optionConfigsWeb);
                        dbo.SaveChanges();



                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "EmailMaintenanceDetails",
                            rootUrl = domain,
                            action = "_EmailMaintenance",
                            controller = "Maintenance"
                        });
                    }
                    else
                    {

                        var getdata = dbo.tblEmailLists.Find(data);
                        getdata.fldDeleted = false;

                        dbo.Entry(getdata).State = EntityState.Modified;
                        dbo.SaveChanges();

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgUpdate,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "EmailMaintenanceDetails",
                            rootUrl = domain,
                            action = "_EmailMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }
                //}

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EmailMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();

            List<SelectListItem> EmailList = new List<SelectListItem>();
            List<SelectListItem> DepartList = new List<SelectListItem>();
            List<SelectListItem> WilayahIDList = new List<SelectListItem>();

            EmailList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "emailcategory" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fldOptConfValue", "fldOptConfDesc").ToList();
            EmailList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose }));

            DepartList = new SelectList(db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "department" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fldOptConfValue", "fldOptConfDesc").ToList();
            DepartList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose }));

            WilayahIDList = new SelectList(db.tbl_Wilayah
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID), "fld_ID", "fld_WlyhName").ToList();
            WilayahIDList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" })); //farahin tambah value = 0  - 16/02/2021

            ViewBag.EmailCate = EmailList;
            ViewBag.Department = DepartList;
            ViewBag.Wilayah = WilayahIDList;

            var unitData = dbo.tblEmailLists.SingleOrDefault(
                x => x.fldID == id //&&
                                   //x.fld_NegaraID == NegaraID &&
                                   //x.fld_SyarikatID == SyarikatID
                            );

            Models.tblEmailList unitViewModel = new Models.tblEmailList();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EmailMaintenanceEdit(Models.tblEmailList optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();

            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = dbo.tblEmailLists.SingleOrDefault(
                        x => x.fldID == optionConfigsWeb.fldID //&&
                                                               //x.fld_NegaraID == NegaraID &&
                                                               //x.fld_SyarikatID == SyarikatID
                             );

                    //farahin comment - 16/2/2021
                    /* optionConfigsWeb.fldName = GetConfig.UppercaseFirst(optionConfigsWeb.fldName);
                     optionConfigsWeb.fldEmail = optionConfigsWeb.fldEmail;
                     optionConfigsWeb.fldCategory = optionConfigsWeb.fldCategory;
                     optionConfigsWeb.fldDepartment = optionConfigsWeb.fldDepartment;
                     optionConfigsWeb.fldWilayahID = optionConfigsWeb.fldWilayahID;

                     dbo.SaveChanges(); */

                    //farahin tambah - 16/02/2021
                    var getdata = dbo.tblEmailLists.Find(unitData.fldID);


                    getdata.fldName = GetConfig.UppercaseFirst(optionConfigsWeb.fldName);
                    getdata.fldEmail = optionConfigsWeb.fldEmail;
                    getdata.fldCategory = optionConfigsWeb.fldCategory;
                    getdata.fldDepartment = optionConfigsWeb.fldDepartment;
                    getdata.fldWilayahID = optionConfigsWeb.fldWilayahID;

                    dbo.Entry(getdata).State = EntityState.Modified;
                    dbo.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "EmailMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EmailMaintenance",
                        controller = "Maintenance"
                    });
                }


                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EmailMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();

            var unitData = dbo.tblEmailLists.SingleOrDefault(
                x => x.fldID == id //&&
                                   //x.fld_NegaraID == NegaraID &&
                                   //x.fld_SyarikatID == SyarikatID
                            );

            Models.tblEmailList unitViewModel = new Models.tblEmailList();

            PropertyCopy.Copy(unitViewModel, unitData);

            return View(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EmailMaintenanceDelete(Models.tblEmailList optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            MVC_SYSTEM_Models dbo = new MVC_SYSTEM_Models();

            try
            {
                var unitData = dbo.tblEmailLists.SingleOrDefault(
                        x => x.fldID == optionConfigsWeb.fldID //&&
                                                               //x.fld_NegaraID == NegaraID &&
                                                               //x.fld_SyarikatID == SyarikatID
                             );

                bool status = true;

                //farahin comment - 15/2/2021
                /*var message = "";
                if (unitData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "EmailMaintenanceDetails",
                    rootUrl = domain,
                    action = "_EmailMaintenance",
                    controller = "Maintenance"
                });*/

                //farahin tambah - 15/1/2021

                var getdata = dbo.tblEmailLists.Find(unitData.fldID);

                if (getdata.fldDeleted == true)
                {
                    return Json(new { success = true, msg = "Data already deleted.", status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    getdata.fldDeleted = true;

                    dbo.Entry(getdata).State = EntityState.Modified;
                    dbo.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = "Data successfully deleted.",
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        getid = "",
                        data1 = "",
                        data2 = "",
                        div = "EmailMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EmailMaintenance",
                        controller = "Maintenance"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult LadangMaintenance(string filter, int page = 1, string sort = "fld_ID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _LadangMaintenance(string filter, int page = 1,
            string sort = "fld_ID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Ladang>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tbl_Ladang
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fld_LdgName.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fld_LdgName.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _LadangMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_Ladang.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_Ladang unitViewModel = new ModelsCorporate.tbl_Ladang();

            PropertyCopy.Copy(unitViewModel, unitData);

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _LadangMaintenanceEdit(ModelsCorporate.tbl_Ladang optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_Ladang.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    unitData.fld_ID = optionConfigsWeb.fld_ID;
                    unitData.fld_LdgName = GetConfig.UppercaseFirst(optionConfigsWeb.fld_LdgName);
                    unitData.fld_LdgEmail = optionConfigsWeb.fld_LdgEmail;
                    unitData.fld_Adress = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Adress);
                    unitData.fld_Tel = optionConfigsWeb.fld_Tel;
                    unitData.fld_Fax = optionConfigsWeb.fld_Fax;
                    unitData.fld_NoAcc = optionConfigsWeb.fld_NoAcc;
                    unitData.fld_NoGL = optionConfigsWeb.fld_NoGL;
                    unitData.fld_NoCIT = optionConfigsWeb.fld_NoCIT;
                    unitData.fld_CostCentre = optionConfigsWeb.fld_CostCentre;
                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "LadangMaintenanceDetails",
                        rootUrl = domain,
                        action = "_LadangMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _LadangMaintenanceDelete(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_Ladang.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(unitData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _LadangMaintenanceDelete(ModelsCorporate.tbl_Ladang optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tbl_Ladang.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "LadangMaintenanceDetails",
                    rootUrl = domain,
                    action = "_LadangMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _LadangMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> SyarikatList = new List<SelectListItem>();

            SyarikatList = new SelectList(
                db.tbl_Syarikat
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_SyarikatID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_SyarikatID.ToString(), Text = s.fld_NamaSyarikat }),
                "Value", "Text").ToList();
            SyarikatList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.SyarikatList = SyarikatList;

            List<SelectListItem> WilayahList = new List<SelectListItem>();

            WilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_ID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }),
                "Value", "Text").ToList();
            WilayahList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.WilayahList = WilayahList;

            List<SelectListItem> NegaraList = new List<SelectListItem>();

            NegaraList = new SelectList(
                db.tbl_Negara
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NegaraID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_NegaraID.ToString(), Text = s.fld_NamaNegara }),
                "Value", "Text").ToList();
            NegaraList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.NegaraList = NegaraList;

            List<SelectListItem> NegeriList = new List<SelectListItem>();

            NegeriList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            NegeriList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.NegeriList = NegeriList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _LadangMaintenanceCreate(ModelsCorporate.tbl_Ladang optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_Ladang
                        .Where(x => x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fld_LdgCode)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fld_LdgCode))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fld_LdgCode = optionConfigsWeb.fld_LdgCode;
                        optionConfigsWeb.fld_LdgName = GetConfig.UppercaseFirst(optionConfigsWeb.fld_LdgName);
                        optionConfigsWeb.fld_LdgEmail = optionConfigsWeb.fld_LdgEmail;
                        optionConfigsWeb.fld_Adress = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Adress);
                        optionConfigsWeb.fld_Tel = optionConfigsWeb.fld_Tel;
                        optionConfigsWeb.fld_Fax = optionConfigsWeb.fld_Fax;
                        optionConfigsWeb.fld_NoAcc = optionConfigsWeb.fld_NoAcc;
                        optionConfigsWeb.fld_NoGL = optionConfigsWeb.fld_NoGL;
                        optionConfigsWeb.fld_NoCIT = optionConfigsWeb.fld_NoCIT;
                        optionConfigsWeb.fld_NegaraID = optionConfigsWeb.fld_NegaraID;
                        optionConfigsWeb.fld_WlyhID = optionConfigsWeb.fld_WlyhID;
                        optionConfigsWeb.fld_SyarikatID = optionConfigsWeb.fld_SyarikatID;
                        optionConfigsWeb.fld_KodNegeri = optionConfigsWeb.fld_KodNegeri;
                        optionConfigsWeb.fld_Deleted = false;
                        optionConfigsWeb.fld_CostCentre = optionConfigsWeb.fld_CostCentre;

                        db.tbl_Ladang.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "unitMaintenanceDetails",
                            rootUrl = domain,
                            action = "_UnitMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }


        public ActionResult WilayahMaintenance(string filter, int page = 1, string sort = "fld_ID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _WilayahMaintenance(string filter, int page = 1,
            string sort = "fld_ID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Wilayah>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tbl_Wilayah
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fld_WlyhName.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fld_WlyhName.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _WilayahMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_Wilayah.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_Wilayah unitViewModel = new ModelsCorporate.tbl_Wilayah();

            PropertyCopy.Copy(unitViewModel, unitData);

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _WilayahMaintenanceEdit(ModelsCorporate.tbl_Wilayah optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_Wilayah.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    //unitData.fld_ID = optionConfigsWeb.fld_ID;
                    unitData.fld_WlyhName = GetConfig.UppercaseFirst(optionConfigsWeb.fld_WlyhName);
                    //unitData.fld_LdgEmail = optionConfigsWeb.fld_LdgEmail;
                    //unitData.fld_Adress = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Adress);
                    //unitData.fld_Tel = optionConfigsWeb.fld_Tel;
                    //unitData.fld_Fax = optionConfigsWeb.fld_Fax;
                    //unitData.fld_NoAcc = optionConfigsWeb.fld_NoAcc;
                    //unitData.fld_NoGL = optionConfigsWeb.fld_NoGL;
                    //unitData.fld_NoCIT = optionConfigsWeb.fld_NoCIT;
                    //unitData.fld_CostCentre = optionConfigsWeb.fld_CostCentre;
                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "WilayahMaintenanceDetails",
                        rootUrl = domain,
                        action = "_WilayahMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _WilayahMaintenanceDelete(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_Wilayah.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(unitData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _WilayahMaintenanceDelete(ModelsCorporate.tbl_Ladang optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tbl_Wilayah.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "WilayahMaintenanceDetails",
                    rootUrl = domain,
                    action = "_WilayahMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _WilayahMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> SyarikatList = new List<SelectListItem>();

            SyarikatList = new SelectList(
                db.tbl_Syarikat
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_SyarikatID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_SyarikatID.ToString(), Text = s.fld_NamaSyarikat }),
                "Value", "Text").ToList();
            SyarikatList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.SyarikatList = SyarikatList;

            //List<SelectListItem> WilayahList = new List<SelectListItem>();

            //WilayahList = new SelectList(
            //    db.tbl_Wilayah
            //        .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
            //        .OrderBy(o => o.fld_ID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }),
            //    "Value", "Text").ToList();
            //WilayahList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.WilayahList = WilayahList;

            List<SelectListItem> NegaraList = new List<SelectListItem>();

            NegaraList = new SelectList(
                db.tbl_Negara
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NegaraID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_NegaraID.ToString(), Text = s.fld_NamaNegara }),
                "Value", "Text").ToList();
            NegaraList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.NegaraList = NegaraList;

            //List<SelectListItem> NegeriList = new List<SelectListItem>();

            //NegeriList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //NegeriList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.NegeriList = NegeriList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _WilayahMaintenanceCreate(ModelsCorporate.tbl_Wilayah optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    //var unitData = db.tbl_Ladang
                    //    .Where(x => x.fld_NegaraID == NegaraID &&
                    //                x.fld_SyarikatID == SyarikatID)
                    //    .Select(s => s.fld_LdgCode)
                    //    .ToList();

                    //if (unitData.Contains(optionConfigsWeb.fld_LdgCode))
                    //{
                    //    return Json(new
                    //    {
                    //        success = false,
                    //        msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                    //        status = "danger",
                    //        checkingdata = "0"
                    //    });
                    //}

                    //else
                    //{
                    //optionConfigsWeb.fld_LdgCode = optionConfigsWeb.fld_LdgCode;
                    optionConfigsWeb.fld_WlyhName = GetConfig.UppercaseFirst(optionConfigsWeb.fld_WlyhName);
                    optionConfigsWeb.fld_WlyhEmail = optionConfigsWeb.fld_WlyhEmail;
                    optionConfigsWeb.fld_NegaraID = optionConfigsWeb.fld_NegaraID;
                    optionConfigsWeb.fld_SyarikatID = optionConfigsWeb.fld_SyarikatID;
                    optionConfigsWeb.fld_Deleted = false;
                    //mas comment 19/10/2020 : tukar url domain dari feldaglobal.com kepada felda.net.my
                    //optionConfigsWeb.fld_UrlRoute = "http://opmse.feldaglobal.com/";
                    optionConfigsWeb.fld_UrlRoute = "http://opmse.felda.net.my/";
                    //mas end here

                    db.tbl_Wilayah.Add(optionConfigsWeb);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "WilayahMaintenanceDetails",
                        rootUrl = domain,
                        action = "_WilayahMaintenance",
                        controller = "Maintenance"
                    });
                }
                //}

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult VendorMaintenance(string filter, int page = 1, string sort = "fld_ID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _VendorMaintenance(string filter, int page = 1,
            string sort = "fld_ID",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Pembekal>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tbl_Pembekal
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fld_NamaPbkl.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fld_NamaPbkl.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _VendorMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_Pembekal.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tbl_Pembekal unitViewModel = new ModelsCorporate.tbl_Pembekal();

            PropertyCopy.Copy(unitViewModel, unitData);

            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _VendorMaintenanceEdit(ModelsCorporate.tbl_Pembekal optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_Pembekal.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    //unitData.fld_ID = optionConfigsWeb.fld_ID;
                    unitData.fld_NamaPbkl = GetConfig.UppercaseFirst(optionConfigsWeb.fld_NamaPbkl);
                    //unitData.fld_LdgEmail = optionConfigsWeb.fld_LdgEmail;
                    //unitData.fld_Adress = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Adress);
                    //unitData.fld_Tel = optionConfigsWeb.fld_Tel;
                    //unitData.fld_Fax = optionConfigsWeb.fld_Fax;
                    //unitData.fld_NoAcc = optionConfigsWeb.fld_NoAcc;
                    //unitData.fld_NoGL = optionConfigsWeb.fld_NoGL;
                    //unitData.fld_NoCIT = optionConfigsWeb.fld_NoCIT;
                    //unitData.fld_CostCentre = optionConfigsWeb.fld_CostCentre;
                    //unitData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2.ToUpper();
                    //unitData.fldOptConfFlag3 = optionConfigsWeb.fldOptConfFlag3.ToUpper();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "VendorMaintenanceDetails",
                        rootUrl = domain,
                        action = "_VendorMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _VendorMaintenanceDelete(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_Pembekal.SingleOrDefault(
                x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(unitData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _VendorMaintenanceDelete(ModelsCorporate.tbl_Pembekal optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tbl_Pembekal.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (unitData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "VendorMaintenanceDetails",
                    rootUrl = domain,
                    action = "_VendorMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _VendorMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> SyarikatList = new List<SelectListItem>();

            SyarikatList = new SelectList(
                db.tbl_Syarikat
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_SyarikatID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_SyarikatID.ToString(), Text = s.fld_NamaSyarikat }),
                "Value", "Text").ToList();
            SyarikatList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.SyarikatList = SyarikatList;

            //List<SelectListItem> WilayahList = new List<SelectListItem>();

            //WilayahList = new SelectList(
            //    db.tbl_Wilayah
            //        .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
            //        .OrderBy(o => o.fld_ID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }),
            //    "Value", "Text").ToList();
            //WilayahList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.WilayahList = WilayahList;

            List<SelectListItem> NegaraList = new List<SelectListItem>();

            NegaraList = new SelectList(
                db.tbl_Negara
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NegaraID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_NegaraID.ToString(), Text = s.fld_NamaNegara }),
                "Value", "Text").ToList();
            NegaraList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.NegaraList = NegaraList;

            //List<SelectListItem> NegeriList = new List<SelectListItem>();

            //NegeriList = new SelectList(
            //    db.tblOptionConfigsWebs
            //        .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_SyarikatID == SyarikatID && x.fld_NegaraID == NegaraID && x.fldDeleted == false)
            //        .OrderBy(o => o.fldOptConfID)
            //        .Select(
            //            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
            //    "Value", "Text").ToList();
            //NegeriList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            //ViewBag.NegeriList = NegeriList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _VendorMaintenanceCreate(ModelsCorporate.tbl_Pembekal optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_Pembekal
                        .Where(x => x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID)
                        .Select(s => s.fld_KodPbkl)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fld_KodPbkl))
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgErrorDuplicateOptionConfigCode,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fld_KodPbkl = optionConfigsWeb.fld_KodPbkl;
                        optionConfigsWeb.fld_NamaPbkl = GetConfig.UppercaseFirst(optionConfigsWeb.fld_NamaPbkl);
                        //optionConfigsWeb.fld_WlyhEmail = optionConfigsWeb.fld_WlyhEmail;
                        optionConfigsWeb.fld_NegaraID = optionConfigsWeb.fld_NegaraID;
                        optionConfigsWeb.fld_SyarikatID = optionConfigsWeb.fld_SyarikatID;
                        optionConfigsWeb.fld_Deleted = false;
                        //optionConfigsWeb.fld_UrlRoute = "http://opmse.feldaglobal.com/";

                        db.tbl_Pembekal.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "VendorMaintenanceDetails",
                            rootUrl = domain,
                            action = "_VendorMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult DaerahMaintenance()
        {
            //ViewBag.TableInfo = "class = active";
            //GetIdentity GetIdentity = new GetIdentity();

            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            //List<SelectListItem> DistictList = new List<SelectListItem>();
            //DistictList = new SelectList(db.tbl_Poskod//.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
            //    .OrderBy(o => o.fld_ID)
            //    .Select(s => new SelectListItem { Value = s.fld_DistrictArea.ToString(), Text = s.fld_DistrictArea}), "Value", "Text").Distinct().ToList();
            //DistictList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblAll, Value = "" }));

            //ViewBag.SelectionList = DistictList;
            //ViewBag.Select = "";
            return View();
        }

        public ActionResult _DaerahMaintenance(string filter, int page = 1, string sort = "fld_Postcode",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_Poskod>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var unitData = db.tbl_Poskod;
            //.Where(x => x.fld_deleted == false );

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = unitData
                    .Where(x => x.fld_DistrictArea.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_State.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count(x => x.fld_DistrictArea.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_State.ToUpper().Contains(filter.ToUpper()));


            }

            else
            {
                records.Content = unitData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = unitData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        public ActionResult _DaerahMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            //List<SelectListItem> Statelist = new List<SelectListItem>();

            //Statelist = new SelectList(db.tblOptionConfigsWebs
            //    .Where(x => x.fldOptConfFlag1 == "negeri" && x.fldDeleted == false && x.fld_NegaraID == NegaraID &&
            //    x.fld_SyarikatID == SyarikatID)
            //    .OrderBy(o => o.fldOptConfID)
            //    .Select(s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc })
            //    , "Value", "Text").ToList();

            //List<SelectListItem> Regionlist = new List<SelectListItem>();

            //Regionlist = new SelectList(db.tbl_Negara
            //    .Where(x => x.fld_NegaraID == NegaraID)
            //    .OrderBy(o => o.fld_NegaraID)
            //    .Select(s => new SelectListItem { Value = s.fld_NamaNegara, Text = s.fld_NamaNegara })
            //    , "Value", "Text").ToList();



            var unitData = db.tbl_Poskod.SingleOrDefault(
                x => x.fld_ID == id //&& x.fld_NegaraID == NegaraID &&
                                    //x.fld_SyarikatID == SyarikatID
                     );

            ModelsCorporate.tbl_Poskod unitViewModel = new ModelsCorporate.tbl_Poskod();

            PropertyCopy.Copy(unitViewModel, unitData);

            //ViewBag.State = Statelist;
            //ViewBag.Region = Regionlist;
            return PartialView(unitViewModel);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DaerahMaintenanceEdit(ModelsCorporate.tbl_Poskod optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_Poskod.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID //&&
                                                                 //x.fld_NegaraID == NegaraID &&
                                                                 //x.fld_SyarikatID == SyarikatID
                             );

                    unitData.fld_Postcode = optionConfigsWeb.fld_Postcode;
                    unitData.fld_DistrictArea = GetConfig.UppercaseFirst(optionConfigsWeb.fld_DistrictArea);
                    unitData.fld_State = GetConfig.UppercaseFirst(optionConfigsWeb.fld_State);
                    unitData.fld_Region = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Region);


                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "DistinctMaintenanceDetails",
                        rootUrl = domain,
                        action = "_DaerahMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _DaerahMaintenanceDelete(int? id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var unitData = db.tbl_Poskod.SingleOrDefault(
                x => x.fld_ID == id //&& x.fld_NegaraID == NegaraID &&
                //     x.fld_SyarikatID == SyarikatID
                );

            return PartialView(unitData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DaerahMaintenanceDelete(ModelsCorporate.tbl_Poskod optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var unitData = db.tbl_Poskod.SingleOrDefault(
                        x => x.fld_ID == optionConfigsWeb.fld_ID //&&
                                                                 //x.fld_NegaraID == NegaraID &&
                                                                 //x.fld_SyarikatID == SyarikatID
                             );

                bool status = true;

                var message = "";
                if (unitData.fld_deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                unitData.fld_deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "DistinctMaintenanceDetails",
                    rootUrl = domain,
                    action = "_DaerahMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _DaerahMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            List<SelectListItem> StateList = new List<SelectListItem>();

            StateList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag1 == "negeri")
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            StateList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.State = StateList;

            List<SelectListItem> RegionList = new List<SelectListItem>();

            RegionList = new SelectList(
                db.tbl_Negara
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false)
                    .OrderBy(o => o.fld_NegaraID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_NamaNegara, Text = s.fld_NamaNegara }),
                "Value", "Text").ToList();
            RegionList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });

            ViewBag.Region = RegionList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _DaerahMaintenanceCreate(ModelsCorporate.tbl_Poskod optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var unitData = db.tbl_Poskod
                        .Where(x => x.fld_Postcode == optionConfigsWeb.fld_Postcode)
                        .Select(s => s.fld_Postcode)
                        .ToList();

                    if (unitData.Contains(optionConfigsWeb.fld_Postcode) || unitData.Count() > 0)
                    {
                        return Json(new
                        {
                            success = false,
                            msg = "Poskod Telah Wujud",
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {
                        optionConfigsWeb.fld_Postcode = optionConfigsWeb.fld_Postcode;
                        optionConfigsWeb.fld_DistrictArea = GetConfig.UppercaseFirst(optionConfigsWeb.fld_DistrictArea);
                        optionConfigsWeb.fld_State = GetConfig.UppercaseFirst(optionConfigsWeb.fld_State);
                        optionConfigsWeb.fld_Region = GetConfig.UppercaseFirst(optionConfigsWeb.fld_Region);
                        optionConfigsWeb.fld_deleted = false;

                        db.tbl_Poskod.Add(optionConfigsWeb);
                        db.SaveChanges();

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "1",
                            div = "DistinctMaintenanceDetails",
                            rootUrl = domain,
                            action = "_DaerahMaintenance",
                            controller = "Maintenance"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GetWilayahList()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> StateList = new List<SelectListItem>();

            //if (syrktID == "")
            //{
            //    StateList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" }));
            //}
            //else
            //{
            StateList = new SelectList(
            db.tblOptionConfigsWebs
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldOptConfFlag1 == "negeri")
                .OrderBy(o => o.fldOptConfID)
                .Select(
                    s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }),
            "Value", "Text").ToList();
            StateList.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "" });
            //}

            return Json(StateList);
        }


        public ActionResult EstateIncentiveEligibilityMaintenance(int? WilayahList, int? LadangList, int page = 1, string sort = "fld_KodInsentif",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            //comment by fatin - 17/04/2023
            /*wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();*/

            //fatin added - 17/04/2023
            if (WilayahID == 0 && LadangID == 0)
            {
                wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            }

            else
            {
                wilayahList = new SelectList(db.tbl_Wilayah.Where(x => x.fld_ID == WilayahID), "fld_ID", "fld_WlyhName").ToList();

            }
            //end

            wilayahList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();

            ladangList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.LadangList = ladangList;

            return View();
        }

        public ActionResult _EstateIncentiveEligibilityMaintenance(int? WilayahList, int? LadangList, int page = 1,
            string sort = "fld_KodInsentif",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_KelayakanInsentifLdg>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var message = "";

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()))
            {
                message = GlobalResCorp.msgNoRecord;

                var estateIncentiveEligibilityData = db.vw_KelayakanInsentifLdg
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList);

                records.Content = estateIncentiveEligibilityData
                    .Where(x => x.fld_WilayahID == WilayahList ||
                                x.fld_LadangID == LadangList)
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = estateIncentiveEligibilityData
                    .Count(x => x.fld_WilayahID == WilayahList ||
                                x.fld_LadangID == LadangList);

                records.CurrentPage = page;
                records.PageSize = pageSize;
                ViewBag.RoleID = role;
                ViewBag.pageSize = 1;
            }

            else
            {
                message = GlobalResCorp.lblChooseEsateIncentiveEligibility;

                List<ModelsCorporate.vw_KelayakanInsentifLdg> vw_KelayakanInsentifLdg = new List<ModelsCorporate.vw_KelayakanInsentifLdg>();

                records.Content = vw_KelayakanInsentifLdg
                    .ToList();

                records.TotalRecords = vw_KelayakanInsentifLdg
                    .Count();

                records.CurrentPage = page;
                records.PageSize = pageSize;
                ViewBag.RoleID = role;
                ViewBag.pageSize = 1;
            }

            ViewBag.Message = message;

            return View(records);
        }

        public ActionResult _EstateIncentiveEligibilityMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> incentiveTypeList = new List<SelectListItem>();

            incentiveTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            incentiveTypeList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });

            ViewBag.IncentiveTypeList = incentiveTypeList;

            List<SelectListItem> incentiveList = new List<SelectListItem>();

            ViewBag.IncentiveList = incentiveList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList = new SelectList(
                db.tbl_Ladang
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_LdgName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_LdgName }), "Value", "Text").ToList();

            ViewBag.LadangList = ladangList;

            return PartialView();
        }

        public JsonResult GetIncentiveList(string incentiveType)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var incentiveData = db.tbl_JenisInsentif.Where(x =>
                x.fld_JenisInsentif == incentiveType && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fld_Deleted == false);

            //var estateIncentiveEligibilityData = db.vw_KelayakanInsentifLdg
            //    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
            //                x.fld_WilayahID == WilayahID &&
            //                x.fld_LadangID == LadangID && x.fld_Deleted == false);

            //var incentiveExcept = incentiveData.Select(s => s.fld_KodInsentif)
            //    .Except(estateIncentiveEligibilityData.Select(s => s.fld_KodInsentif)).ToList();

            return Json(incentiveData.Select(x => new { Value = x.fld_KodInsentif, Text = x.fld_KodInsentif + " - " + x.fld_Keterangan }));
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateIncentiveEligibilityMaintenanceCreate(ModelsCorporate.tbl_KelayakanInsentifLdgViewModelCreate kelayakanInsentifLdgViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                List<tbl_KelayakanInsentifLdg> kelayakanInsentifLdgList = new List<tbl_KelayakanInsentifLdg>();

                if (ModelState.IsValid)
                {
                    foreach (var ladang in kelayakanInsentifLdgViewModelCreate.fld_LadangID)
                    {
                        var ladangData = db.tbl_Ladang.SingleOrDefault(x => x.fld_ID == ladang);

                        foreach (var kodInsentif in kelayakanInsentifLdgViewModelCreate.fld_KodInsentif)
                        {
                            var estateIncentiveEligibilityData = db.tbl_KelayakanInsentifLdg.SingleOrDefault(x =>
                                x.fld_KodInsentif == kodInsentif &&
                                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                x.fld_WilayahID == ladangData.fld_WlyhID && x.fld_LadangID == ladangData.fld_ID);

                            if (estateIncentiveEligibilityData == null)
                            {
                                tbl_KelayakanInsentifLdg kelayakanInsentifLdg = new tbl_KelayakanInsentifLdg();

                                kelayakanInsentifLdg.fld_JenisInsentif = kelayakanInsentifLdgViewModelCreate.fld_JenisInsentif;
                                kelayakanInsentifLdg.fld_KodInsentif = kodInsentif;
                                kelayakanInsentifLdg.fld_NegaraID = NegaraID;
                                kelayakanInsentifLdg.fld_SyarikatID = SyarikatID;
                                kelayakanInsentifLdg.fld_WilayahID = ladangData.fld_WlyhID;
                                kelayakanInsentifLdg.fld_LadangID = ladang;
                                kelayakanInsentifLdg.fld_Deleted = false;
                                kelayakanInsentifLdg.fld_CreatedBy = getuserid;
                                kelayakanInsentifLdg.fld_CreatedDT = timezone.gettimezone();

                                kelayakanInsentifLdgList.Add(kelayakanInsentifLdg);
                            }
                        }
                    }

                    if (kelayakanInsentifLdgList.Count != 0)
                    {
                        db.tbl_KelayakanInsentifLdg.AddRange(kelayakanInsentifLdgList);
                        db.SaveChanges();
                    }

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "estateIncentiveEligibilitytMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateIncentiveEligibilityMaintenance",
                        controller = "Maintenance"
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateIncentiveEligibilityMaintenanceDelete(Guid id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var estateIncentiveEligibilityData = db.vw_KelayakanInsentifLdg
                .SingleOrDefault(x => x.fld_KelayakanInsentifLdgID == id);

            return PartialView(estateIncentiveEligibilityData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateIncentiveEligibilityMaintenanceDelete(ModelsCorporate.vw_KelayakanInsentifLdg kelayakanInsetifLdg)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var estateIncentiveEligibilityData = db.tbl_KelayakanInsentifLdg.SingleOrDefault(
                    x => x.fld_KelayakanInsentifLdgID == kelayakanInsetifLdg.fld_KelayakanInsentifLdgID);

                bool status = true;

                var message = "";
                if (estateIncentiveEligibilityData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                estateIncentiveEligibilityData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "3",
                    div = "estateIncentiveEligibilitytMaintenanceDetails",
                    rootUrl = domain,
                    action = "_EstateIncentiveEligibilityMaintenance",
                    controller = "Maintenance",
                    paramName = "WilayahList",
                    paramValue = kelayakanInsetifLdg.fld_WilayahID,
                    paramName2 = "LadangList",
                    paramValue2 = kelayakanInsetifLdg.fld_LadangID
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstateWorkerIncentiveEligibilityMaintenance(int? WilayahList, int? LadangList, int page = 1, string sort = "fld_KodInsentif",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();

            wilayahList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();

            ladangList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.LadangList = ladangList;

            return View();
        }

        public ActionResult _EstateWorkerIncentiveEligibilityMaintenance(int? WilayahList, int? LadangList, int page = 1,
            string sort = "fld_KodInsentif",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCustom.CustMod_DesignationIncentiveEligibility>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var message = "";

            List<CustMod_DesignationIncentiveEligibility> DesignationIncentiveEligibility = new List<CustMod_DesignationIncentiveEligibility>();

            ViewBag.pageSize = int.Parse(GetConfig.GetData("paging"));

            if (!String.IsNullOrEmpty(WilayahList.ToString()) || !String.IsNullOrEmpty(LadangList.ToString()))
            {
                message = GlobalResCorp.msgNoRecord;

                var estateIncentiveEligibilityData = db.tbl_KelayakanInsentifLdg
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList)
                    .OrderBy(x => x.fld_KodInsentif);

                foreach (var i in estateIncentiveEligibilityData)
                {
                    var estateWorkerIncentiveEligibilityData = db.tbl_KelayakanInsentifPkjLdg
                        .Where(a => a.fld_KodInsentif == i.fld_KodInsentif && a.fld_NegaraID == NegaraID &&
                                    a.fld_SyarikatID == SyarikatID && a.fld_WilayahID == WilayahList &&
                                    a.fld_LadangID == LadangList)
                        .OrderBy(x => x.fld_KodInsentif)
                        .ToList();
                    DesignationIncentiveEligibility.Add(new CustMod_DesignationIncentiveEligibility { KelayakanInsentif = i, KelayakanInsentifPkjLdg = estateWorkerIncentiveEligibilityData });
                }
            }

            else
            {
                message = GlobalResCorp.lblChooseEsateIncentiveEligibility;

                records.Content = DesignationIncentiveEligibility
                    .ToList();

                records.TotalRecords = DesignationIncentiveEligibility
                    .Count();

                records.CurrentPage = page;
                records.PageSize = pageSize;
                ViewBag.RoleID = role;
                ViewBag.pageSize = 1;
            }

            ViewBag.Message = message;

            return View(DesignationIncentiveEligibility);
        }

        public ActionResult _EstateWorkerIncentiveEligibilityMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();

            wilayahList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> incentiveTypeList = new List<SelectListItem>();
            incentiveTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfID)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            incentiveTypeList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.IncentiveTypeList = incentiveTypeList;

            List<SelectListItem> incentiveList = new List<SelectListItem>();
            incentiveList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.IncentiveList = incentiveList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> designationList = new List<SelectListItem>();
            designationList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.DesignationList = designationList;

            return PartialView();
        }

        public JsonResult GetLadangList(int id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var ladangData = db.tbl_Ladang.Where(x =>
                x.fld_WlyhID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fld_Deleted == false);

            return Json(ladangData.Select(x => new { Value = x.fld_ID, Text = x.fld_LdgName }));
        }

        public JsonResult GetEstateIncentiveEligibilityList(string incentiveType, int wilayah, int ladang)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var estateIncentiveEligibilityData = db.vw_KelayakanInsentifLdg
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == wilayah &&
                            x.fld_LadangID == ladang && x.fld_JenisInsentif == incentiveType && x.fld_Deleted == false).OrderBy(o => o.fld_KodInsentif);

            return Json(estateIncentiveEligibilityData.Select(x => new { Value = x.fld_KodInsentif, Text = x.fld_KodInsentif + " - " + x.fld_Keterangan }));
        }

        public JsonResult GetEstateWorkerIncentiveEligibilityList(string insentifCode, int wilayah, int ladang)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> designationList = new List<SelectListItem>();

            int count = 0;

            var estateWorkerIncentiveEligibilityData = db.tbl_KelayakanInsentifPkjLdg
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == wilayah &&
                            x.fld_LadangID == ladang && x.fld_KodInsentif == insentifCode)
                .Select(s => s.fld_KodPkj).ToList();

            var designationData = db.tblOptionConfigsWebs.Where(x =>
                x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fldDeleted == false).Select(s => s.fldOptConfValue).ToList();

            var incentiveIntersectDesignation = designationData.Except(estateWorkerIncentiveEligibilityData);

            foreach (var designation in incentiveIntersectDesignation)
            {
                var eligibleDesignationData = db.tblOptionConfigsWebs.SingleOrDefault(x =>
                    x.fldOptConfValue == designation &&
                    x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID &&
                    x.fld_SyarikatID == SyarikatID &&
                    x.fldDeleted == false);

                designationList.Insert(count, new SelectListItem { Text = eligibleDesignationData.fldOptConfDesc, Value = eligibleDesignationData.fldOptConfValue });

                count++;
            }

            //var designationData = db.tblOptionConfigsWebs.Where(x =>
            //    x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
            //    x.fldDeleted == false && !estateWorkerIncentiveEligibilityData.Contains(x.fldOptConfValue));

            return Json(designationList);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerIncentiveEligibilityMaintenanceCreate(ModelsCorporate.tbl_KelayakanInsentifPkjLdgViewModelCreate kelayakanInsentifPkjLdgViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                List<tbl_KelayakanInsentifPkjLdg> kelayakanInsentifPkjLdgList = new List<tbl_KelayakanInsentifPkjLdg>();

                if (ModelState.IsValid)
                {
                    var ladangData = db.tbl_Ladang.SingleOrDefault(x => x.fld_ID == kelayakanInsentifPkjLdgViewModelCreate.fld_LadangID);

                    var estateWorkerIncentiveEligibility = db.tbl_KelayakanInsentifPkjLdg.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                        x.fld_WilayahID == ladangData.fld_WlyhID && x.fld_LadangID == ladangData.fld_ID &&
                        x.fld_Deleted == false);

                    foreach (var kodInsentif in kelayakanInsentifPkjLdgViewModelCreate.fld_KodInsentif)
                    {
                        foreach (var kodJawatan in kelayakanInsentifPkjLdgViewModelCreate.fld_KodJawatan)
                        {
                            if (!estateWorkerIncentiveEligibility.Any(x =>
                                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                x.fld_WilayahID == ladangData.fld_WlyhID && x.fld_LadangID == ladangData.fld_ID &&
                                x.fld_KodPkj == kodJawatan && x.fld_KodInsentif == kodInsentif &&
                                x.fld_Deleted == false))
                            {
                                tbl_KelayakanInsentifPkjLdg kelayakanInsentifPkjLdg = new tbl_KelayakanInsentifPkjLdg();

                                kelayakanInsentifPkjLdg.fld_KodPkj = kodJawatan;
                                kelayakanInsentifPkjLdg.fld_KodInsentif = kodInsentif;
                                kelayakanInsentifPkjLdg.fld_NegaraID = NegaraID;
                                kelayakanInsentifPkjLdg.fld_SyarikatID = SyarikatID;
                                kelayakanInsentifPkjLdg.fld_WilayahID = ladangData.fld_WlyhID;
                                kelayakanInsentifPkjLdg.fld_LadangID = ladangData.fld_ID;
                                kelayakanInsentifPkjLdg.fld_Deleted = false;
                                kelayakanInsentifPkjLdg.fld_CreatedBy = getuserid;
                                kelayakanInsentifPkjLdg.fld_CreatedDT = timezone.gettimezone();

                                kelayakanInsentifPkjLdgList.Add(kelayakanInsentifPkjLdg);
                            }
                        }
                    }

                    if (kelayakanInsentifPkjLdgList.Count != 0)
                    {
                        db.tbl_KelayakanInsentifPkjLdg.AddRange(kelayakanInsentifPkjLdgList);
                        db.SaveChanges();
                    }

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "3",
                        div = "estateWorkerIncentiveEligibilitytMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerIncentiveEligibilityMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = ladangData.fld_WlyhID,
                        paramName2 = "LadangList",
                        paramValue2 = ladangData.fld_ID
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateWorkerIncentiveEligibilityMaintenanceDelete(Guid id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var estateWorkerIncentiveEligibilityData = db.tbl_KelayakanInsentifPkjLdg.SingleOrDefault(
                x => x.fld_KelayakanInsentifPkjLdgID == id && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(estateWorkerIncentiveEligibilityData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerIncentiveEligibilityMaintenanceDelete(ModelsCorporate.tbl_KelayakanInsentifPkjLdg kelayakanInsentifPkjLdg)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var estateWorkerIncentiveEligibilityData = db.tbl_KelayakanInsentifPkjLdg.SingleOrDefault(
                    x => x.fld_KelayakanInsentifPkjLdgID == kelayakanInsentifPkjLdg.fld_KelayakanInsentifPkjLdgID && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (estateWorkerIncentiveEligibilityData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                estateWorkerIncentiveEligibilityData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "3",
                    div = "estateWorkerIncentiveEligibilitytMaintenanceDetails",
                    rootUrl = domain,
                    action = "_EstateWorkerIncentiveEligibilityMaintenance",
                    controller = "Maintenance",
                    paramName = "WilayahList",
                    paramValue = kelayakanInsentifPkjLdg.fld_WilayahID,
                    paramName2 = "LadangList",
                    paramValue2 = kelayakanInsentifPkjLdg.fld_LadangID
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstateWeekendMaintenance(string filter, int page = 1, string sort = "fld_LdgName", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            //comment by fatin - 17/04/2023
            /*wilayahList = new SelectList(
                    db.tbl_Wilayah
                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_Deleted == false)
                        .OrderBy(o => o.fld_WlyhName)
                        .Select(
                            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value",
                    "Text")
                .ToList();*/

            //fatin added - 17/04/2023
            if (WilayahID == 0 && LadangID == 0)
            {
                wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            }

            else
            {
                wilayahList = new SelectList(db.tbl_Wilayah.Where(x => x.fld_ID == WilayahID), "fld_ID", "fld_WlyhName").ToList();

            }
            //end

            wilayahList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            return View();
        }


        public ActionResult _EstateWeekendMaintenance(int? WilayahList, int page = 1, string sort = "fld_LdgName", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_JenisMingguLadang>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<vw_JenisMingguLadang> jenisMingguLadangList = new List<vw_JenisMingguLadang>();

            string message = "";

            if (!String.IsNullOrEmpty(WilayahList.ToString()))
            {
                jenisMingguLadangList = db.vw_JenisMingguLadang
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                x.fld_WlyhID == WilayahList && x.LadangDeleted == false &&
                                x.JenisMingguDeleted == false).ToList();

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseEsateIncentiveEligibility;
            }

            records.Content = jenisMingguLadangList
                .OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = jenisMingguLadangList
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.Message = message;

            return View(records);
        }

        public ActionResult _EstateWeekendMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                    db.tbl_Wilayah
                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_Deleted == false)
                        .OrderBy(o => o.fld_WlyhName)
                        .Select(
                            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value",
                    "Text")
                .ToList();
            wilayahList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> dayList = new List<SelectListItem>();
            dayList = new SelectList(
                    db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "hari" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fldDeleted == false)
                        .OrderBy(o => o.fldOptConfValue)
                        .Select(
                            s => new SelectListItem { Value = s.fldOptConfValue.ToString(), Text = s.fldOptConfDesc }), "Value",
                    "Text")
                .ToList();
            dayList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.DayList = dayList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWeekendMaintenanceCreate(ModelsCorporate.tbl_JenisMingguLadangViewModelCreate jenisMingguLadangViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_JenisMingguLadang jenisMingguLadang = new tbl_JenisMingguLadang();

                    jenisMingguLadang.fld_JenisMinggu = jenisMingguLadangViewModelCreate.fld_JenisMinggu;
                    jenisMingguLadang.fld_NegaraID = NegaraID;
                    jenisMingguLadang.fld_SyarikatID = SyarikatID;
                    jenisMingguLadang.fld_WilayahID = jenisMingguLadangViewModelCreate.fld_WilayahID;
                    jenisMingguLadang.fld_LadangID = jenisMingguLadangViewModelCreate.fld_LadangID;
                    jenisMingguLadang.fld_Deleted = false;

                    db.tbl_JenisMingguLadang.Add(jenisMingguLadang);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "estateWeekendMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWeekendMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = jenisMingguLadangViewModelCreate.fld_WilayahID
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GetLadangWithoutWeekendRecord(int WilayahID)
        {
            List<SelectListItem> ladanglist = new List<SelectListItem>();

            int? NegaraID = 0;
            int? SyarikatID = 0;
            int? WilayahID2 = 0;
            int? LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID2, out LadangID, getuserid, User.Identity.Name);

            var estateWithoutWeekendData = db.tbl_JenisMingguLadang.Where(x =>
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID &&
                x.fld_Deleted == false).Select(s => (int)s.fld_LadangID).ToList();

            List<SelectListItem> estateList = new SelectList(
                    db.tbl_Ladang.Where(x => !estateWithoutWeekendData.Contains(x.fld_ID) &&
                                             x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                             x.fld_WlyhID == WilayahID &&
                                             x.fld_Deleted == false
                        )
                        .OrderBy(o => o.fld_LdgName)
                        .Select(
                            s => new SelectListItem
                            {
                                Value = s.fld_ID.ToString(),
                                Text = s.fld_LdgCode + " - " + s.fld_LdgName
                            }), "Value",
                    "Text")
                .ToList();

            var message = "";

            if (estateList.ToList().Count == 0)
            {
                message = GlobalResCorp.lblEstateWeekendExist;
            }

            else
            {
                message = GlobalResCorp.lblNoEstate;
            }

            var result = new { estateList, message };

            return Json(result);
        }

        public ActionResult _EstateWeekendMaintenanceEdit(Guid id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var estateWeekendData = db.tbl_JenisMingguLadang.SingleOrDefault(x => x.fld_MingguNegeriID == id);

            tbl_JenisMingguLadangViewModelEdit jenisMingguLadangViewModelEdit = new tbl_JenisMingguLadangViewModelEdit();

            PropertyCopy.Copy(jenisMingguLadangViewModelEdit, estateWeekendData);

            List<SelectListItem> dayList = new List<SelectListItem>();
            dayList = new SelectList(
                    db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "hari" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fldDeleted == false)
                        .OrderBy(o => o.fldOptConfValue)
                        .Select(
                            s => new SelectListItem { Value = s.fldOptConfValue.ToString(), Text = s.fldOptConfDesc }), "Value",
                    "Text")
                .ToList();
            dayList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.DayList = dayList;

            return PartialView(jenisMingguLadangViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWeekendMaintenanceEdit(ModelsCorporate.tbl_JenisMingguLadangViewModelEdit jenisMingguLadangViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var estateWeekendData = db.tbl_JenisMingguLadang.SingleOrDefault(x =>
                        x.fld_MingguNegeriID == jenisMingguLadangViewModelEdit.fld_MingguNegeriID);

                    estateWeekendData.fld_JenisMinggu = jenisMingguLadangViewModelEdit.fld_JenisMinggu;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "estateWeekendMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWeekendMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = estateWeekendData.fld_WilayahID
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }


        public ActionResult EstateWorkingDayMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            //comment by fatin - 17/04/2023
            /*wilayahList = new SelectList(
                    db.tbl_Wilayah
                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_Deleted == false)
                        .OrderBy(o => o.fld_WlyhName)
                        .Select(
                            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value",
                    "Text")
                .ToList();*/

            //fatin added - 17/04/2023
            if (WilayahID == 0 && LadangID == 0)
            {
                wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            }

            else
            {
                wilayahList = new SelectList(db.tbl_Wilayah.Where(x => x.fld_ID == WilayahID), "fld_ID", "fld_WlyhName").ToList();

            }
            //end

            wilayahList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            int drpyear = 0;
            int drprangeyear = 0;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            ViewBag.YearList = yearlist;

            return View();
        }

        public ActionResult _EstateWorkingDayMaintenance(int? WilayahList, int? LadangList, int? YearList, int page = 1, string sort = "fld_Month", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_HariBekerjaLadang>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<vw_HariBekerjaLadang> hariBekerjaLadangList = new List<vw_HariBekerjaLadang>();

            string message = "";

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()) && !String.IsNullOrEmpty(YearList.ToString()))
            {
                hariBekerjaLadangList = db.vw_HariBekerjaLadang
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                x.fld_WlyhID == WilayahList && x.fld_ID == LadangList && x.LadangDeleted == false &&
                                x.HariBekerjaLadangDeleted == false && x.fld_Year == YearList).ToList();

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseWorkingDayMaintenance;
            }

            records.Content = hariBekerjaLadangList
                .OrderBy(sort + " " + sortdir)
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = hariBekerjaLadangList
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.Message = message;

            return View(records);
        }

        public ActionResult _EstateWorkingDayMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                    db.tbl_Wilayah
                        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_Deleted == false)
                        .OrderBy(o => o.fld_WlyhName)
                        .Select(
                            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value",
                    "Text")
                .ToList();
            wilayahList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            int drpyear = 0;
            int drprangeyear = 0;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            yearlist.Insert(0, new SelectListItem { Text = @GlobalResCorp.lblChoose, Value = "" });

            ViewBag.YearList = yearlist;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkingDayMaintenanceCreate(ModelsCorporate.tbl_HariBekerjaLadangModelViewCreate hariBekerjaLadangModelViewCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    List<tbl_HariBekerjaLadang> hariBekerjaLadangList = new List<tbl_HariBekerjaLadang>();

                    var monthData = db.tblOptionConfigsWebs.Where(x =>
                        x.fldOptConfFlag1 == "monthlist" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                        x.fldDeleted == false);

                    var estateWeekendData = db.tbl_JenisMingguLadang.SingleOrDefault(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                        x.fld_LadangID == hariBekerjaLadangModelViewCreate.fld_LadangID && x.fld_Deleted == false);

                    foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                    {
                        if ((int)day == estateWeekendData.fld_JenisMinggu)
                        {
                            foreach (var month in monthData)
                            {
                                var monthInt = Convert.ToInt32(month.fldOptConfValue);

                                var cutiUmum = db.vw_CutiUmumLdgDetails
                                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                                x.fld_WilayahID == hariBekerjaLadangModelViewCreate.fld_WilayahID &&
                                                x.fld_LadangID == hariBekerjaLadangModelViewCreate.fld_LadangID &&
                                                x.fld_Deleted == false &&
                                                x.fld_Year == hariBekerjaLadangModelViewCreate.fld_Year &&
                                                x.fld_TarikhCuti.Value.Month == monthInt)
                                    .ToList();

                                //First We find out last date of mont
                                DateTime endOfMonth = new DateTime((int) hariBekerjaLadangModelViewCreate.fld_Year, Convert.ToInt32(monthInt), DateTime.DaysInMonth((int) hariBekerjaLadangModelViewCreate.fld_Year, Convert.ToInt32(monthInt)));

                                //DateTime endOfMonth = new DateTime(year, Convert.ToInt32(startingDay.Month),
                                //            DateTime.DaysInMonth(year, Convert.ToInt32(startingDay.Month)));
                                //get only last day of month
                                int daysInMonth = endOfMonth.Day;

                                int totalLeaveInAMonth = 0;

                                for (int i = 0; i < daysInMonth; ++i)
                                {
                                    DateTime d = new DateTime((int) hariBekerjaLadangModelViewCreate.fld_Year, Convert.ToInt32(monthInt), i + 1);

                                    //Compare date with weekendTypeDay
                                    if (d.DayOfWeek == day)
                                    {
                                        totalLeaveInAMonth = totalLeaveInAMonth + 1;
                                    }
                                }

                                var workingDaysInMonth = (DateTime.DaysInMonth((int) hariBekerjaLadangModelViewCreate.fld_Year, Convert.ToInt32(monthInt))) - totalLeaveInAMonth - cutiUmum.Count;

                                var estateWorkingDayData = db.tbl_HariBekerjaLadang.SingleOrDefault(x =>
                                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_WilayahID == hariBekerjaLadangModelViewCreate.fld_WilayahID &&
                                    x.fld_LadangID == hariBekerjaLadangModelViewCreate.fld_LadangID &&
                                    x.fld_Deleted == false && x.fld_Year == hariBekerjaLadangModelViewCreate.fld_Year &&
                                    x.fld_Month == monthInt);

                                if (estateWorkingDayData != null)
                                {
                                    estateWorkingDayData.fld_BilHariBekerja = Convert.ToInt32(workingDaysInMonth);
                                    estateWorkingDayData.fld_ModifiedBy = getuserid;
                                    estateWorkingDayData.fld_ModifiedDT = timezone.gettimezone();
                                }

                                else
                                {
                                    ModelsCorporate.tbl_HariBekerjaLadang hariBekerjaLadang = new ModelsCorporate.tbl_HariBekerjaLadang();

                                    hariBekerjaLadang.fld_Month = Convert.ToInt32(monthInt);
                                    hariBekerjaLadang.fld_Year = Convert.ToInt32(hariBekerjaLadangModelViewCreate.fld_Year);
                                    hariBekerjaLadang.fld_BilHariBekerja = Convert.ToInt32(workingDaysInMonth);
                                    hariBekerjaLadang.fld_NegaraID = NegaraID;
                                    hariBekerjaLadang.fld_SyarikatID = SyarikatID;
                                    hariBekerjaLadang.fld_WilayahID = hariBekerjaLadangModelViewCreate.fld_WilayahID;
                                    hariBekerjaLadang.fld_LadangID = hariBekerjaLadangModelViewCreate.fld_LadangID;
                                    hariBekerjaLadang.fld_Deleted = false;
                                    hariBekerjaLadang.fld_CreatedBy = getuserid;
                                    hariBekerjaLadang.fld_CreatedDT = timezone.gettimezone();

                                    hariBekerjaLadangList.Add(hariBekerjaLadang);
                                }
                            }
                        }
                    }

                    if (hariBekerjaLadangList.Count != 0)
                    {
                        db.tbl_HariBekerjaLadang.AddRange(hariBekerjaLadangList);
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "4",
                        div = "estateWorkingDayMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkingDayMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = hariBekerjaLadangModelViewCreate.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = hariBekerjaLadangModelViewCreate.fld_LadangID,
                        paramName3 = "YearList",
                        paramValue3 = hariBekerjaLadangModelViewCreate.fld_Year
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GetLadangWithoutWorkingDayRecord(int? WilayahID, int? LadangID, int? Year)
        {
            List<SelectListItem> ladanglist = new List<SelectListItem>();

            int? NegaraID = 0;
            int? SyarikatID = 0;
            int? WilayahID2 = 0;
            int? LadangID2 = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID2, out LadangID2, getuserid, User.Identity.Name);

            List<string> messageList = new List<string>();

            var estateWeekendFlag = false;

            var estateWeekendData = db.tbl_JenisMingguLadang.Where(x =>
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahID &&
                x.fld_LadangID == LadangID && x.fld_Deleted == false).ToList();

            var cutiUmum = db.vw_CutiUmumLdgDetails
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == WilayahID &&
                            x.fld_LadangID == LadangID &&
                            x.fld_Deleted == false &&
                            x.fld_Year == Year)
                .ToList();

            if (estateWeekendData.Count == 0)
            {
                messageList.Add(GlobalResCorp.lblEstateWorkingDayMsg3);
            }

            if (cutiUmum.Count == 0)
            {
                messageList.Add(GlobalResCorp.lblEstateWorkingDayMsg4 + " " + Year + " "  + GlobalResCorp.lblEstateWorkingDayMsg5);
            }

            if (estateWeekendData.Count != 0 && cutiUmum.Count != 0)
            {
                estateWeekendFlag = true;

                var estateWithoutWorkingDayData = db.tbl_HariBekerjaLadang
                    .Where(x => x.fld_Year == Year &&
                                x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID &&
                                x.fld_WilayahID == WilayahID &&
                                x.fld_LadangID == LadangID &&
                                x.fld_Deleted == false).ToList();


                if (estateWithoutWorkingDayData.Count != 12)
                {
                    messageList.Add(GlobalResCorp.lblEstateWorkingDayMsg1);
                }

                else
                {
                    messageList.Add(GlobalResCorp.lblEstateWorkingDayMsg2);
                }
            }

            var result = new { messageList, estateWeekendFlag };

            return Json(result);
        }

        public ActionResult _EstateWorkingDayMaintenanceEdit(Guid id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var estateWorkingDayData = db.tbl_HariBekerjaLadang.SingleOrDefault(x => x.fld_HariBekerjaLadangID == id);

            tbl_HariBekerjaLadangModelViewEdit hariBekerjaLadangModelViewEdit = new tbl_HariBekerjaLadangModelViewEdit();

            PropertyCopy.Copy(hariBekerjaLadangModelViewEdit, estateWorkingDayData);

            var estatePublicHolidayData = db.tbl_CutiUmumLdg.Count(x =>
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fld_WilayahID == estateWorkingDayData.fld_WilayahID &&
                x.fld_LadangID == estateWorkingDayData.fld_LadangID && x.fld_Deleted == false);

            var estateWeekendData = db.tbl_JenisMingguLadang.Count(x =>
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                x.fld_WilayahID == estateWorkingDayData.fld_WilayahID &&
                x.fld_LadangID == estateWorkingDayData.fld_LadangID && x.fld_Deleted == false);

            var message1 = "";
            var message2 = "";

            if (estatePublicHolidayData == 0)
            {
                message1 = GlobalResCorp.lblEstateWorkingDayMsg4 + " " + estateWorkingDayData.fld_Year + " " +
                          GlobalResCorp.lblEstateWorkingDayMsg5;
            }

            if (estateWeekendData == 0)
            {
                message2 = GlobalResCorp.lblEstateWorkingDayMsg3;
            }

            ViewBag.Message1 = message1;
            ViewBag.Message2 = message2;

            return PartialView(hariBekerjaLadangModelViewEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkingDayMaintenanceEdit(ModelsCorporate.tbl_HariBekerjaLadangModelViewEdit hariBekerjaLadangModelViewEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var estateWorkingDayData = db.tbl_HariBekerjaLadang.SingleOrDefault(x =>
                        x.fld_HariBekerjaLadangID == hariBekerjaLadangModelViewEdit.fld_HariBekerjaLadangID);

                    var estateWeekendData = db.tbl_JenisMingguLadang.SingleOrDefault(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                        x.fld_LadangID == estateWorkingDayData.fld_LadangID && x.fld_Deleted == false);

                    foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                    {
                        if ((int)day == estateWeekendData.fld_JenisMinggu)
                        {
                            //var monthInt = Convert.ToInt32(month.fldOptConfValue);

                            var cutiUmum = db.vw_CutiUmumLdgDetails
                                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                            x.fld_WilayahID == estateWorkingDayData.fld_WilayahID &&
                                            x.fld_LadangID == estateWorkingDayData.fld_LadangID &&
                                            x.fld_Deleted == false &&
                                            x.fld_Year == estateWorkingDayData.fld_Year &&
                                            x.fld_TarikhCuti.Value.Month == estateWorkingDayData.fld_Month)
                                .ToList();

                            //First We find out last date of mont
                            DateTime endOfMonth = new DateTime((int)estateWorkingDayData.fld_Year, Convert.ToInt32(estateWorkingDayData.fld_Month), DateTime.DaysInMonth((int)estateWorkingDayData.fld_Year, Convert.ToInt32(estateWorkingDayData.fld_Month)));

                            //DateTime endOfMonth = new DateTime(year, Convert.ToInt32(startingDay.Month),
                            //            DateTime.DaysInMonth(year, Convert.ToInt32(startingDay.Month)));
                            //get only last day of month
                            int daysInMonth = endOfMonth.Day;

                            int totalLeaveInAMonth = 0;

                            for (int i = 0; i < daysInMonth; ++i)
                            {
                                DateTime d = new DateTime((int)estateWorkingDayData.fld_Year, Convert.ToInt32(estateWorkingDayData.fld_Month), i + 1);

                                //Compare date with weekendTypeDay
                                if (d.DayOfWeek == day)
                                {
                                    totalLeaveInAMonth = totalLeaveInAMonth + 1;
                                }
                            }

                            var workingDaysInMonth = (DateTime.DaysInMonth((int)estateWorkingDayData.fld_Year, Convert.ToInt32(estateWorkingDayData.fld_Month))) - totalLeaveInAMonth - cutiUmum.Count;

                            estateWorkingDayData.fld_BilHariBekerja = Convert.ToInt32(workingDaysInMonth);
                            estateWorkingDayData.fld_ModifiedBy = getuserid;
                            estateWorkingDayData.fld_ModifiedDT = timezone.gettimezone();
                        }
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "4",
                        div = "estateWorkingDayMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkingDayMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = estateWorkingDayData.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = estateWorkingDayData.fld_LadangID,
                        paramName3 = "YearList",
                        paramValue3 = estateWorkingDayData.fld_Year
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstatePublicHolidayEligibilityMaintenance(int page = 1, string sort = "fld_TarikhCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var nextYear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }

            yearlist.Add(new SelectListItem { Text = nextYear.ToString(), Value = nextYear.ToString() });

            ViewBag.YearList = yearlist;

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            //comment by fatin 17/04/2023
            /*wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();*/

            //fatin added - 17/04/2023
            if (WilayahID == 0 && LadangID == 0)
            {
                wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            }

            else
            {
                wilayahList = new SelectList(db.tbl_Wilayah.Where(x => x.fld_ID == WilayahID), "fld_ID", "fld_WlyhName").ToList();

            }
            //end

            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            //ladangList = new SelectList(
            //    db.tbl_Ladang
            //        .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_LdgName)
            //        .Select(
            //            s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_LdgName }), "Value", "Text").ToList();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.LadangList = ladangList;

            return View();
        }

        public ActionResult _EstatePublicHolidayEligibilityMaintenance(int? YearList, int? WilayahList, int? LadangList, int page = 1, string sort = "fld_TarikhCuti",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()) || String.IsNullOrEmpty(WilayahList.ToString()) || String.IsNullOrEmpty(LadangList.ToString()))
            {
                message = GlobalResCorp.msgChoosePublicHolidayAllocation;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_CutiUmumKelayakan>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publicHolidayEligibilityData = db.vw_CutiUmumKelayakan
                .Where(x => x.fld_Tahun == YearList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_WlyhID == WilayahList && x.fld_Deleted == false).ToList();

            List<ModelsCorporate.vw_CutiUmumKelayakan> vw_CutiUmumKelayakan = new List<ModelsCorporate.vw_CutiUmumKelayakan>();

            if (!String.IsNullOrEmpty(LadangList.ToString()))
            {
                if (LadangList == 0)
                {
                    vw_CutiUmumKelayakan = publicHolidayEligibilityData;
                }

                else
                {
                    vw_CutiUmumKelayakan = publicHolidayEligibilityData.Where(x => x.fld_ID == LadangList).ToList();
                }
            }

            records.Content = vw_CutiUmumKelayakan;
            records.TotalRecords = vw_CutiUmumKelayakan.Count;

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = vw_CutiUmumKelayakan.Count();

            return View(records);
        }

        public ActionResult _EstatePublicHolidayEligibilityMaintenanceInfo(int? id, int? year, int page = 1, string sort = "fld_TarikhCuti", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_CutiUmumKelayakanDetails>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publicHolidayData = db.vw_CutiUmumKelayakanDetails
                .Where(x => x.fld_Tahun == year && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_LadangID == id && x.fld_Deleted == false).OrderBy(o => o.fld_TarikhCuti);

            records.Content = publicHolidayData.ToList();

            records.TotalRecords = publicHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publicHolidayData
                .Count();

            return View(records);
        }

        public ActionResult _EstatePublicHolidayEligibilityMaintenanceDelete(int? id, int? year, int page = 1, string sort = "fld_TarikhCuti", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_CutiUmumKelayakanDetails>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publicHolidayData = db.vw_CutiUmumKelayakanDetails
                .Where(x => x.fld_Tahun == year && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_LadangID == id && x.fld_Deleted == false).OrderBy(o => o.fld_TarikhCuti);

            var message = "";
            if (publicHolidayData.Count() == 0)
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            records.Content = publicHolidayData.ToList();

            records.TotalRecords = publicHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publicHolidayData.Count();
            ViewBag.LadangID = id;

            return View(records);
        }

        public ActionResult _EstatePublicHolidayEligibilityMaintenanceDeletePost(List<int> leaveID, int year, int ladang)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var ladangData = db.tbl_Ladang.SingleOrDefault(x => x.fld_ID == ladang);

                if (leaveID != null)
                {
                    //remove checkall value from leaveID list
                    leaveID.Remove(0);

                    foreach (var id in leaveID)
                    {
                        var selectedPublicHolidayData = db.tbl_CutiUmumKelayakan.SingleOrDefault(x =>
                            x.fld_CutiMasterID == id && x.fld_LadangID == ladang && x.fld_Deleted == false);

                        selectedPublicHolidayData.fld_ModifiedBy = getuserid;
                        selectedPublicHolidayData.fld_ModifiedDT = timezone.gettimezone();
                        selectedPublicHolidayData.fld_Deleted = true;
                    }
                }

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgDelete2,
                    status = "success",
                    year = year,
                    wilayah = ladangData.fld_WlyhID,
                    ladang = 0,
                    checkingdata = "1"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstatePublicHolidayEligibilityMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> cutiList = new List<SelectListItem>();

            ViewBag.CutiList = cutiList;

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var nextYear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }

            yearlist.Add(new SelectListItem { Text = nextYear.ToString(), Value = nextYear.ToString() });

            yearlist.Insert(0, new SelectListItem { Text = "Sila Pilih", Value = "0" });

            ViewBag.YearList = yearlist;

            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstatePublicHolidayEligibilityMaintenanceCreate(ModelsCorporate.tbl_CutiUmumKelayakanViewModelCreate tblCutiUmumKelayakanViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    List<tbl_CutiUmumKelayakan> cutiUmumKelayakanList = new List<tbl_CutiUmumKelayakan>();

                    var estatePublicHolidayEligibilityData = db.tbl_CutiUmumKelayakan
                        .Where(x => tblCutiUmumKelayakanViewModelCreate.fld_LadangID.ToList()
                                        .Contains((int)x.fld_LadangID) && tblCutiUmumKelayakanViewModelCreate
                                        .fld_CutiMasterID.ToList()
                                        .Contains((int)x.fld_CutiMasterID) &&
                                    x.fld_NegaraID == NegaraID &&
                                    x.fld_SyarikatID == SyarikatID);

                    foreach (var estatePublicEligibilityHoliday in estatePublicHolidayEligibilityData)
                    {
                        estatePublicEligibilityHoliday.fld_ModifiedBy = getuserid;
                        estatePublicEligibilityHoliday.fld_ModifiedDT = timezone.gettimezone();
                        estatePublicEligibilityHoliday.fld_Deleted = false;
                    }

                    db.SaveChanges();

                    foreach (var ladangID in tblCutiUmumKelayakanViewModelCreate.fld_LadangID)
                    {
                        var ladangData = db.tbl_Ladang.Single(x => x.fld_ID == ladangID);

                        foreach (var cutiUmumLdgNew in tblCutiUmumKelayakanViewModelCreate.fld_CutiMasterID)
                        {
                            if (estatePublicHolidayEligibilityData.Count(x => x.fld_LadangID == ladangID && x.fld_CutiMasterID == cutiUmumLdgNew) == 0)
                            {
                                tbl_CutiUmumKelayakan cutiUmumKelayakan = new tbl_CutiUmumKelayakan();

                                cutiUmumKelayakan.fld_CutiMasterID = Convert.ToInt32(cutiUmumLdgNew);
                                cutiUmumKelayakan.fld_NegaraID = NegaraID;
                                cutiUmumKelayakan.fld_SyarikatID = SyarikatID;
                                cutiUmumKelayakan.fld_WilayahID = ladangData.fld_WlyhID;
                                cutiUmumKelayakan.fld_LadangID = ladangData.fld_ID;
                                cutiUmumKelayakan.fld_Deleted = false;
                                cutiUmumKelayakan.fld_CreatedBy = getuserid;
                                cutiUmumKelayakan.fld_CreatedDT = timezone.gettimezone();

                                cutiUmumKelayakanList.Add(cutiUmumKelayakan);
                            }
                        }
                    }

                    if (cutiUmumKelayakanList.Count > 0)
                    {
                        db.tbl_CutiUmumKelayakan.AddRange(cutiUmumKelayakanList);
                        db.SaveChanges();
                    }

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "4",
                        div = "publicHolidayEligibilityMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstatePublicHolidayEligibilityMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = tblCutiUmumKelayakanViewModelCreate.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = "0",
                        paramName3 = "YearList",
                        paramValue3 = tblCutiUmumKelayakanViewModelCreate.fld_Year
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstateWorkerLeaveAllocationMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            //comment by fatin - 17/04/2023
            /*wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();*/

            //fatin added - 17/04/2023
            if (WilayahID == 0 && LadangID == 0)
            {
                wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            }

            else
            {
                wilayahList = new SelectList(db.tbl_Wilayah.Where(x => x.fld_ID == WilayahID), "fld_ID", "fld_WlyhName").ToList();

            }
            //end

            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> pkjList = new List<SelectListItem>();
            pkjList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.PkjList = pkjList;

            int drpyear = 0;
            int drprangeyear = 0;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            ViewBag.YearList = yearlist;

            return View();
        }


        public ActionResult _EstateWorkerLeaveAllocationMaintenance(int? WilayahList, int? LadangList, string PkjList, int? YearList, int page = 1, string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsEstate.tbl_CutiPeruntukan>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<tbl_CutiPeruntukan> cutiPeruntukanList = new List<tbl_CutiPeruntukan>();

            var message = "";

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()) && !String.IsNullOrEmpty(PkjList) && !String.IsNullOrEmpty(YearList.ToString()))
            {
                Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                var estateWorkerLeaveAllocation = estateConnection.tbl_CutiPeruntukan.Where(x =>
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList &&
                    x.fld_LadangID == LadangList && x.fld_NoPkj == PkjList && x.fld_Tahun == YearList &&
                    x.fld_Deleted == false);

                cutiPeruntukanList = estateWorkerLeaveAllocation.ToList();

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseEstateWorkerAllocation;
            }

            records.Content = cutiPeruntukanList;
            records.TotalRecords = cutiPeruntukanList.Count();
            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.Message = message;

            return View(records);
        }

        public JsonResult GetPkj(int? WilayahList, int? LadangList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user,  pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            List<SelectListItem> pkjList = new List<SelectListItem>();

            var estateWorkerData = estateConnection.tbl_Pkjmast
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList && x.fld_Kdaktf == "1").OrderBy(o => o.fld_Nama); //farahin tambah condition pekerja aktif - 18/02/2021

            foreach (var estateWorker in estateWorkerData)
            {
                pkjList.Add(new SelectListItem
                {
                    Text = estateWorker.fld_Nopkj.ToString() + " - " +
                           GetConfig.GetPkjNameFromNoPkj(estateWorker.fld_Nopkj, NegaraID, SyarikatID, WilayahList, LadangList),
                    Value = estateWorker.fld_Nopkj.ToString()
                });
            }

            return Json(pkjList);
        }

        public ActionResult _EstateWorkerLeaveAllocationMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> pkjList = new List<SelectListItem>();
            pkjList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.PkjList = pkjList;

            int drpyear = 0;
            int drprangeyear = 0;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            yearlist.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.YearList = yearlist;

            List<SelectListItem> leaveList = new List<SelectListItem>();
            leaveList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false && x.fldOptConfFlag2 == "kategoriCuti").OrderBy(o => o.fldOptConfValue)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue.ToString(), Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            leaveList.Insert(0, new SelectListItem {Text = GlobalResCorp.lblChoose, Value = ""});
            ViewBag.LeaveList = leaveList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerLeaveAllocationMaintenanceCreate(ModelsEstate.tbl_CutiPeruntukanModelViewCreate cutiPeruntukanModelViewCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            
            try
            {
                if (ModelState.IsValid)
                {
                    Connection.GetConnection(out host, out catalog, out user, out pass, cutiPeruntukanModelViewCreate.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                    ModelsEstate.tbl_CutiPeruntukan cutiPeruntukan = new tbl_CutiPeruntukan();

                    PropertyCopy.Copy(cutiPeruntukan, cutiPeruntukanModelViewCreate);

                    cutiPeruntukan.fld_NegaraID = NegaraID;
                    cutiPeruntukan.fld_SyarikatID = SyarikatID;
                    cutiPeruntukan.fld_Deleted = false;

                    estateConnection.tbl_CutiPeruntukan.Add(cutiPeruntukan);
                    estateConnection.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "5",
                        div = "estateWorkerLeaveAllocationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerLeaveAllocationMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = cutiPeruntukanModelViewCreate.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = cutiPeruntukanModelViewCreate.fld_LadangID,
                        paramName3 = "PkjList",
                        paramValue3 = cutiPeruntukanModelViewCreate.fld_NoPkj,
                        paramName4 = "YearList",
                        paramValue4 = cutiPeruntukanModelViewCreate.fld_Tahun
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GetAvailableLeaveSelection(int? WilayahList, int? LadangList, string PkjList, int? YearList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            List<SelectListItem> leaveList = new List<SelectListItem>();

            var estateLeaveAllocationData = estateConnection.tbl_CutiPeruntukan
                .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList && x.fld_NoPkj == PkjList &&
                            x.fld_Tahun == YearList)
                .OrderBy(o => o.fld_KodCuti).Select(s => s.fld_KodCuti).ToList();

            var leaveCategoryData = db.tblOptionConfigsWebs.Where(x =>
                !estateLeaveAllocationData.Any(optionConfig => optionConfig == x.fldOptConfValue) && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false && x.fldOptConfFlag2 == "kategoriCuti").OrderBy(o => o.fldOptConfValue);

            foreach (var leaveCategory in leaveCategoryData)
            {
                leaveList.Add(new SelectListItem
                {
                    Text = leaveCategory.fldOptConfValue + " - " + leaveCategory.fldOptConfDesc,
                    Value = leaveCategory.fldOptConfValue
                });
            }

            return Json(leaveList);
        }

        public ActionResult _EstateWorkerLeaveAllocationMaintenanceEdit(int id, int? WilayahList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            var estateWorkerLeaveAllocationData = estateConnection.tbl_CutiPeruntukan.SingleOrDefault(x =>
                x.fld_CutiPeruntukanID == id);

            ModelsEstate.tbl_CutiPeruntukanModelViewEdit cutiPeruntukanModelViewEdit = new tbl_CutiPeruntukanModelViewEdit();

            PropertyCopy.Copy(cutiPeruntukanModelViewEdit, estateWorkerLeaveAllocationData);

            return PartialView(cutiPeruntukanModelViewEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerLeaveAllocationMaintenanceEdit(ModelsEstate.tbl_CutiPeruntukanModelViewEdit cutiPeruntukanModelViewEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    Connection.GetConnection(out host, out catalog, out user, out pass, cutiPeruntukanModelViewEdit.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                    var estateWorkerLeaveAllocationData = estateConnection.tbl_CutiPeruntukan.SingleOrDefault(x =>
                        x.fld_CutiPeruntukanID == cutiPeruntukanModelViewEdit.fld_CutiPeruntukanID);

                    estateWorkerLeaveAllocationData.fld_JumlahCuti = cutiPeruntukanModelViewEdit.fld_JumlahCuti;
                    estateWorkerLeaveAllocationData.fld_JumlahCutiDiambil = cutiPeruntukanModelViewEdit.fld_JumlahCutiDiambil;

                    estateConnection.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "5",
                        div = "estateWorkerLeaveAllocationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerLeaveAllocationMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = cutiPeruntukanModelViewEdit.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = cutiPeruntukanModelViewEdit.fld_LadangID,
                        paramName3 = "PkjList",
                        paramValue3 = cutiPeruntukanModelViewEdit.fld_NoPkj,
                        paramName4 = "YearList",
                        paramValue4 = cutiPeruntukanModelViewEdit.fld_Tahun
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstateWorkerMasterDataMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            return View();
        }

        public ActionResult _EstateWorkerMasterDataMaintenance(int? WilayahList, int? LadangList, int page = 1, string sort = "fldOptConfFlag1", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsEstate.tbl_Pkjmast>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<ModelsEstate.tbl_Pkjmast> pkjMastList = new List<ModelsEstate.tbl_Pkjmast>();

            var message = "";

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()))
            {
                Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                var estateWorkerMasterData = estateConnection.tbl_Pkjmast.Where(x =>
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList &&
                    x.fld_LadangID == LadangList).OrderBy(o => o.fld_Nama);

                pkjMastList = estateWorkerMasterData.ToList();

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseEsateIncentiveEligibility;
            }

            records.Content = pkjMastList;
            records.TotalRecords = pkjMastList.Count();
            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.Message = message;

            return View(records);
        }

        public ActionResult _EstateWorkerMasterDataMaintenanceEdit(Guid id, int? WilayahList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            var estateWorkerMasterDataData = estateConnection.tbl_Pkjmast.SingleOrDefault(x =>
                x.fld_UniqueID == id);

            ModelsEstate.tbl_PkjmastModelViewEdit pkjmastModelViewEdit = new tbl_PkjmastModelViewEdit();

            PropertyCopy.Copy(pkjmastModelViewEdit, estateWorkerMasterDataData);

            List<SelectListItem> genderList = new List<SelectListItem>();
            genderList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jantina" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            genderList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.GenderList = genderList;

            List<SelectListItem> maritalStatusList = new List<SelectListItem>();
            maritalStatusList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "tarafKahwin" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            maritalStatusList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.MaritalStatusList = maritalStatusList;

            List<SelectListItem> settlerStatusList = new List<SelectListItem>();
            settlerStatusList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "statusPeneroka" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            settlerStatusList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.SettlerStatusList = settlerStatusList;

            List<SelectListItem> religionList = new List<SelectListItem>();
            religionList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "agama" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            religionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.ReligionList = religionList;

            List<SelectListItem> raceList = new List<SelectListItem>();
            raceList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "bangsa" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            raceList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.RaceList = raceList;

            List<SelectListItem> countryList = new List<SelectListItem>();
            countryList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "krytnlist" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            countryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.CountryList = countryList;

            List<SelectListItem> activeStatusList = new List<SelectListItem>();
            activeStatusList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "statusaktif" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            activeStatusList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.ActiveStatusList = activeStatusList;

            List<SelectListItem> inactiveReasonList = new List<SelectListItem>();
            inactiveReasonList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "sbbTakAktif" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            inactiveReasonList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.InactiveReasonList = inactiveReasonList;

            List<SelectListItem> companyCountryList = new List<SelectListItem>();
            companyCountryList = new SelectList(
                db.tbl_Negara
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_Deleted == false).OrderBy(o => o.fld_NegaraID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_NegaraID.ToString(), Text = s.fld_NegaraID + " - " + s.fld_NamaNegara }), "Value", "Text").ToList();
            companyCountryList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.CompanyCountryList = companyCountryList;

            List<SelectListItem> companyList = new List<SelectListItem>();
            companyList = new SelectList(
                db.tbl_Syarikat
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_SyarikatID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_SyarikatID.ToString(), Text = s.fld_SyarikatID + " - " + s.fld_NamaSyarikat }), "Value", "Text").ToList();
            companyList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.CompanyList = companyList;

            List<SelectListItem> regionList = new List<SelectListItem>();
            regionList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_ID + " - " + s.fld_WlyhName }), "Value", "Text").ToList();
            regionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.RegionList = regionList;

            List<SelectListItem> estateList = new List<SelectListItem>();
            estateList = new SelectList(
                db.tbl_Ladang
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_ID)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_ID + " - " + s.fld_LdgName }), "Value", "Text").ToList();
            estateList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.EstateList = estateList;

            List<SelectListItem> workerTypeList = new List<SelectListItem>();
            workerTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jnsPkj" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            workerTypeList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WorkerTypeList = workerTypeList;

            List<SelectListItem> designationList = new List<SelectListItem>();
            designationList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "designation" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            designationList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.DesignationList = designationList;

            List<SelectListItem> supplierList = new List<SelectListItem>();
            supplierList = new SelectList(
                db.tbl_Pembekal
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_KodPbkl)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodPbkl, Text = s.fld_KodPbkl + " - " + s.fld_NamaPbkl }), "Value", "Text").ToList();
            supplierList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.SupplierList = supplierList;

            List<SelectListItem> kwspSocsoActiveList = new List<SelectListItem>();
            kwspSocsoActiveList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "statusaktif" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            kwspSocsoActiveList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.KwspSocsoActiveList = kwspSocsoActiveList;

            List<SelectListItem> bankActiveList = new List<SelectListItem>();
            bankActiveList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "statusaktif" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            bankActiveList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.BankActiveList = bankActiveList;

            List<SelectListItem> kwspContributionList = new List<SelectListItem>();
            kwspContributionList = new SelectList(
                db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == "KWSP" && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_KodCaruman + " - " + s.fld_Keterangan }), "Value", "Text").ToList();
            kwspContributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.KwspContributionList = kwspContributionList;

            List<SelectListItem> socsoContributionList = new List<SelectListItem>();
            socsoContributionList = new SelectList(
                db.tbl_JenisCaruman
                    .Where(x => x.fld_JenisCaruman == "SOCSO" && x.fldNegaraID == NegaraID && x.fldSyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCaruman, Text = s.fld_KodCaruman + " - " + s.fld_Keterangan }), "Value", "Text").ToList();
            socsoContributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.SocsoContributionList = socsoContributionList;

            List<SelectListItem> bankList = new List<SelectListItem>();
            bankList = new SelectList(
                db.tbl_Bank
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_KodBank)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodBank, Text = s.fld_KodBank + " - " + s.fld_NamaBank }), "Value", "Text").ToList();
            bankList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.BankList = bankList;

            List<SelectListItem> negeriList = new List<SelectListItem>();
            negeriList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "negeri" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false).OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfValue + " - " + s.fldOptConfDesc }), "Value", "Text").ToList();
            negeriList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.NegeriList = negeriList;

            return PartialView(pkjmastModelViewEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerMasterDataMaintenanceEdit(ModelsEstate.tbl_PkjmastModelViewEdit pkjmastModelViewEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    Connection.GetConnection(out host, out catalog, out user, out pass, pkjmastModelViewEdit.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                    var estateWorkerMasterDataData = estateConnection.tbl_Pkjmast.SingleOrDefault(x =>
                        x.fld_UniqueID == pkjmastModelViewEdit.fld_UniqueID);

                    estateWorkerMasterDataData.fld_Nama = pkjmastModelViewEdit.fld_Nama;
                    estateWorkerMasterDataData.fld_Nokp = pkjmastModelViewEdit.fld_Nokp;
                    estateWorkerMasterDataData.fld_Kdjnt = pkjmastModelViewEdit.fld_Kdjnt;
                    estateWorkerMasterDataData.fld_Trlhr = pkjmastModelViewEdit.fld_Trlhr;
                    estateWorkerMasterDataData.fld_Kdkwn = pkjmastModelViewEdit.fld_Kdkwn;
                    estateWorkerMasterDataData.fld_Kpenrka = pkjmastModelViewEdit.fld_Kpenrka;
                    estateWorkerMasterDataData.fld_Kdagma = pkjmastModelViewEdit.fld_Kdagma;
                    estateWorkerMasterDataData.fld_Kdbgsa = pkjmastModelViewEdit.fld_Kdbgsa;
                    estateWorkerMasterDataData.fld_Kdrkyt = pkjmastModelViewEdit.fld_Kdrkyt;
                    estateWorkerMasterDataData.fld_Prmtno = pkjmastModelViewEdit.fld_Prmtno;
                    estateWorkerMasterDataData.fld_T2prmt = pkjmastModelViewEdit.fld_T2prmt;
                    estateWorkerMasterDataData.fld_Psptno = pkjmastModelViewEdit.fld_Psptno;
                    estateWorkerMasterDataData.fld_T2pspt = pkjmastModelViewEdit.fld_T2pspt;
                    estateWorkerMasterDataData.fld_Kdaktf = pkjmastModelViewEdit.fld_Kdaktf;
                    estateWorkerMasterDataData.fld_Trtakf = pkjmastModelViewEdit.fld_Trtakf;
                    estateWorkerMasterDataData.fld_Sbtakf = pkjmastModelViewEdit.fld_Sbtakf;
                    estateWorkerMasterDataData.fld_Almt1 = pkjmastModelViewEdit.fld_Almt1;
                    estateWorkerMasterDataData.fld_Poskod = pkjmastModelViewEdit.fld_Poskod;
                    estateWorkerMasterDataData.fld_Daerah = pkjmastModelViewEdit.fld_Daerah;
                    estateWorkerMasterDataData.fld_Neg = pkjmastModelViewEdit.fld_Neg;
                    estateWorkerMasterDataData.fld_Negara = pkjmastModelViewEdit.fld_Negara;
                    estateWorkerMasterDataData.fld_Notel = pkjmastModelViewEdit.fld_Notel;
                    estateWorkerMasterDataData.fld_Nofax = pkjmastModelViewEdit.fld_Nofax;
                    estateWorkerMasterDataData.fld_Trmlkj = pkjmastModelViewEdit.fld_Trmlkj;
                    estateWorkerMasterDataData.fld_Trshjw = pkjmastModelViewEdit.fld_Trshjw;
                    estateWorkerMasterDataData.fld_Jenispekerja = pkjmastModelViewEdit.fld_Jenispekerja;
                    estateWorkerMasterDataData.fld_Ktgpkj = pkjmastModelViewEdit.fld_Ktgpkj;
                    estateWorkerMasterDataData.fld_Kodbkl = pkjmastModelViewEdit.fld_Kodbkl;
                    estateWorkerMasterDataData.fld_StatusKwspSocso = pkjmastModelViewEdit.fld_StatusKwspSocso;
                    estateWorkerMasterDataData.fld_KodKWSP = pkjmastModelViewEdit.fld_KodKWSP;
                    estateWorkerMasterDataData.fld_Nokwsp = pkjmastModelViewEdit.fld_Nokwsp;
                    estateWorkerMasterDataData.fld_KodSocso = pkjmastModelViewEdit.fld_KodSocso;
                    estateWorkerMasterDataData.fld_Noperkeso = pkjmastModelViewEdit.fld_Noperkeso;
                    estateWorkerMasterDataData.fld_StatusAkaun = pkjmastModelViewEdit.fld_StatusAkaun;
                    estateWorkerMasterDataData.fld_Kdbank = pkjmastModelViewEdit.fld_Kdbank;
                    estateWorkerMasterDataData.fld_NoAkaun = pkjmastModelViewEdit.fld_NoAkaun;

                    estateConnection.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "3",
                        div = "estateWorkerMasterDataMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerMasterDataMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = pkjmastModelViewEdit.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = pkjmastModelViewEdit.fld_LadangID
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GetLadangCode(int? LadangList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var ladangCode = db.tbl_Ladang
                .SingleOrDefault(x => x.fld_ID == LadangList).fld_LdgCode;

            return Json(ladangCode);
        }

        public JsonResult GetDaerah(string postCode)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var daerah = "";
            var districtData = db.tbl_Poskod
                .SingleOrDefault(x => x.fld_Postcode == postCode);

            if (districtData == null)
            {
                daerah = "";
            }

            else
            {
                daerah = districtData.fld_DistrictArea;
            }

            return Json(daerah);
        }

        public ActionResult EstateWorkerAdditionalContributionMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> pkjList = new List<SelectListItem>();
            pkjList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.PkjList = pkjList;

            return View();
        }

        public ActionResult _EstateWorkerAdditionalContributionMaintenance(int? WilayahList, int? LadangList, string PkjList, int page = 1, string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsEstate.tbl_PkjCarumanTambahan>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<tbl_PkjCarumanTambahan> pkjCarumanTambahanList = new List<tbl_PkjCarumanTambahan>();

            var message = "";

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()) && !String.IsNullOrEmpty(PkjList))
            {
                Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                var estateWorkerAdditionalContributionData = estateConnection.tbl_PkjCarumanTambahan.Where(x =>
                    x.fld_Nopkj == PkjList &&
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList &&
                    x.fld_LadangID == LadangList &&
                    x.fld_Deleted == false);

                pkjCarumanTambahanList = estateWorkerAdditionalContributionData.ToList();

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseEstateWorkerAdditionalContribution;
            }

            records.Content = pkjCarumanTambahanList;
            records.TotalRecords = pkjCarumanTambahanList.Count();
            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.Message = message;

            return View(records);
        }

        public ActionResult _EstateWorkerAdditionalContributionMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> pkjList = new List<SelectListItem>();
            pkjList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.PkjList = pkjList;

            List<SelectListItem> contributionList = new List<SelectListItem>();
            contributionList = new SelectList(
                db.tbl_CarumanTambahan
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_NamaCaruman)
                    .Select(
                        s => new SelectListItem { Value = s.fld_KodCaruman.ToString(), Text = s.fld_NamaCaruman }), "Value", "Text").ToList();
            contributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.ContributionList = contributionList;

            List<SelectListItem> subContributionList = new List<SelectListItem>();
            subContributionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.SubContributionList = subContributionList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerAdditionalContributionMaintenanceCreate(ModelsEstate.tbl_PkjCarumanTambahanViewModelCreate pkjCarumanTambahanViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    Connection.GetConnection(out host, out catalog, out user, out pass, pkjCarumanTambahanViewModelCreate.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
                    MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                    ModelsEstate.tbl_PkjCarumanTambahan pkjCarumanTambahan = new tbl_PkjCarumanTambahan();

                    PropertyCopy.Copy(pkjCarumanTambahan, pkjCarumanTambahanViewModelCreate);

                    pkjCarumanTambahan.fld_NegaraID = NegaraID;
                    pkjCarumanTambahan.fld_SyarikatID = SyarikatID;
                    pkjCarumanTambahan.fld_Deleted = false;

                    estateConnection.tbl_PkjCarumanTambahan.Add(pkjCarumanTambahan);
                    estateConnection.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "4",
                        div = "estateWorkerAdditionalContributionMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerAdditionalContributionMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = pkjCarumanTambahanViewModelCreate.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = pkjCarumanTambahanViewModelCreate.fld_LadangID,
                        paramName3 = "PkjList",
                        paramValue3 = pkjCarumanTambahanViewModelCreate.fld_Nopkj
                    });
                }
                
                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateWorkerAdditionalContributionMaintenanceDelete(Guid? id, int? WilayahList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            var estateWorkerAdditionalContributionData =
                estateConnection.tbl_PkjCarumanTambahan.SingleOrDefault(x => x.fld_ID == id);

            return PartialView(estateWorkerAdditionalContributionData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerAdditionalContributionMaintenanceDelete(ModelsEstate.tbl_PkjCarumanTambahan pkjCarumanTambahan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                Connection.GetConnection(out host, out catalog, out user, out pass, pkjCarumanTambahan.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                var estateWorkerAdditionalContributionData =
                    estateConnection.tbl_PkjCarumanTambahan.SingleOrDefault(x => x.fld_ID == pkjCarumanTambahan.fld_ID);

                estateWorkerAdditionalContributionData.fld_Deleted = true;

                estateConnection.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgDelete2,
                    status = "success",
                    checkingdata = "0",
                    method = "4",
                    div = "estateWorkerAdditionalContributionMaintenanceDetails",
                    rootUrl = domain,
                    action = "_EstateWorkerAdditionalContributionMaintenance",
                    controller = "Maintenance",
                    paramName = "WilayahList",
                    paramValue = pkjCarumanTambahan.fld_WilayahID,
                    paramName2 = "LadangList",
                    paramValue2 = pkjCarumanTambahan.fld_LadangID,
                    paramName3 = "PkjList",
                    paramValue3 = pkjCarumanTambahan.fld_Nopkj
                });

            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstateIOMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            return View();
        }

        public ActionResult _EstateIOMaintenance(int? WilayahList, int? LadangList, int page = 1, string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_IOSAP>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<tbl_IOSAP> IOSapList = new List<tbl_IOSAP>();

            var message = "";

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()))
            {
                var estateIOData = db.tbl_IOSAP.Where(x =>
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList);

                IOSapList = estateIOData.ToList();

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseEsateIncentiveEligibility;
            }

            records.Content = IOSapList;
            records.TotalRecords = IOSapList.Count();
            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;
            ViewBag.Message = message;

            return View(records);
        }

        public ActionResult _EstateIOMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> selectionList = new List<SelectListItem>();
            selectionList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            selectionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.SelectionList = selectionList;

            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateIOMaintenanceCreate(ModelsCorporate.tbl_IOSAP IOSapModelViewCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            string appname = Request.ApplicationPath;
            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
            var lang = Request.RequestContext.RouteData.Values["lang"];

            if (appname != "/")
            {
                domain = domain + appname;
            }
            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tbl_IOSAP IOSap = new tbl_IOSAP();

                    PropertyCopy.Copy(IOSap, IOSapModelViewCreate);

                    var CheckExisting = db.tbl_IOSAP.Where(x => x.fld_IOcode == IOSap.fld_IOcode).FirstOrDefault();
                    if (CheckExisting == null)
                    {
                        IOSap.fld_NegaraID = NegaraID;
                        IOSap.fld_SyarikatID = SyarikatID;
                        IOSap.fld_Deleted = false;

                        db.tbl_IOSAP.Add(IOSap);
                        db.SaveChanges();

                        

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.msgAdd,
                            status = "success",
                            checkingdata = "0",
                            method = "3",
                            div = "estateIOMaintenanceDetails",
                            rootUrl = domain,
                            action = "_EstateIOMaintenance",
                            controller = "Maintenance",
                            paramName = "WilayahList",
                            paramValue = IOSapModelViewCreate.fld_WilayahID,
                            paramName2 = "LadangList",
                            paramValue2 = IOSapModelViewCreate.fld_LadangID
                        });
                    }
                    else
                    {
                        
                        return Json(new
                        {
                            success = true,
                            msg = "Maklumat IO Telah Wujud",
                            status = "warning",
                            checkingdata = "0",
                            method = "3",
                            div = "estateIOMaintenanceDetails",
                            rootUrl = domain,
                            action = "_EstateIOMaintenance",
                            controller = "Maintenance",
                            paramName = "WilayahList",
                            paramValue = IOSapModelViewCreate.fld_WilayahID,
                            paramName2 = "LadangList",
                            paramValue2 = IOSapModelViewCreate.fld_LadangID
                        });
                    }
                    
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //public ActionResult _EstateIOMaintenanceEdit(int id)
        //{
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

        //    ViewBag.Maintenance = "class = active";

        //    var estateIOData = db.tbl_IOSAP.SingleOrDefault(x => x.fld_ID == id);

        //    ModelsCorporate.tbl_IOSAPModelViewEdit IoSapModeViewEdit = new ModelsCorporate.tbl_IOSAPModelViewEdit();

        //    PropertyCopy.Copy(IoSapModeViewEdit, estateIOData);

        //    List<SelectListItem> wilayahList = new List<SelectListItem>();
        //    wilayahList = new SelectList(
        //        db.tbl_Wilayah
        //            .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
        //            .Select(
        //                s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
        //    wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
        //    ViewBag.WilayahList = wilayahList;

        //    List<SelectListItem> ladangList = new List<SelectListItem>();
        //    ladangList = new SelectList(
        //        db.tbl_Ladang
        //            .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_LdgName)
        //            .Select(
        //                s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_LdgName }), "Value", "Text").ToList();
        //    ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
        //    ViewBag.LadangList = ladangList;

        //    List<SelectListItem> selectionList = new List<SelectListItem>();
        //    selectionList = new SelectList(
        //        db.tblOptionConfigsWebs
        //            .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
        //            .Select(
        //                s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
        //    selectionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
        //    ViewBag.SelectionList = selectionList;

        //    return View(IoSapModeViewEdit);
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult _EstateIOMaintenanceEdit(ModelsCorporate.tbl_IOSAPModelViewEdit IOSapModelViewEdit)
        //{
        //    int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
        //    int? getuserid = GetIdentity.ID(User.Identity.Name);
        //    string host, catalog, user, pass = "";
        //    GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

        //    try
        //    {
        //        if (ModelState.IsValid)
        //        {
        //            var estateIOData = db.tbl_IOSAP.SingleOrDefault(x => x.fld_ID == IOSapModelViewEdit.fld_ID);

        //            estateIOData.fld_IOcode = IOSapModelViewEdit.fld_IOcode;
        //            estateIOData.fld_PktCode = IOSapModelViewEdit.fld_PktCode;
        //            estateIOData.fld_SubPktCode = IOSapModelViewEdit.fld_SubPktCode;
        //            estateIOData.fld_LuasPkt = IOSapModelViewEdit.fld_LuasPkt;
        //            estateIOData.fld_LuasKawTnmn = IOSapModelViewEdit.fld_LuasKawTnmn;
        //            estateIOData.fld_LuasKawBerhasil = IOSapModelViewEdit.fld_LuasKawBerhasil;
        //            estateIOData.fld_LdgIndicator = IOSapModelViewEdit.fld_LdgIndicator;
        //            estateIOData.fld_LdgKod = IOSapModelViewEdit.fld_LdgKod;
        //            estateIOData.fld_WilayahID = IOSapModelViewEdit.fld_WilayahID;
        //            estateIOData.fld_LadangID = IOSapModelViewEdit.fld_LadangID;
        //            estateIOData.fld_Deleted = IOSapModelViewEdit.fld_Deleted;

        //            db.SaveChanges();

        //            string appname = Request.ApplicationPath;
        //            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
        //            var lang = Request.RequestContext.RouteData.Values["lang"];

        //            if (appname != "/")
        //            {
        //                domain = domain + appname;
        //            }

        //            return Json(new
        //            {
        //                success = true,
        //                msg = GlobalResCorp.msgUpdate,
        //                status = "success",
        //                checkingdata = "0",
        //                method = "3",
        //                div = "estateIOMaintenanceDetails",
        //                rootUrl = domain,
        //                action = "_EstateIOMaintenance",
        //                controller = "Maintenance",
        //                paramName = "WilayahList",
        //                paramValue = IOSapModelViewEdit.fld_WilayahID,
        //                paramName2 = "LadangList",
        //                paramValue2 = IOSapModelViewEdit.fld_LadangID
        //            });
        //        }

        //        else
        //        {
        //            return Json(new
        //            {
        //                success = false,
        //                msg = GlobalResCorp.msgErrorData,
        //                status = "danger",
        //                checkingdata = "0"
        //            });
        //        }
        //    }

        //    catch (Exception ex)
        //    {
        //        geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
        //        return Json(new
        //        {
        //            success = false,
        //            msg = GlobalResCorp.msgError,
        //            status = "danger",
        //            checkingdata = "0"
        //        });
        //    }

        //    finally
        //    {
        //        db.Dispose();
        //    }
        //}

        public ActionResult _EstateIOMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            var estateIOData = db.tbl_IOSAP.SingleOrDefault(x => x.fld_ID == id);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList = new SelectList(
                db.tbl_Ladang
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_LdgName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_LdgName }), "Value", "Text").ToList();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            List<SelectListItem> selectionList = new List<SelectListItem>();
            selectionList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "pilihanYaTidak" && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfFlag2, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            selectionList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.SelectionList = selectionList;

            return View(estateIOData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateIOMaintenanceDelete(ModelsCorporate.tbl_IOSAP IOSapDelete)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    tbl_IOSAP IOSap = db.tbl_IOSAP.Find(IOSapDelete.fld_ID);
                    db.tbl_IOSAP.Remove(IOSap);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgDelete2,
                        status = "success",
                        checkingdata = "0",
                        method = "3",
                        div = "estateIOMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateIOMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = IOSapDelete.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = IOSapDelete.fld_LadangID
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }


        //tambah maklumat IO
        //tbl_IOSAP
        public ActionResult IOMaintenance(string filter, int page = 1, string sort = "fld_ID", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
           
            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult _IOMaintenance(string filter, int page = 1, string sort = "fld_ID", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_IOSAP>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var ioData = db.tbl_IOSAP
                .Where(x => x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = ioData
                    .Where(x => x.fld_IOcode.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_LdgKod.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = ioData
                    .Count(x => x.fld_IOcode.ToUpper().Contains(filter.ToUpper()) ||
                                x.fld_LdgKod.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = ioData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = ioData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }



        public ActionResult _IOMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);
            try
            {
               
                var wilayahlist = db.tbl_Wilayah
                    .Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_ID).ToList();

                ViewBag.wilayahKod = new SelectList(
                    wilayahlist
                    .Select(s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();

                var fitWilayah = wilayahlist.Select(s => s.fld_ID).Take(1).FirstOrDefault();
                ViewBag.ladangKod = new SelectList(
                    db.tbl_Ladang.Where(x => x.fld_WlyhID == fitWilayah && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&  x.fld_Deleted == false).OrderBy(o => o.fld_LdgCode)
                    .Select(s => new SelectListItem { Value = s.fld_LdgCode, Text = s.fld_LdgName }), "Value", "Text").ToList();

                return PartialView();
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }
        }

        public JsonResult GetIOCode(string wlyhCode)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";

            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> PilihAktiviti = new List<SelectListItem>();

            var tbl_Ladang = db.tbl_Ladang.Where(x => x.fld_Deleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WlyhID.ToString() == wlyhCode && x.fld_Deleted == false).ToList();

            PilihAktiviti = new SelectList(tbl_Ladang.OrderBy(o => o.fld_LdgCode).Select(s => new SelectListItem { Value = s.fld_LdgCode, Text = s.fld_LdgName }), "Value", "Text").ToList();
            PilihAktiviti.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            return Json(new { PilihAktiviti });
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _IOMaintenanceCreate(ModelsCorporate.tbl_IOSAP ioSap, string fld_IOcode, string ladangKod, int wilayahKod)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            //Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var checkdata = db.tbl_IOSAP.Where(x => x.fld_IOcode == ioSap.fld_IOcode && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    ioSap.fld_IOcode = fld_IOcode;
                    ioSap.fld_LdgKod = ladangKod;
                    ioSap.fld_Deleted = false;
                    ioSap.fld_NegaraID = NegaraID;
                    ioSap.fld_SyarikatID = SyarikatID;
                    ioSap.fld_WilayahID = wilayahKod;
                    ioSap.fld_LadangID = LadangID;
                    ioSap.fld_DTCreated = timezone.gettimezone();

                    db.tbl_IOSAP.Add(ioSap);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "IOMaintenanceDetails",
                        rootUrl = domain,
                        action = "_IOMaintenance",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }


            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _IOMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            var ccData = db.tbl_IOSAP
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

            return PartialView(ccData);

        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _IOMaintenanceEdit(ModelsCorporate.tbl_IOSAP io)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var checkdata = db.tbl_IOSAP.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                                    x.fld_IOcode == io.fld_IOcode && x.fld_LdgKod == io.fld_LdgKod && x.fld_Deleted == false).FirstOrDefault();
                if (checkdata == null)
                {
                    ModelsCorporate.tbl_IOSAP getIO = db.tbl_IOSAP
                        .Single(x => x.fld_ID == io.fld_ID && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

                    getIO.fld_IOcode = io.fld_IOcode;
                    getIO.fld_DTModified = timezone.gettimezone();

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "IOMaintenanceDetails",
                        rootUrl = domain,
                        action = "_IOMaintenance",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _IOMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            var CcData = db.tbl_IOSAP
                .SingleOrDefault(x => x.fld_ID == id && x.fld_NegaraID == NegaraID &&
                                      x.fld_SyarikatID == SyarikatID);

            return PartialView(CcData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _IOMaintenanceDelete(ModelsCorporate.tbl_IOSAP io)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahID.Value, SyarikatID.Value, NegaraID.Value);

            try
            {
                var IoData = db.tbl_IOSAP.SingleOrDefault(
                    x => x.fld_ID == io.fld_ID &&
                         x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (IoData.fld_Deleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                IoData.fld_Deleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgUpdate,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "IOMaintenanceDetails",
                    rootUrl = domain,
                    action = "_IOMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstateWorkerIncentiveRegistrationMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();

            //comment by fatin - 17/04/2023
            /*wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();*/

            //fatin added - 17/04/2023
            if (WilayahID == 0 && LadangID == 0)
            {
                wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            }

            else
            {
                wilayahList = new SelectList(db.tbl_Wilayah.Where(x => x.fld_ID == WilayahID), "fld_ID", "fld_WlyhName").ToList();

            }
            //end

            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            ViewBag.YearList = yearlist;

            ViewBag.MonthList = new SelectList(
                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "monthlist" && x.fldDeleted == false &&
                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
                "fldOptConfValue", "fldOptConfDesc", month);

            return View();
        }

        public ActionResult _EstateWorkerIncentiveRegistrationMaintenance(int? WilayahList, int? LadangList, int? YearList, int? MonthList, int page = 1, string sort = "fldOptConfFlag1", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<CustMod_WorkerIncentiveList>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<CustMod_WorkerIncentiveList> WorkerIncentiveList = new List<CustMod_WorkerIncentiveList>();

            var message = "";
            var estateAccountStatus = false;

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()))
            {
                Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                var estateAccountStatusData = estateConnection.tbl_TutupUrusNiaga.SingleOrDefault(x =>
                    x.fld_Year == YearList && x.fld_Month == MonthList && x.fld_NegaraID == NegaraID &&
                    x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList);

                if (estateAccountStatusData != null)
                {
                    estateAccountStatus = (bool)estateAccountStatusData.fld_StsTtpUrsNiaga;
                }

                var estateWorkerData = estateConnection.tbl_Pkjmast.Where(x =>
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList &&
                    x.fld_LadangID == LadangList && x.fld_Kdaktf == "1").OrderBy(o => o.fld_Nama);
               
                foreach (var estateWorker in estateWorkerData)
                {
                    var estateWorkerIncentiveData = estateConnection.tbl_Insentif
                        .Where(a => a.fld_Nopkj == estateWorker.fld_Nopkj && a.fld_Year == YearList &&
                                    a.fld_Month == MonthList && a.fld_NegaraID == NegaraID &&
                                    a.fld_SyarikatID == SyarikatID && a.fld_WilayahID == WilayahList &&
                                    a.fld_LadangID == LadangList && a.fld_Deleted == false)
                        .OrderBy(x => x.fld_KodInsentif)
                        .ToList();
                    WorkerIncentiveList.Add(new CustMod_WorkerIncentiveList { Pkjmast = estateWorker, Insentif = estateWorkerIncentiveData });
                }

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseEsateIncentiveEligibility;
            }

            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.Message = message;
            ViewBag.EstateAccountStatus = estateAccountStatus;
            ViewBag.Month = MonthList;
            ViewBag.Year = YearList;

            return View(WorkerIncentiveList);
        }

        public ActionResult _EstateWorkerIncentiveRegistrationMaintenanceCreate(string nopkj, int EstateWilayahID, int EstateLadangID, int Year, int Month)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> incentiveTypeList = new List<SelectListItem>();

            incentiveTypeList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisInsentif" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            incentiveTypeList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.IncentiveTypeList = incentiveTypeList;

            List<SelectListItem> incentiveList = new List<SelectListItem>();
            incentiveList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.IncentiveList = incentiveList;

            tbl_InsentifViewModelCreate insentif = new tbl_InsentifViewModelCreate();

            insentif.fld_Nopkj = nopkj;
            insentif.fld_Year = Year;
            insentif.fld_Month = Month;
            insentif.fld_NegaraID = NegaraID;
            insentif.fld_SyarikatID = SyarikatID;
            insentif.fld_WilayahID = EstateWilayahID;
            insentif.fld_LadangID = EstateLadangID;

            return PartialView(insentif);
        }

        public JsonResult IsIncentiveWithinRange(decimal? fld_NilaiTidakTetap, string fld_KodInsentif)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var incentiveData =
                db.tbl_JenisInsentif.SingleOrDefault(x => x.fld_KodInsentif == fld_KodInsentif &&
                                                          x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

            if (incentiveData.fld_MinValue <= fld_NilaiTidakTetap && incentiveData.fld_MaxValue >= fld_NilaiTidakTetap)
            {
                return Json(
                    true,
                    JsonRequestBehavior.AllowGet);
            }

            else
            {
                return Json(
                    false,
                    JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult checkIncentiveRecord(string incentiveCategoryType, string nopkj, int? wilayahID, int? ladangID, int? year, int? month)
        {
            List<SelectListItem> incentiveAvailableForWorkerList = new List<SelectListItem>();

            if (String.IsNullOrEmpty(incentiveCategoryType))
            {
                return Json(new
                {
                    incentiveAvailableForWorkerList,
                    noData = true
                });
            }

            else
            {
                int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
                int? getuserid = GetIdentity.ID(User.Identity.Name);
                string host, catalog, user, pass = "";
                GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
                Connection.GetConnection(out host, out catalog, out user, out pass, wilayahID, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                var workerData = estateConnection.tbl_Pkjmast
                    .Where(x => x.fld_Nopkj == nopkj && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID &&
                                x.fld_WilayahID == wilayahID && x.fld_LadangID == ladangID &&
                                x.fld_Kdaktf == "1");

                var workerDesignation = workerData.Select(s => s.fld_Ktgpkj).SingleOrDefault();

                var incentiveEligibilityData = db.tbl_KelayakanInsentifPkjLdg
                    .Where(x => x.fld_KodPkj == workerDesignation &&
                                x.fld_KodInsentif.Contains(incentiveCategoryType)
                                && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID && x.fld_LadangID == ladangID && x.fld_Deleted == false)
                    .Select(s => s.fld_KodInsentif)
                    .ToList();

                var incentiveData = db.tbl_JenisInsentif
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false);

                List<String> incentiveDataList = new List<String>();

                //if local worker
                if (GetConfig.GetWebConfigFlag2FromValue(workerData.Select(s => s.fld_Jenispekerja).SingleOrDefault(),
                        "jnsPkj", NegaraID, SyarikatID) == "1")
                {
                    incentiveDataList = incentiveData
                        .Where(x => x.fld_KelayakanKepada == 0 || x.fld_KelayakanKepada == 2)
                        .Select(s => s.fld_KodInsentif)
                        .ToList();
                }

                //foreign worker
                else
                {
                    incentiveDataList = incentiveData
                        .Where(x => x.fld_KelayakanKepada == 1 || x.fld_KelayakanKepada == 2)
                        .Select(s => s.fld_KodInsentif)
                        .ToList();
                }

                var trueIncentiveEligibility = incentiveDataList.Intersect(incentiveEligibilityData);

                var workerIncentiveDataList = estateConnection.vw_MaklumatInsentif
                    .Where(x => x.fld_Nopkj == nopkj && x.fld_Month == month &&
                                x.fld_Year == year && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == wilayahID &&
                                x.fld_LadangID == ladangID && x.fld_Deleted == false)
                    .Select(s => s.fld_KodInsentif)
                    .ToList();

                var trueIncentiveEligibilityMinusExistingIncentive =
                    trueIncentiveEligibility.Except(workerIncentiveDataList);

                if (trueIncentiveEligibilityMinusExistingIncentive.ToList().Count == 0)
                {
                    incentiveAvailableForWorkerList.Insert(0,
                        new SelectListItem { Text = GlobalResCorp.lblNoIncentiveEligibility, Value = "" });
                }

                else
                {
                    incentiveAvailableForWorkerList.Insert(0,
                        new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
                }

                var i = 1;

                foreach (var incentive in trueIncentiveEligibilityMinusExistingIncentive)
                {
                    incentiveAvailableForWorkerList.Insert(i,
                        new SelectListItem
                        {

                            Value = incentive,
                            Text = incentiveData.Where(x => x.fld_KodInsentif == incentive)
                                .Select(s => s.fld_Keterangan)
                                .SingleOrDefault()
                        });
                    i++;
                }

                return Json(new
                {
                    incentiveAvailableForWorkerList,
                    noData = false
                });
            }
        }

        public JsonResult getIncentiveLimit(string incentiveCode)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> incentiveAvailableForWorkerList = new List<SelectListItem>();

            incentiveAvailableForWorkerList.Insert(0,
                new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            if (String.IsNullOrEmpty(incentiveCode))
            {
                return Json(new
                {
                    noData = true
                });
            }

            else
            {
                var incentiveData = db.tbl_JenisInsentif
                    .SingleOrDefault(x => x.fld_KodInsentif == incentiveCode && x.fld_NegaraID == NegaraID &&
                                          x.fld_SyarikatID == SyarikatID);

                return Json(new
                {
                    incentiveData,
                    noData = false
                });
            }
        }

        public JsonResult getDailyIncentiveAmount(string incentiveCode, string nopkj)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (String.IsNullOrEmpty(incentiveCode))
            {
                return Json(new
                {
                    noData = true
                });
            }

            else
            {
                var incentiveData = db.tbl_JenisInsentif
                    .SingleOrDefault(x => x.fld_KodInsentif == incentiveCode && x.fld_NegaraID == NegaraID &&
                                          x.fld_SyarikatID == SyarikatID);

                return Json(new
                {
                    msg1 = GlobalResCorp.msgIncentiveMaximumValue,
                    msg2 = GlobalResCorp.lblDay1,
                    ratePerDay = incentiveData.fld_DailyFixedValue,
                    maxIncentive = incentiveData.fld_MaxValue,
                    noData = false
                });
            }
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerIncentiveRegistrationMaintenanceCreate(ModelsEstate.tbl_InsentifViewModelCreate insentifViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, insentifViewModelCreate.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            try
            {
                //farahin comment - 01/03/2021
                //if (ModelState.IsValid)
                //{
                    tbl_Insentif insentif = new tbl_Insentif();

                    PropertyCopy.Copy(insentif, insentifViewModelCreate);

                    insentif.fld_Deleted = false;
                    insentif.fld_CreatedBy = getuserid;
                    insentif.fld_CreatedDT = timezone.gettimezone();

                    if (insentifViewModelCreate.fld_TetapanNilai == 0)
                    {
                        if (GetConfig.GetIncentiveIsValidRange(insentifViewModelCreate.fld_KodInsentif,
                            (decimal)insentifViewModelCreate.fld_NilaiTidakTetap, NegaraID, SyarikatID))
                        {
                            insentif.fld_NilaiInsentif = insentifViewModelCreate.fld_NilaiTidakTetap;
                        }

                        else
                        {
                            return Json(new
                            {
                                success = false,
                                msg = GlobalResCorp.msgErrorData,
                                status = "danger",
                                checkingdata = "0"
                            });
                        }
                    }

                    else if (insentifViewModelCreate.fld_TetapanNilai == 1)
                    {
                        insentif.fld_NilaiInsentif = insentifViewModelCreate.fld_NilaiTetap;
                    }

                    else
                    {
                        insentif.fld_NilaiInsentif = insentifViewModelCreate.fld_NilaiHarian;
                    }

                    estateConnection.tbl_Insentif.Add(insentif);
                    estateConnection.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "5",
                        div = "estateWorkerIncentiveRegistrationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerIncentiveRegistrationMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = insentifViewModelCreate.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = insentifViewModelCreate.fld_LadangID,
                        paramName3 = "YearList",
                        paramValue3 = insentifViewModelCreate.fld_Year,
                        paramName4 = "MonthList",
                        paramValue4 = insentifViewModelCreate.fld_Month
                    });

                //farahin comment - 01032021
                //}

                //else
                //{
                //    return Json(new
                //    {
                //        success = false,
                //        msg = GlobalResCorp.msgErrorData,
                //        status = "danger",
                //        checkingdata = "0"
                //    });
                //}
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateWorkerIncentiveRegistrationMaintenanceDelete(Guid id, int wilayahID)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, wilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            var estateWorkerIncentiveData = estateConnection.tbl_Insentif.SingleOrDefault(x => x.fld_InsentifID == id);

            return PartialView(estateWorkerIncentiveData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerIncentiveRegistrationMaintenanceDelete(ModelsEstate.tbl_Insentif insentif)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, insentif.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            try
            {
                var estateWorkerIncentiveData =
                    estateConnection.tbl_Insentif.SingleOrDefault(x => x.fld_InsentifID == insentif.fld_InsentifID);

                estateWorkerIncentiveData.fld_Deleted = true;

                estateConnection.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgDelete2,
                    status = "success",
                    checkingdata = "0",
                    method = "5",
                    div = "estateWorkerIncentiveRegistrationMaintenanceDetails",
                    rootUrl = domain,
                    action = "_EstateWorkerIncentiveRegistrationMaintenance",
                    controller = "Maintenance",
                    paramName = "WilayahList",
                    paramValue = estateWorkerIncentiveData.fld_WilayahID,
                    paramName2 = "LadangList",
                    paramValue2 = estateWorkerIncentiveData.fld_LadangID,
                    paramName3 = "YearList",
                    paramValue3 = estateWorkerIncentiveData.fld_Year,
                    paramName4 = "MonthList",
                    paramValue4 = estateWorkerIncentiveData.fld_Month
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateWorkerIncentiveRegistrationMaintenanceCopy()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearList = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearList.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearList.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            yearList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.YearList = yearList;

            var monthList = new List<SelectListItem>();
            monthList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "monthlist" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            monthList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.MonthList = monthList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerIncentiveRegistrationMaintenanceCopy(ModelsEstate.tbl_InsentifViewModelCopy insentifViewModelCopy)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, insentifViewModelCopy.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            try
            {
                if (ModelState.IsValid)
                {
                    List<tbl_Insentif> insentifList = new List<tbl_Insentif>();

                    var estateAccountStatusData = estateConnection.tbl_TutupUrusNiaga.SingleOrDefault(x =>
                        x.fld_Year == insentifViewModelCopy.fld_YearTo &&
                        x.fld_Month == insentifViewModelCopy.fld_MonthTo &&
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                        x.fld_WilayahID == insentifViewModelCopy.fld_WilayahID &&
                        x.fld_LadangID == insentifViewModelCopy.fld_LadangID);

                    if (estateAccountStatusData == null || estateAccountStatusData.fld_StsTtpUrsNiaga == false)
                    {
                        var workerIncentiveData = estateConnection.tbl_Insentif.Where(x =>
                            x.fld_Year == insentifViewModelCopy.fld_YearFrom &&
                            x.fld_Month == insentifViewModelCopy.fld_MonthFrom && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == insentifViewModelCopy.fld_WilayahID &&
                            x.fld_LadangID == insentifViewModelCopy.fld_LadangID && x.fld_Deleted == false);

                        if (workerIncentiveData.Count() != 0)
                        {
                            foreach (var workerIncentive in workerIncentiveData)
                            {
                                var checkExistingIncentive = estateConnection.tbl_Insentif.SingleOrDefault(x =>
                                    x.fld_Nopkj == workerIncentive.fld_Nopkj &&
                                    x.fld_KodInsentif == workerIncentive.fld_KodInsentif &&
                                    x.fld_Year == insentifViewModelCopy.fld_YearTo &&
                                    x.fld_Month == insentifViewModelCopy.fld_MonthTo &&
                                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_WilayahID == workerIncentive.fld_WilayahID &&
                                    x.fld_LadangID == workerIncentive.fld_LadangID && x.fld_Deleted == false);

                                if (checkExistingIncentive == null)
                                {
                                    tbl_Insentif insentif = new tbl_Insentif();

                                    insentif.fld_Nopkj = workerIncentive.fld_Nopkj;
                                    insentif.fld_KodInsentif = workerIncentive.fld_KodInsentif;
                                    insentif.fld_NilaiInsentif = workerIncentive.fld_NilaiInsentif;
                                    insentif.fld_Year = insentifViewModelCopy.fld_YearTo;
                                    insentif.fld_Month = insentifViewModelCopy.fld_MonthTo;
                                    insentif.fld_NegaraID = NegaraID;
                                    insentif.fld_SyarikatID = SyarikatID;
                                    insentif.fld_WilayahID = workerIncentive.fld_WilayahID;
                                    insentif.fld_LadangID = workerIncentive.fld_LadangID;
                                    insentif.fld_Deleted = false;
                                    insentif.fld_CreatedBy = getuserid;
                                    insentif.fld_CreatedDT = timezone.gettimezone();

                                    insentifList.Add(insentif);
                                }
                            }

                            if (insentifList.Count != 0)
                            {
                                estateConnection.tbl_Insentif.AddRange(insentifList);
                                estateConnection.SaveChanges();
                            }

                            string appname = Request.ApplicationPath;
                            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                            var lang = Request.RequestContext.RouteData.Values["lang"];

                            if (appname != "/")
                            {
                                domain = domain + appname;
                            }

                            return Json(new
                            {
                                success = true,
                                msg = GlobalResCorp.msgAdd,
                                status = "success",
                                checkingdata = "0",
                                method = "5",
                                div = "estateWorkerIncentiveRegistrationMaintenanceDetails",
                                rootUrl = domain,
                                action = "_EstateWorkerIncentiveRegistrationMaintenance",
                                controller = "Maintenance",
                                paramName = "WilayahList",
                                paramValue = insentifViewModelCopy.fld_WilayahID,
                                paramName2 = "LadangList",
                                paramValue2 = insentifViewModelCopy.fld_LadangID,
                                paramName3 = "YearList",
                                paramValue3 = insentifViewModelCopy.fld_YearTo,
                                paramName4 = "MonthList",
                                paramValue4 = insentifViewModelCopy.fld_MonthTo
                            });
                        }

                        else
                        {
                            return Json(new
                            {
                                success = false,
                                msg = GlobalResCorp.msgAlert3,
                                status = "danger",
                                checkingdata = "0"
                            });
                        }

                    }

                    else
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgAlert2,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult EstateWorkerProductivityRegistrationMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            ViewBag.YearList = yearlist;

            ViewBag.MonthList = new SelectList(
                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "monthlist" && x.fldDeleted == false &&
                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID),
                "fldOptConfValue", "fldOptConfDesc", month);

            return View();
        }

        public ActionResult _EstateWorkerProductivityRegistrationMaintenance(int? WilayahList, int? LadangList, int? YearList, int? MonthList, int page = 1, string sort = "fldOptConfFlag1", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<tbl_Produktiviti>();
            int role = GetIdentity.RoleID(getuserid).Value;

            List<tbl_Produktiviti> produktivitiList = new List<tbl_Produktiviti>();

            var message = "";
            var estateAccountStatus = false;

            if (!String.IsNullOrEmpty(WilayahList.ToString()) && !String.IsNullOrEmpty(LadangList.ToString()))
            {
                Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
                MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

                var estateAccountStatusData = estateConnection.tbl_TutupUrusNiaga.SingleOrDefault(x =>
                    x.fld_Year == YearList && x.fld_Month == MonthList && x.fld_NegaraID == NegaraID &&
                    x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList);

                if (estateAccountStatusData != null)
                {
                    estateAccountStatus = (bool)estateAccountStatusData.fld_StsTtpUrsNiaga;
                }

                var estateWorkerData = estateConnection.tbl_Pkjmast.Where(x =>
                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == WilayahList &&
                    x.fld_LadangID == LadangList && x.fld_Kdaktf == "1").OrderBy(o => o.fld_Nama);

                foreach (var estateWorker in estateWorkerData)
                {
                    var estateWorkerProductivityData = estateConnection.tbl_Produktiviti
                        .SingleOrDefault(a => a.fld_Nopkj == estateWorker.fld_Nopkj && a.fld_Year == YearList &&
                                    a.fld_Month == MonthList && a.fld_NegaraID == NegaraID &&
                                    a.fld_SyarikatID == SyarikatID && a.fld_WilayahID == WilayahList &&
                                    a.fld_LadangID == LadangList && a.fld_Deleted == false);

                    if (estateWorkerProductivityData != null)
                    {
                        produktivitiList.Add(new tbl_Produktiviti()
                        {
                            fld_Nopkj = estateWorkerProductivityData.fld_Nopkj,
                            fld_JenisPelan = estateWorkerProductivityData.fld_JenisPelan,
                            fld_Targetharian = estateWorkerProductivityData.fld_Targetharian,
                            fld_Unit = estateWorkerProductivityData.fld_Unit,
                            fld_HadirKerja = estateWorkerProductivityData.fld_HadirKerja,
                            fld_Year = estateWorkerProductivityData.fld_Year,
                            fld_Month = estateWorkerProductivityData.fld_Month,
                            fld_NegaraID = estateWorkerProductivityData.fld_NegaraID,
                            fld_SyarikatID = estateWorkerProductivityData.fld_SyarikatID,
                            fld_WilayahID = estateWorkerProductivityData.fld_WilayahID,
                            fld_LadangID = estateWorkerProductivityData.fld_LadangID,
                            fld_Deleted = estateWorkerProductivityData.fld_Deleted,
                            fld_ProduktivitifID = estateWorkerProductivityData.fld_ProduktivitifID
                        });
                    }

                    else
                    {
                        produktivitiList.Add(new tbl_Produktiviti()
                        {
                            fld_Nopkj = estateWorker.fld_Nopkj,
                            fld_NegaraID = estateWorker.fld_NegaraID,
                            fld_SyarikatID = estateWorker.fld_SyarikatID,
                            fld_WilayahID = estateWorker.fld_WilayahID,
                            fld_LadangID = estateWorker.fld_LadangID
                        });
                    }
                }

                message = GlobalResCorp.msgNoRecord;
            }

            else
            {
                message = GlobalResCorp.lblChooseEsateIncentiveEligibility;
            }

            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.Message = message;
            ViewBag.EstateAccountStatus = estateAccountStatus;
            ViewBag.Month = MonthList;
            ViewBag.Year = YearList;

            return View(produktivitiList);
        }

        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceCreate(string nopkj, int EstateWilayahID, int EstateLadangID, int Year, int Month)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsEstate.tbl_ProduktivitiViewModelCreate produktivitiViewModelCreate = new tbl_ProduktivitiViewModelCreate();

            produktivitiViewModelCreate.fld_Nopkj = nopkj;
            produktivitiViewModelCreate.fld_Year = Year;
            produktivitiViewModelCreate.fld_Month = Month;
            produktivitiViewModelCreate.fld_NegaraID = NegaraID;
            produktivitiViewModelCreate.fld_SyarikatID = SyarikatID;
            produktivitiViewModelCreate.fld_WilayahID = EstateWilayahID;
            produktivitiViewModelCreate.fld_LadangID = EstateWilayahID;

            var estateWorkingDay = db.tbl_HariBekerjaLadang.SingleOrDefault(x =>
                x.fld_Year == Year && x.fld_Month == Month &&
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == EstateWilayahID &&
                x.fld_LadangID == EstateLadangID && x.fld_Deleted == false);

            if (estateWorkingDay != null)
            {
                produktivitiViewModelCreate.fld_HadirKerja = estateWorkingDay.fld_BilHariBekerja;
            }

            List<SelectListItem> jenisPelanList = new List<SelectListItem>();

            jenisPelanList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            jenisPelanList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.jenisPelanList = jenisPelanList;

            List<SelectListItem> UnitList = new List<SelectListItem>();

            UnitList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();

            UnitList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.UnitList = UnitList;

            return PartialView(produktivitiViewModelCreate);
        }

        public JsonResult checkCategoryType(string jenisPelan)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> UnitList = new List<SelectListItem>();

            if (jenisPelan == "A")
            {
                UnitList = new SelectList(
                    db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "unit" && x.fldOptConfFlag2 == "A" &&
                                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                        .OrderBy(o => o.fldOptConfDesc)
                        .Select(
                            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                    "Value", "Text").ToList();
            }

            else if (jenisPelan == "B")
            {
                UnitList = new SelectList(
                    db.tblOptionConfigsWebs
                        .Where(x => x.fldOptConfFlag1 == "unit" && x.fldOptConfFlag2 == "B" &&
                                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fldDeleted == false)
                        .OrderBy(o => o.fldOptConfDesc)
                        .Select(
                            s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                    "Value", "Text").ToList();
                UnitList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" }));
            }

            else
            {
                UnitList.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" }));
            }

            return Json(new { UnitList = UnitList });
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceCreate(ModelsEstate.tbl_ProduktivitiViewModelCreate produktivitiViewModelCreate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, produktivitiViewModelCreate.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            try
            {
                if (ModelState.IsValid)
                {
                    tbl_Produktiviti produktiviti = new tbl_Produktiviti();

                    PropertyCopy.Copy(produktiviti, produktivitiViewModelCreate);

                    produktiviti.fld_Deleted = false;
                    produktiviti.fld_CreatedBy = getuserid;
                    produktiviti.fld_CreatedDT = timezone.gettimezone();

                    estateConnection.tbl_Produktiviti.Add(produktiviti);
                    estateConnection.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "5",
                        div = "estateWorkerProductivityRegistrationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerProductivityRegistrationMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = produktivitiViewModelCreate.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = produktivitiViewModelCreate.fld_LadangID,
                        paramName3 = "YearList",
                        paramValue3 = produktivitiViewModelCreate.fld_Year,
                        paramName4 = "MonthList",
                        paramValue4 = produktivitiViewModelCreate.fld_Month
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceEdit(Guid produktivitiID, int EstateWilayahID)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, EstateWilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            var productivityData =
                estateConnection.tbl_Produktiviti.SingleOrDefault(x => x.fld_ProduktivitifID == produktivitiID);

            tbl_ProduktivitiViewModelCreate produktivitiViewModelEdit = new tbl_ProduktivitiViewModelCreate();

            PropertyCopy.Copy(produktivitiViewModelEdit, productivityData);

            var estateWorkingDay = db.tbl_HariBekerjaLadang.SingleOrDefault(x =>
                x.fld_Year == productivityData.fld_Year && x.fld_Month == productivityData.fld_Month &&
                x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == EstateWilayahID &&
                x.fld_LadangID == productivityData.fld_LadangID && x.fld_Deleted == false);

            if (estateWorkingDay != null)
            {
                produktivitiViewModelEdit.fld_HadirKerja = estateWorkingDay.fld_BilHariBekerja;
            }

            List<SelectListItem> jenisPelanList = new List<SelectListItem>();

            jenisPelanList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "jenisPelan" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            jenisPelanList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.jenisPelanList = jenisPelanList;

            List<SelectListItem> UnitList = new List<SelectListItem>();

            UnitList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "unit" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();

            UnitList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });

            ViewBag.UnitList = UnitList;

            return PartialView(produktivitiViewModelEdit);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceEdit(ModelsEstate.tbl_ProduktivitiViewModelCreate produktivitiViewModelEdit)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, produktivitiViewModelEdit.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            try
            {
                if (ModelState.IsValid)
                {
                    var productivityData = estateConnection.tbl_Produktiviti.SingleOrDefault(x =>
                        x.fld_ProduktivitifID == produktivitiViewModelEdit.fld_ProduktivitifID);

                    productivityData.fld_JenisPelan = produktivitiViewModelEdit.fld_JenisPelan;
                    productivityData.fld_Targetharian = produktivitiViewModelEdit.fld_Targetharian;
                    productivityData.fld_Unit = produktivitiViewModelEdit.fld_Unit;
                    productivityData.fld_HadirKerja = produktivitiViewModelEdit.fld_HadirKerja;
                    productivityData.fld_CreatedBy = getuserid;
                    productivityData.fld_CreatedDT = timezone.gettimezone();

                    estateConnection.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "5",
                        div = "estateWorkerProductivityRegistrationMaintenanceDetails",
                        rootUrl = domain,
                        action = "_EstateWorkerProductivityRegistrationMaintenance",
                        controller = "Maintenance",
                        paramName = "WilayahList",
                        paramValue = produktivitiViewModelEdit.fld_WilayahID,
                        paramName2 = "LadangList",
                        paramValue2 = produktivitiViewModelEdit.fld_LadangID,
                        paramName3 = "YearList",
                        paramValue3 = produktivitiViewModelEdit.fld_Year,
                        paramName4 = "MonthList",
                        paramValue4 = produktivitiViewModelEdit.fld_Month
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceDelete(Guid produktivitiID, int EstateWilayahID)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, EstateWilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            var productivityData =
                estateConnection.tbl_Produktiviti.SingleOrDefault(x => x.fld_ProduktivitifID == produktivitiID);

            return PartialView(productivityData);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceDelete(ModelsEstate.tbl_Produktiviti produktiviti)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, produktiviti.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            try
            {

                var productivityData = estateConnection.tbl_Produktiviti.SingleOrDefault(x =>
                    x.fld_ProduktivitifID == produktiviti.fld_ProduktivitifID);

                productivityData.fld_Deleted = true;

                estateConnection.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = GlobalResCorp.msgAdd,
                    status = "success",
                    checkingdata = "0",
                    method = "5",
                    div = "estateWorkerProductivityRegistrationMaintenanceDetails",
                    rootUrl = domain,
                    action = "_EstateWorkerProductivityRegistrationMaintenance",
                    controller = "Maintenance",
                    paramName = "WilayahList",
                    paramValue = produktiviti.fld_WilayahID,
                    paramName2 = "LadangList",
                    paramValue2 = produktiviti.fld_LadangID,
                    paramName3 = "YearList",
                    paramValue3 = produktiviti.fld_Year,
                    paramName4 = "MonthList",
                    paramValue4 = produktiviti.fld_Month
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceCopy()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();
            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.LadangList = ladangList;

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year;

            var yearList = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearList.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearList.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            yearList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.YearList = yearList;

            var monthList = new List<SelectListItem>();
            monthList = new SelectList(
                db.tblOptionConfigsWebs
                    .Where(x => x.fldOptConfFlag1 == "monthlist" && x.fld_NegaraID == NegaraID &&
                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                    .OrderBy(o => o.fldOptConfDesc)
                    .Select(
                        s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }),
                "Value", "Text").ToList();
            monthList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "" });
            ViewBag.MonthList = monthList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _EstateWorkerProductivityRegistrationMaintenanceCopy(ModelsEstate.tbl_ProduktivitiViewModelCopy produktivitiViewModelCopy)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, produktivitiViewModelCopy.fld_WilayahID, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            try
            {
                if (ModelState.IsValid)
                {
                    List<tbl_Produktiviti> produktivitiList = new List<tbl_Produktiviti>();

                    var estateAccountStatusData = estateConnection.tbl_TutupUrusNiaga.SingleOrDefault(x =>
                        x.fld_Year == produktivitiViewModelCopy.fld_YearTo &&
                        x.fld_Month == produktivitiViewModelCopy.fld_MonthTo &&
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                        x.fld_WilayahID == produktivitiViewModelCopy.fld_WilayahID &&
                        x.fld_LadangID == produktivitiViewModelCopy.fld_LadangID);

                    if (estateAccountStatusData == null || estateAccountStatusData.fld_StsTtpUrsNiaga == false)
                    {
                        var workerProductivityData = estateConnection.tbl_Produktiviti.Where(x =>
                            x.fld_Year == produktivitiViewModelCopy.fld_YearFrom &&
                            x.fld_Month == produktivitiViewModelCopy.fld_MonthFrom && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == produktivitiViewModelCopy.fld_WilayahID &&
                            x.fld_LadangID == produktivitiViewModelCopy.fld_LadangID && x.fld_Deleted == false);

                        var estateWorkingDay = db.tbl_HariBekerjaLadang.SingleOrDefault(x =>
                            x.fld_Year == produktivitiViewModelCopy.fld_YearTo &&
                            x.fld_Month == produktivitiViewModelCopy.fld_MonthTo && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID && x.fld_WilayahID == produktivitiViewModelCopy.fld_WilayahID &&
                            x.fld_LadangID == produktivitiViewModelCopy.fld_LadangID && x.fld_Deleted == false);

                        if (workerProductivityData.Count() != 0)
                        {
                            foreach (var workerProduktivity in workerProductivityData)
                            {
                                var checkExistingProductivity = estateConnection.tbl_Produktiviti.SingleOrDefault(x =>
                                    x.fld_Nopkj == workerProduktivity.fld_Nopkj &&
                                    x.fld_Year == produktivitiViewModelCopy.fld_YearTo &&
                                    x.fld_Month == produktivitiViewModelCopy.fld_MonthTo &&
                                    x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                                    x.fld_WilayahID == workerProduktivity.fld_WilayahID &&
                                    x.fld_LadangID == workerProduktivity.fld_LadangID && x.fld_Deleted == false);

                                if (checkExistingProductivity == null)
                                {
                                    tbl_Produktiviti produktiviti = new tbl_Produktiviti();

                                    produktiviti.fld_Nopkj = workerProduktivity.fld_Nopkj;
                                    produktiviti.fld_JenisPelan = workerProduktivity.fld_JenisPelan;
                                    produktiviti.fld_Targetharian = workerProduktivity.fld_Targetharian;
                                    produktiviti.fld_Unit = workerProduktivity.fld_Unit;
                                    produktiviti.fld_Year = produktivitiViewModelCopy.fld_YearTo;
                                    produktiviti.fld_Month = produktivitiViewModelCopy.fld_MonthTo;
                                    produktiviti.fld_NegaraID = NegaraID;
                                    produktiviti.fld_SyarikatID = SyarikatID;
                                    produktiviti.fld_WilayahID = workerProduktivity.fld_WilayahID;
                                    produktiviti.fld_LadangID = workerProduktivity.fld_LadangID;
                                    produktiviti.fld_Deleted = false;
                                    produktiviti.fld_CreatedBy = getuserid;
                                    produktiviti.fld_CreatedDT = timezone.gettimezone();

                                    if (estateWorkingDay != null)
                                    {
                                        produktiviti.fld_HadirKerja = estateWorkingDay.fld_BilHariBekerja;
                                    }

                                    else
                                    {
                                        produktiviti.fld_HadirKerja = 0;
                                    }

                                    produktivitiList.Add(produktiviti);
                                }
                            }

                            if (produktivitiList.Count != 0)
                            {
                                estateConnection.tbl_Produktiviti.AddRange(produktivitiList);
                                estateConnection.SaveChanges();
                            }

                            string appname = Request.ApplicationPath;
                            string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                            var lang = Request.RequestContext.RouteData.Values["lang"];

                            if (appname != "/")
                            {
                                domain = domain + appname;
                            }

                            return Json(new
                            {
                                success = true,
                                msg = GlobalResCorp.msgAdd,
                                status = "success",
                                checkingdata = "0",
                                method = "5",
                                div = "estateWorkerProductivityRegistrationMaintenanceDetails",
                                rootUrl = domain,
                                action = "_EstateWorkerProductivityRegistrationMaintenance",
                                controller = "Maintenance",
                                paramName = "WilayahList",
                                paramValue = produktivitiViewModelCopy.fld_WilayahID,
                                paramName2 = "LadangList",
                                paramValue2 = produktivitiViewModelCopy.fld_LadangID,
                                paramName3 = "YearList",
                                paramValue3 = produktivitiViewModelCopy.fld_YearTo,
                                paramName4 = "MonthList",
                                paramValue4 = produktivitiViewModelCopy.fld_MonthTo
                            });
                        }

                        else
                        {
                            return Json(new
                            {
                                success = false,
                                msg = GlobalResCorp.msgAlert3,
                                status = "danger",
                                checkingdata = "0"
                            });
                        }

                    }

                    else
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgAlert2,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //added by faeza 19.08.2021
        public ActionResult LoaderDifficultyPriceMaintenance(string filter, int page = 1, string sort = "fldOptConfFlag1",
    string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            ViewBag.Maintenance = "class = active";

            return View();
        }

        //added by faeza 19.08.2021
        public ActionResult _LoaderDifficultyPriceMaintenance(string filter, int page = 1,
            string sort = "fldOptConfFlag1",
            string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tblOptionConfigsWeb>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var loaderDifficultyData = db.tblOptionConfigsWebs
                .Where(x => x.fldOptConfFlag1 == "KesukaranMemunggah" &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID);

            if (!String.IsNullOrEmpty(filter))
            {
                records.Content = loaderDifficultyData
                    .Where(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()))
                    .OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = loaderDifficultyData
                    .Count(x => x.fldOptConfDesc.ToUpper().Contains(filter.ToUpper()) ||
                                x.fldOptConfValue.ToUpper().Contains(filter.ToUpper()));
            }

            else
            {
                records.Content = loaderDifficultyData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

                records.TotalRecords = loaderDifficultyData
                    .Count();
            }

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);
        }

        //added by faeza 19.08.2021
        public ActionResult _LoaderDifficultyPriceMaintenanceCreate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            ModelsCorporate.tblOptionConfigsWebLoaderDifficultyPriceViewModelCreate optionConfigsWeb = new ModelsCorporate.tblOptionConfigsWebLoaderDifficultyPriceViewModelCreate();

            var getCurrentRunningLoaderDifficultyPriceCode = dbview.tblOptionConfigsWeb
                .Where(x => x.fldOptConfFlag1 == "KesukaranMemunggah")
                .OrderByDescending(o => o.fldOptConfValue)
                .Select(s => s.fldOptConfValue)
                .FirstOrDefault();

            if (getCurrentRunningLoaderDifficultyPriceCode == null)
            {
                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
                                                       .Where(
                                                           x => x.fldOptConfFlag1 == "KesukaranMemunggahFlag" &&
                                                                x.fld_NegaraID == NegaraID &&
                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() + "01";
            }

            else
            {
                int generateNewLoaderDifficultyPriceCode =
                    Convert.ToInt32(getCurrentRunningLoaderDifficultyPriceCode.Substring(1)) + 1;

                optionConfigsWeb.fldOptConfValue = db.tblOptionConfigsWebs
                                                       .Where(
                                                           x => x.fldOptConfFlag1 == "KesukaranMemunggahFlag" &&
                                                                x.fld_NegaraID == NegaraID &&
                                                                x.fld_SyarikatID == SyarikatID && x.fldDeleted == false)
                                                       .Select(s => s.fldOptConfValue).SingleOrDefault() +
                                                   generateNewLoaderDifficultyPriceCode.ToString("00");
            }

            return PartialView(optionConfigsWeb);
        }

        //added by faeza 19.08.2021
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _LoaderDifficultyPriceMaintenanceCreate(ModelsCorporate.tblOptionConfigsWebLoaderDifficultyPriceViewModelCreate optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    ModelsCorporate.tblOptionConfigsWeb loaderDifficultyPriceModel = new ModelsCorporate.tblOptionConfigsWeb();

                    loaderDifficultyPriceModel.fldOptConfValue = optionConfigsWeb.fldOptConfValue.ToUpper();
                    loaderDifficultyPriceModel.fldOptConfDesc = GetConfig.UppercaseFirst(optionConfigsWeb.fldOptConfDesc);
                    loaderDifficultyPriceModel.fldOptConfFlag1 = "KesukaranMemunggah";
                    loaderDifficultyPriceModel.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;
                    loaderDifficultyPriceModel.fldDeleted = false;
                    loaderDifficultyPriceModel.fld_NegaraID = NegaraID;
                    loaderDifficultyPriceModel.fld_SyarikatID = SyarikatID;

                    db.tblOptionConfigsWebs.Add(loaderDifficultyPriceModel);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "loaderDifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_LoaderDifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });

                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //added by faeza 19.08.2021
        public ActionResult _LoaderDifficultyPriceMaintenanceEdit(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var loaderDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMemunggah" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            ModelsCorporate.tblOptionConfigsWebLoaderDifficultyPriceViewModelEdit loaderDifficultyPriceViewModel = new ModelsCorporate.tblOptionConfigsWebLoaderDifficultyPriceViewModelEdit();

            PropertyCopy.Copy(loaderDifficultyPriceViewModel, loaderDifficultyPriceData);

            return PartialView(loaderDifficultyPriceViewModel);
        }

        //added by faeza 19.08.2021
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _LoaderDifficultyPriceMaintenanceEdit(ModelsCorporate.tblOptionConfigsWebLoaderDifficultyPriceViewModelEdit optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                if (ModelState.IsValid)
                {
                    var loaderDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                        x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMemunggah" &&
                             x.fld_NegaraID == NegaraID &&
                             x.fld_SyarikatID == SyarikatID);

                    loaderDifficultyPriceData.fldOptConfFlag2 = optionConfigsWeb.fldOptConfFlag2;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "1",
                        div = "loaderDifficultyPriceMaintenanceDetails",
                        rootUrl = domain,
                        action = "_LoaderDifficultyPriceMaintenance",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //added by faeza 19.08.2021
        public ActionResult _LoaderDifficultyPriceMaintenanceDelete(int id)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            var loaderDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                x => x.fldOptConfID == id && x.fldOptConfFlag1 == "KesukaranMemunggah" && x.fld_NegaraID == NegaraID &&
                     x.fld_SyarikatID == SyarikatID);

            return PartialView(loaderDifficultyPriceData);
        }

        //added by faeza 19.08.2021
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _LoaderDifficultyPriceMaintenanceDelete(ModelsCorporate.tblOptionConfigsWeb optionConfigsWeb)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var loaderDifficultyPriceData = db.tblOptionConfigsWebs.SingleOrDefault(
                    x => x.fldOptConfID == optionConfigsWeb.fldOptConfID && x.fldOptConfFlag1 == "KesukaranMemunggah" && x.fld_NegaraID == NegaraID &&
                         x.fld_SyarikatID == SyarikatID);

                bool status = true;

                var message = "";
                if (loaderDifficultyPriceData.fldDeleted == false)
                {
                    status = true;
                    message = GlobalResCorp.msgDelete2;
                }

                else
                {
                    status = false;
                    message = GlobalResCorp.msgUndelete;
                }

                loaderDifficultyPriceData.fldDeleted = status;

                db.SaveChanges();

                string appname = Request.ApplicationPath;
                string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                var lang = Request.RequestContext.RouteData.Values["lang"];

                if (appname != "/")
                {
                    domain = domain + appname;
                }

                return Json(new
                {
                    success = true,
                    msg = message,
                    status = "success",
                    checkingdata = "0",
                    method = "1",
                    div = "loaderDifficultyPriceMaintenanceDetails",
                    rootUrl = domain,
                    action = "_LoaderDifficultyPriceMaintenance",
                    controller = "Maintenance"
                });
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public JsonResult GetSubContribution(int? WilayahList, int? LadangList, string ContributionList, string PkjList)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);
            Connection.GetConnection(out host, out catalog, out user, out pass, WilayahList, SyarikatID.Value, NegaraID.Value);
            MVC_SYSTEM_ModelsEstate estateConnection = MVC_SYSTEM_ModelsEstate.ConnectToSqlServer(host, catalog, user, pass);

            List<SelectListItem> kodSubCarumanList = new List<SelectListItem>();

            var estateWorkerAdditionalContributionData = estateConnection.tbl_PkjCarumanTambahan
                .Where(x => x.fld_KodCaruman == ContributionList && x.fld_Nopkj == PkjList &&
                            x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID &&
                            x.fld_WilayahID == WilayahList && x.fld_LadangID == LadangList && x.fld_Deleted == false)
                .OrderBy(o => o.fld_KodSubCaruman).Select(s => s.fld_KodSubCaruman);

            var estateWorkerSubContributionData = db.tbl_SubCarumanTambahan.Where(x =>
                x.fld_KodCaruman == ContributionList
                && x.fld_NegaraID == NegaraID &&
                x.fld_SyarikatID == SyarikatID &&
                x.fld_Deleted == false).ToList();

            var contributionList =
                estateWorkerSubContributionData.Select(s => s.fld_KodSubCaruman).Except(
                    estateWorkerAdditionalContributionData);

            foreach (var contribution in contributionList)
            {
                kodSubCarumanList.Add(new SelectListItem
                {
                    Text = contribution.ToString() + " - " +
                           GetConfig.GetAdditionalContributionDesc(contribution, NegaraID, SyarikatID),
                    Value = contribution.ToString()
                });
            }

            return Json(kodSubCarumanList);
        }
        //sepul 24/02/2021
        //PROSES 1 JANA CUTI TARIK DARI SUMBER INTERNET - INDEX
        public ActionResult PullPublicHolidayMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            ViewBag.YearList = yearlist;

            ViewBag.NegeriList = new SelectList(
                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "negeriCuti" && x.fldDeleted == false &&
                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfDesc),
                "fldOptConfValue", "fldOptConfDesc");

            return View();
        }
        //PROSES 1 - JANA CUTI TARIK DARI SUMBER INTERNET  - CARIAN CUTI
        public ActionResult _PullPublicHolidayMaintenance(int? YearList, string NegeriList, int page = 1, string sort = "fld_TarikhCuti", string sort2 = "fld_Negeri", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()) || String.IsNullOrEmpty(NegeriList))
            {
                message = GlobalResCorp.msgChoosePublicHolidayAllocation;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CutiUmum>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publiHolidayData = db.tbl_CutiUmum
                .Where(x => x.fld_Tahun == YearList && x.fld_NegaraID == NegaraID && x.fld_Negeri == NegeriList &&
                            x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_Negeri).ThenBy(o => o.fld_TarikhCuti);

            records.Content = publiHolidayData
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = publiHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publiHolidayData
                .Count();

            return View(records);
        }
        //PROSES 1 JANA CUTI TARIK DARI SUMBER INTERNET - PAPARAN TAHUN
        public ActionResult _PullPublicHolidayMaintenanceGenerate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsCorporate.tbl_CutiUmumViewModelGenerate cutiUmumViewModelGenerate = new tbl_CutiUmumViewModelGenerate();

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.YearList = yearlist;

            cutiUmumViewModelGenerate.fld_Year = Convert.ToInt16(timezone.gettimezone().Year);

            return PartialView(cutiUmumViewModelGenerate);
        }

        //PROSES 1 JANA CUTI TARIK DARI SUMBER INTERNET - GENERATE sepul copy dari code Shah 19/02/2021
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PullPublicHolidayMaintenanceGenerate(ModelsCorporate.tbl_CutiUmumViewModelGenerate cutiUmumViewModelGenerate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    string page = "";
                    string keterangan = "";
                    short? shortYear = Convert.ToInt16(cutiUmumViewModelGenerate.fld_Year);
                    DateTime HolidayDate = new DateTime();
                    WebClient WebClient = new WebClient();
                    HtmlDocument doc = new HtmlDocument();
                    List<List<string>> holidays = new List<List<string>>();
                    List<ModelsCorporate.tbl_CutiUmum> HolidayList = new List<ModelsCorporate.tbl_CutiUmum>();

                    var publicHolidayData = db.tbl_CutiUmum.Where(x =>
                        x.fld_TarikhCuti.Value.Year == cutiUmumViewModelGenerate.fld_Year && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).ToList();

                    var stateData = db.tblOptionConfigsWebs
                            .Where(x => x.fldOptConfFlag1 == "negeriCuti" && x.fldOptConfValue != "16" &&
                                        x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).Select(s => new { s.fldOptConfFlag2, s.fldOptConfValue })
                            .ToList();

                    if (publicHolidayData.Count() > 0)
                    {
                        foreach (var state in stateData)
                        {
                            page = WebClient.DownloadString("https://www.officeholidays.com/countries/malaysia/" + state.fldOptConfFlag2.ToLower() + "/" + cutiUmumViewModelGenerate.fld_Year);
                            doc.LoadHtml(page);
                            holidays = doc.DocumentNode.SelectSingleNode("//table[@class='country-table']")
                                .Descendants("tr")
                                .Skip(1)
                                .Where(tr => tr.Elements("td").Count() > 1)
                                .Select(tr => tr.Elements("td").Select(td => td.InnerText.Trim()).ToList())
                                .ToList();

                            string getdate = "";
                            foreach (var holiday in holidays)
                            {
                                var holidayname = HttpUtility.HtmlDecode(holiday[2].Trim());
                                if (holidayname.ToUpper().Trim() == "MOTHER'S DAY" ||
                                    holidayname.ToUpper().Trim() == "FATHER'S DAY")
                                {

                                }
                                else
                                {
                                    getdate = holiday[1].ToString() + ", " + cutiUmumViewModelGenerate.fld_Year;
                                    HolidayDate = DateTime.ParseExact(getdate, "MMM d, yyyy", CultureInfo.InvariantCulture);
                                    keterangan = holidayname.ToUpper().Trim();
                                    var checkholiday = publicHolidayData.Where(x => x.fld_Negeri == state.fldOptConfValue && x.fld_TarikhCuti == HolidayDate).FirstOrDefault();
                                    if (checkholiday == null)
                                    {
                                        HolidayList.Add(new ModelsCorporate.tbl_CutiUmum()
                                        {
                                            fld_TarikhCuti = HolidayDate,
                                            fld_KeteranganCuti = keterangan,
                                            fld_NegaraID = NegaraID,
                                            fld_SyarikatID = SyarikatID,
                                            fld_Deleted = false,
                                            fld_Tahun = shortYear,
                                            fld_Negeri = state.fldOptConfValue
                                        });
                                    }
                                }
                            }
                            if (HolidayList.Count() > 0)
                            {
                                db.tbl_CutiUmum.AddRange(HolidayList);
                                db.SaveChanges();
                            }
                        }
                    }
                    else
                    {
                        foreach (var state in stateData)
                        {
                            page = WebClient.DownloadString("https://www.officeholidays.com/countries/malaysia/" + state.fldOptConfFlag2.ToLower() + "/" + cutiUmumViewModelGenerate.fld_Year);
                            doc.LoadHtml(page);
                            holidays = doc.DocumentNode.SelectSingleNode("//table[@class='country-table']")
                                .Descendants("tr")
                                .Skip(1)
                                .Where(tr => tr.Elements("td").Count() > 1)
                                .Select(tr => tr.Elements("td").Select(td => td.InnerText.Trim()).ToList())
                                .ToList();

                            string getdate = "";
                            foreach (var holiday in holidays)
                            {
                                var holidayname = HttpUtility.HtmlDecode(holiday[2].Trim());
                                if (holidayname.ToUpper().Trim() == "MOTHER'S DAY" ||
                                    holidayname.ToUpper().Trim() == "FATHER'S DAY")
                                {

                                }
                                else
                                {
                                    getdate = holiday[1].ToString() + ", " + cutiUmumViewModelGenerate.fld_Year;
                                    HolidayDate = DateTime.ParseExact(getdate, "MMM d, yyyy", CultureInfo.InvariantCulture);
                                    keterangan = holidayname.ToUpper().Trim();
                                    HolidayList.Add(new ModelsCorporate.tbl_CutiUmum()
                                    {
                                        fld_TarikhCuti = HolidayDate,
                                        fld_KeteranganCuti = keterangan,
                                        fld_NegaraID = NegaraID,
                                        fld_SyarikatID = SyarikatID,
                                        fld_Deleted = false,
                                        fld_Tahun = shortYear,
                                        fld_Negeri = state.fldOptConfValue
                                    });
                                }
                            }
                        }

                        if (HolidayList.Count() > 0)
                        {
                            db.tbl_CutiUmum.AddRange(HolidayList);
                            db.SaveChanges();
                        }
                    }
                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = "Maklumat Cuti Telah Dijana dan Dikemaskini", //sepul tukar notis 19/02/2021
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "pullPublicHolidayMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PullPublicHolidayMaintenance",
                        controller = "Maintenance",
                        //paramName = "YearList",
                        //paramValue = cutiUmumViewModelGenerate.fld_Year,
                    });
                }
                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }
            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }
        }
        //PROSES 2 CUTI MASTER INDEX
        public ActionResult GeneratePublicHolidayMasterMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            ViewBag.YearList = yearlist;

            return View();
        }

        //PROSES 2 CUTI MASTER CARIAN
        public ActionResult _GeneratePublicHolidayMasterMaintenance(int? YearList, int page = 1, string sort = "fld_TarikhCuti", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()))
            {
                message = GlobalResCorp.msgChooseAllocatedPublicHoliday;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CutiUmumMaster>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publiHolidayData = db.tbl_CutiUmumMaster
                .Where(x => x.fld_Tahun == YearList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_TarikhCuti);

            records.Content = publiHolidayData
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = publiHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publiHolidayData
                .Count();

            return View(records);
        }
        //PROSES 2 CUTI MASTER PAPAR TAHUN
        public ActionResult _GeneratePublicHolidayMasterMaintenanceGenerate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsCorporate.tbl_CutiUmumMasterViewModelGenerate cutiUmumMasterViewModelGenerate = new tbl_CutiUmumMasterViewModelGenerate();

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.YearList = yearlist;

            cutiUmumMasterViewModelGenerate.fld_Tahun = Convert.ToInt16(timezone.gettimezone().Year);

            return PartialView(cutiUmumMasterViewModelGenerate);
        }
        //PROSES 2 CUTI MASTER
        [HttpPost]
        [ValidateAntiForgeryToken]
        //PROSES 2 CUTI MASTER GENERATE
        public ActionResult _GeneratePublicHolidayMasterMaintenanceGenerate(ModelsCorporate.tbl_CutiUmumMasterViewModelGenerate cutiUmumMasterViewModelGenerate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    List<tbl_CutiUmumMaster> cutiUmumMaster = new List<tbl_CutiUmumMaster>();

                    //sepul tambah kalau dah pernah generate x boleh jana 22/02/2021
                    var publicHolidayData = db.tbl_CutiUmumMaster.Count(x =>
                        x.fld_Tahun == cutiUmumMasterViewModelGenerate.fld_Tahun && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);
                    if (publicHolidayData > 0)
                    {
                        return Json(new
                        {
                            success = false,
                            msg = GlobalResCorp.msgAlert5,
                            status = "danger",
                            checkingdata = "0"
                        });
                    }

                    else
                    {   //sepul ubah sampai sini
                        var holidayData = db.tbl_CutiUmum.Where(x =>
                            x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Tahun == cutiUmumMasterViewModelGenerate.fld_Tahun &&
                            x.fld_Deleted == false)
                        .Select(s => new { s.fld_KeteranganCuti, s.fld_TarikhCuti }).Distinct().ToList();

                        foreach (var holiday in holidayData)
                        {
                            cutiUmumMaster.Add(new ModelsCorporate.tbl_CutiUmumMaster
                            {
                                fld_KeteranganCuti = holiday.fld_KeteranganCuti,
                                fld_TarikhCuti = holiday.fld_TarikhCuti,
                                fld_Tahun = cutiUmumMasterViewModelGenerate.fld_Tahun,
                                fld_NegaraID = NegaraID,
                                fld_SyarikatID = SyarikatID,
                                fld_Deleted = false,
                            });
                        }

                        if (cutiUmumMaster.Count > 0)
                        {
                            db.tbl_CutiUmumMaster.AddRange(cutiUmumMaster);
                            db.SaveChanges();
                        }

                        string appname = Request.ApplicationPath;
                        string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                        var lang = Request.RequestContext.RouteData.Values["lang"];

                        if (appname != "/")
                        {
                            domain = domain + appname;
                        }

                        return Json(new
                        {
                            success = true,
                            msg = GlobalResCorp.lblGeneratePublicHolidayMasterMaintenanceMsg1,
                            status = "success",
                            checkingdata = "0",
                            method = "2",
                            div = "generatePublicHolidayMasterMaintenanceDetails",
                            rootUrl = domain,
                            action = "_GeneratePublicHolidayMasterMaintenance",
                            controller = "Maintenance",
                            paramName = "YearList",
                            paramValue = cutiUmumMasterViewModelGenerate.fld_Tahun,
                        });
                    }
                } //sepul tambah braket ni 19/02/2021

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }
        //PROSES 3 MAPPING ID CUTI - INDEX
        public ActionResult MapPublicHolidayMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            ViewBag.YearList = yearlist;

            ViewBag.NegeriList = new SelectList(
                db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "negeri" && x.fldDeleted == false &&
                                                   x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID)
                    .OrderBy(o => o.fldOptConfDesc),
                "fldOptConfValue", "fldOptConfDesc");

            return View();
        }
        //PROSES 3 MAPPING ID CUTI - CARIAN
        public ActionResult _MapPublicHolidayMaintenance(int? YearList, string NegeriList, int page = 1, string sort = "fld_TarikhCuti", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()))
            {
                message = GlobalResCorp.msgChooseAllocatedPublicHoliday;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.tbl_CutiUmum>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publiHolidayData = db.tbl_CutiUmum
                .Where(x => x.fld_Tahun == YearList && x.fld_Negeri == NegeriList && x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_TarikhCuti);

            records.Content = publiHolidayData
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = publiHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publiHolidayData
                .Count();

            return View(records);
        }
        //PROSES 3 MAPPING ID  CUTI - TAHUN
        public ActionResult _MapPublicHolidayMaintenanceMap()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsCorporate.tbl_CutiUmumMasterViewModelGenerate cutiUmumMasterViewModelGenerate = new tbl_CutiUmumMasterViewModelGenerate();

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.YearList = yearlist;

            cutiUmumMasterViewModelGenerate.fld_Tahun = Convert.ToInt16(timezone.gettimezone().Year);

            return PartialView(cutiUmumMasterViewModelGenerate);
        }
        //PROSES 3 MAPPING ID  CUTI - GENERATE
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _MapPublicHolidayMaintenanceMap(ModelsCorporate.tbl_CutiUmumMasterViewModelGenerate cutiUmumMasterViewModelGenerate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var holidayData = db.tbl_CutiUmum.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Tahun == cutiUmumMasterViewModelGenerate.fld_Tahun &&
                        x.fld_Deleted == false);

                    var holidayMasterData = db.tbl_CutiUmumMaster.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Tahun == cutiUmumMasterViewModelGenerate.fld_Tahun &&
                        x.fld_Deleted == false);

                    foreach (var holidayMaster in holidayMasterData)
                    {
                        foreach (var holiday in holidayData)
                        {
                            if (holidayMaster.fld_KeteranganCuti == holiday.fld_KeteranganCuti)
                            {
                                holiday.fld_CutiUmumMasterID = holidayMaster.fld_CutiUmumMasterID;
                            }
                        }
                    }

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.lblGeneratePublicHolidayMasterMaintenanceMsg1,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "mapPublicHolidayMaintenanceDetails",
                        rootUrl = domain,
                        action = "_MapPublicHolidayMaintenance",
                        controller = "Maintenance",
                        paramName = "YearList",
                        paramValue = cutiUmumMasterViewModelGenerate.fld_Tahun,
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }
        //SINI ADALAH PROSES KE-4 UNTUK JANA CUTI - INDEX
        public ActionResult PopulatePublicHolidayEligibilityMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                if (i == timezone.gettimezone().Year)
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString(), Selected = true });
                }
                else
                {
                    yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
                }
            }
            ViewBag.YearList = yearlist;

            List<SelectListItem> wilayahList = new List<SelectListItem>();
            wilayahList = new SelectList(
                db.tbl_Wilayah
                    .Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false).OrderBy(o => o.fld_WlyhName)
                    .Select(
                        s => new SelectListItem { Value = s.fld_ID.ToString(), Text = s.fld_WlyhName }), "Value", "Text").ToList();
            wilayahList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.WilayahList = wilayahList;

            List<SelectListItem> ladangList = new List<SelectListItem>();

            ladangList.Insert(0, new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" });

            ViewBag.LadangList = ladangList;

            return View();
        }
        //SINI ADALAH PROSES KE-4 UNTUK JANA CUTI
        public ActionResult _PopulatePublicHolidayEligibilityMaintenance(int? YearList, int? WilayahList, int? LadangList, int page = 1, string sort = "fld_TarikhCuti", string sortdir = "ASC")
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var message = "";
            if (String.IsNullOrEmpty(YearList.ToString()))
            {
                message = GlobalResCorp.msgChooseAllocatedPublicHoliday;
                ViewBag.Message = message;
            }

            else
            {
                message = GlobalResCorp.msgErrorSearch;
                ViewBag.Message = message;
            }

            int pageSize = int.Parse(GetConfig.GetData("paging"));
            var records = new PagedList<ModelsCorporate.vw_CutiUmumKelayakanDetails>();
            int role = GetIdentity.RoleID(getuserid).Value;

            var publiHolidayData = db.vw_CutiUmumKelayakanDetails
                .Where(x => x.fld_LadangID == LadangList && x.fld_WilayahID == WilayahList && x.fld_Tahun == YearList &&
                            x.fld_NegaraID == NegaraID &&
                            x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_TarikhCuti);

            records.Content = publiHolidayData
                .Skip((page - 1) * pageSize)
                .Take(pageSize)
                .ToList();

            records.TotalRecords = publiHolidayData
                .Count();

            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = pageSize;
            ViewBag.TotalRecord = publiHolidayData
                .Count();

            return View(records);
        }
        //SINI ADALAH PROSES KE-4 UNTUK JANA CUTI
        public ActionResult _PopulatePublicHolidayEligibilityMaintenanceGenerate()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ModelsCorporate.vw_CutiUmumKelayakanDetailsGenerate cutiUmumKelayakanDetailsGenerate = new vw_CutiUmumKelayakanDetailsGenerate();

            int drpyear = 0;
            int drprangeyear = 0;
            int month = timezone.gettimezone().Month;

            drpyear = timezone.gettimezone().Year - int.Parse(GetConfig.GetData("yeardisplay")) + 1;
            drprangeyear = timezone.gettimezone().Year + 1;

            var yearlist = new List<SelectListItem>();
            for (var i = drpyear; i <= drprangeyear; i++)
            {
                yearlist.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.YearList = yearlist;

            cutiUmumKelayakanDetailsGenerate.fld_Tahun = Convert.ToInt16(timezone.gettimezone().Year);

            return PartialView(cutiUmumKelayakanDetailsGenerate);
        }
        //SINI ADALAH PROSES KE-4 UNTUK JANA CUTI - GENERATE
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult _PopulatePublicHolidayEligibilityMaintenanceGenerate(ModelsCorporate.vw_CutiUmumKelayakanDetailsGenerate cutiUmumKelayakanDetailsGenerate)
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                if (ModelState.IsValid)
                {
                    var ladangData = db.tbl_Ladang.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false && x.fld_KodNegeri != "0").OrderBy(o => o.fld_KodNegeri);

                    var holidayData = db.tbl_CutiUmum.Where(x =>
                        x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Tahun == cutiUmumKelayakanDetailsGenerate.fld_Tahun &&
                        x.fld_Deleted == false).OrderBy(o => o.fld_Negeri);

                    List<tbl_CutiUmumKelayakan> cutiUmumKelayakanList = new List<tbl_CutiUmumKelayakan>();

                    foreach (var ladang in ladangData)
                    {
                        foreach (var holiday in holidayData)
                        {
                            if (ladang.fld_KodNegeri == holiday.fld_Negeri)
                            {
                                var checkExistingPublicHolidayEligibility =
                                    db.tbl_CutiUmumKelayakan.SingleOrDefault(x =>
                                        x.fld_CutiMasterID == holiday.fld_CutiUmumMasterID &&
                                        x.fld_LadangID == ladang.fld_ID);

                                if (checkExistingPublicHolidayEligibility == null)
                                {
                                    cutiUmumKelayakanList.Add(new ModelsCorporate.tbl_CutiUmumKelayakan
                                    {
                                        fld_CutiMasterID = holiday.fld_CutiUmumMasterID,
                                        fld_NegaraID = NegaraID,
                                        fld_SyarikatID = SyarikatID,
                                        fld_WilayahID = ladang.fld_WlyhID,
                                        fld_LadangID = ladang.fld_ID,
                                        fld_Deleted = false
                                    });
                                }
                            }
                        }
                    }

                    db.tbl_CutiUmumKelayakan.AddRange(cutiUmumKelayakanList);
                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.lblPopulatePublicHolidayMaintenanceMsg1,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "populatePublicHolidayEligibilityMaintenanceDetails",
                        rootUrl = domain,
                        action = "_PopulatePublicHolidayEligibilityMaintenance",
                        controller = "Maintenance",
                        paramName = "YearList",
                        paramValue = cutiUmumKelayakanDetailsGenerate.fld_Tahun,
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    //sepul comment 24/02/2021
                    //msg = GlobalResCorp.msgError,
                    //sepul tambah 24/02/2021
                    msg = "Maklumat Telah Dijana dan Dikemaskini.",
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        //fatin added - 3/5/2023
        public ActionResult PayrateRubberMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult PayrateRubberDetail(int page = 1, string sort = "fld_HasilLower", string sortdir = "ASC")
        {
            ViewBag.Maintenance = "class = active";
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            MVC_SYSTEM_Viewing dbview = new MVC_SYSTEM_Viewing();

            var records = new PagedList<ViewingModels.tbl_UpahGetah>();
            int pageSize = int.Parse(GetConfig.GetData("paging"));
            int role = GetIdentity.RoleID(getuserid).Value;

            var rubberData = dbview.tbl_UpahGetah.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID);

            records.Content = rubberData.OrderBy(sort + " " + sortdir)
                    .Skip((page - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();

            records.TotalRecords = rubberData
                .Count();

            ViewBag.RowCount = 0;


            records.CurrentPage = page;
            records.PageSize = pageSize;
            ViewBag.RoleID = role;
            ViewBag.pageSize = 1;

            return View(records);

        }

        public ActionResult PayrateRubberCreate()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> Catitan = new List<SelectListItem>();

            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            Catitan.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_Catitan = Catitan;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateRubberCreate(ModelsCorporate.tbl_UpahGetah tbl_UpahGetah)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            try
            {
                var checkdata = db.tbl_UpahGetah.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false && x.fld_HasilLower == tbl_UpahGetah.fld_HasilLower && x.fld_HasilUpper == tbl_UpahGetah.fld_HasilUpper).FirstOrDefault();
                if (checkdata == null)
                {
                    tbl_UpahGetah.fld_Deleted = false;
                    tbl_UpahGetah.fld_NegaraID = NegaraID;
                    tbl_UpahGetah.fld_SyarikatID = SyarikatID;
                    db.tbl_UpahGetah.Add(tbl_UpahGetah);
                    db.SaveChanges();
                    db.Dispose();
                    //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "payRateRubberMaintenanceDetails",
                        rootUrl = domain,
                        action = "PayrateRubberDetail",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }

            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PayrateRubberUpdate(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("PayrateRubberMaintenance");
            }
            ModelsCorporate.tbl_UpahGetah tbl_UpahGetah = db.tbl_UpahGetah.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_UpahGetah == null)
            {
                return RedirectToAction("PayrateRubberMaintenance");
            }

            List<SelectListItem> Catitan = new List<SelectListItem>();

            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahGetah.fld_Catitan).ToList();
            Catitan.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_Catitan = Catitan;
            db.Dispose();
            return PartialView(tbl_UpahGetah);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateRubberUpdate(ModelsCorporate.tbl_UpahGetah tbl_UpahGetah)
        {

            try
            {
                if (ModelState.IsValid)
                {

                    var getdata = db.tbl_UpahGetah.Where(w => w.fld_ID == tbl_UpahGetah.fld_ID).FirstOrDefault();

                    getdata.fld_Kadar = tbl_UpahGetah.fld_Kadar;
                    getdata.fld_Catitan = tbl_UpahGetah.fld_Catitan;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "payRateRubberMaintenanceDetails",
                        rootUrl = domain,
                        action = "PayrateRubberDetail",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult PayrateRubberDelete(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("PayrateRubberMaintenance");
            }
            ModelsCorporate.tbl_UpahGetah tbl_UpahGetah = db.tbl_UpahGetah.Where(w => w.fld_ID == id).FirstOrDefault();

            if (tbl_UpahGetah == null)
            {
                return RedirectToAction("PayrateRubberMaintenance");
            }

            List<SelectListItem> Catitan = new List<SelectListItem>();

            Catitan = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "insentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_UpahGetah.fld_Catitan).ToList();
            Catitan.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_Catitan = Catitan;
            db.Dispose();
            return PartialView(tbl_UpahGetah);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult PayrateRubberDelete(ModelsCorporate.tbl_UpahGetah tbl_UpahGetah)
        {

            try
            {
                if (tbl_UpahGetah == null)
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    var getdata = db.tbl_UpahGetah.Where(x => x.fld_ID == tbl_UpahGetah.fld_ID && x.fld_NegaraID == tbl_UpahGetah.fld_NegaraID && x.fld_SyarikatID == tbl_UpahGetah.fld_SyarikatID).FirstOrDefault();

                    bool status = true;

                    var message = "";
                    if (getdata.fld_Deleted == false)
                    {
                        status = true;
                        message = GlobalResCorp.msgDelete2;
                    }

                    else
                    {
                        status = false;
                        message = GlobalResCorp.msgUndelete;
                    }

                    getdata.fld_Deleted = status;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = message,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "payRateRubberMaintenanceDetails",
                        rootUrl = domain,
                        action = "PayrateRubberDetail",
                        controller = "Maintenance"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }

        }

        public ActionResult HrgGetahSMRMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            return View();
        }

        public ActionResult HrgGetahSMRDetail(int page = 1, string sort = "fld_HargaGetah_Lower", string sortdir = "ASC")
        {
            ViewBag.Maintenance = "class = active";
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            var resultreport = db.tbl_HargaGetahSMR.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_HargaGetah_Lower);
            return View(resultreport);

        }

        public ActionResult HrgGetahSMRCreate()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult HrgGetahSMRCreate(ModelsCorporate.tbl_HargaGetahSMR tbl_HargaGetahSMR)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var checkdata = db.tbl_HargaGetahSMR.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false && x.fld_HargaGetah_Lower == tbl_HargaGetahSMR.fld_HargaGetah_Lower && x.fld_HargaGetah_Upper == tbl_HargaGetahSMR.fld_HargaGetah_Upper).FirstOrDefault();
                if (checkdata == null)
                {
                    tbl_HargaGetahSMR.fld_Deleted = false;
                    tbl_HargaGetahSMR.fld_NegaraID = NegaraID;
                    tbl_HargaGetahSMR.fld_SyarikatID = SyarikatID;
                    db.tbl_HargaGetahSMR.Add(tbl_HargaGetahSMR);
                    db.SaveChanges();
                    db.Dispose();
                    //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "hrgGetahSMRMaintenanceDetails",
                        rootUrl = domain,
                        action = "HrgGetahSMRDetail",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }

            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult HrgGetahSMRUpdate(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("HrgGetahSMRMaintenance");
            }
            ModelsCorporate.tbl_HargaGetahSMR tbl_HargaGetahSMR = db.tbl_HargaGetahSMR.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_HargaGetahSMR == null)
            {
                return RedirectToAction("HrgGetahSMRMaintenance");
            }


            db.Dispose();
            return PartialView(tbl_HargaGetahSMR);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult HrgGetahSMRUpdate(ModelsCorporate.tbl_HargaGetahSMR tbl_HargaGetahSMR)
        {

            try
            {
                if (ModelState.IsValid)
                {

                    var getdata = db.tbl_HargaGetahSMR.Where(w => w.fld_ID == tbl_HargaGetahSMR.fld_ID).FirstOrDefault();

                    getdata.fld_Upah_Tahun12 = tbl_HargaGetahSMR.fld_Upah_Tahun12;
                    getdata.fld_Upah_Tahun322 = tbl_HargaGetahSMR.fld_Upah_Tahun322;
                    getdata.fld_HargaGetah_Lower = tbl_HargaGetahSMR.fld_HargaGetah_Lower;
                    getdata.fld_HargaGetah_Upper = tbl_HargaGetahSMR.fld_HargaGetah_Upper;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "hrgGetahSMRMaintenanceDetails",
                        rootUrl = domain,
                        action = "HrgGetahSMRDetail",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult HrgGetahSMRDelete(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("HrgGetahSMRMaintenance");
            }
            ModelsCorporate.tbl_HargaGetahSMR tbl_HargaGetahSMR = db.tbl_HargaGetahSMR.Where(w => w.fld_ID == id).FirstOrDefault();

            if (tbl_HargaGetahSMR == null)
            {
                return RedirectToAction("HrgGetahSMRMaintenance");
            }

            db.Dispose();
            return PartialView(tbl_HargaGetahSMR);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult HrgGetahSMRDelete(ModelsCorporate.tbl_HargaGetahSMR tbl_HargaGetahSMR)
        {

            try
            {
                if (tbl_HargaGetahSMR == null)
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    var getdata = db.tbl_HargaGetahSMR.Where(x => x.fld_ID == tbl_HargaGetahSMR.fld_ID && x.fld_NegaraID == tbl_HargaGetahSMR.fld_NegaraID && x.fld_SyarikatID == tbl_HargaGetahSMR.fld_SyarikatID).FirstOrDefault();

                    bool status = true;

                    var message = "";
                    if (getdata.fld_Deleted == false)
                    {
                        status = true;
                        message = GlobalResCorp.msgDelete2;
                    }

                    else
                    {
                        status = false;
                        message = GlobalResCorp.msgUndelete;
                    }

                    getdata.fld_Deleted = status;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = message,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "hrgGetahSMRMaintenanceDetails",
                        rootUrl = domain,
                        action = "HrgGetahSMRDetail",
                        controller = "Maintenance"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }

        }

        public ActionResult ProduktivitiGetahMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> tahuntorehlist = new List<SelectListItem>();
            tahuntorehlist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "tahunTorehPrdktvt" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            tahuntorehlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblAll, Value = "0" }));
            ViewBag.TahunTorehList = tahuntorehlist;

            return View();
        }

        public ActionResult ProduktivitiGetahDetail(int? TahunTorehList, int page = 1, string sort = "fld_PrdktvtCuplumpLower", string sortdir = "ASC")
        {
            ViewBag.Maintenance = "class = active";
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (String.IsNullOrEmpty(TahunTorehList.ToString()) || TahunTorehList.ToString() == "0")
            {
                var resultreport = db.tbl_ProduktivitiGetah.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_PrdktvtCuplumpLower);
                return View(resultreport);

            }
            else if (TahunTorehList != 0)
            {
                var resultreport = db.tbl_ProduktivitiGetah.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_TahunToreh == TahunTorehList).OrderBy(o => o.fld_PrdktvtCuplumpLower);
                return View(resultreport);

            }
            else
            {
                var resultreport = db.tbl_ProduktivitiGetah.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_PrdktvtCuplumpLower);
                return View(resultreport);

            }

        }

        public ActionResult ProduktivitiGetahCreate()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> TahunToreh = new List<SelectListItem>();

            TahunToreh = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "tahunTorehPrdktvt" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            TahunToreh.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));


            ViewBag.fld_TahunToreh = TahunToreh;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult ProduktivitiGetahCreate(ModelsCorporate.tbl_ProduktivitiGetah tbl_ProduktivitiGetah)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var checkdata = db.tbl_ProduktivitiGetah.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false && x.fld_PrdktvtCuplumpLower == tbl_ProduktivitiGetah.fld_PrdktvtCuplumpLower && x.fld_PrdktvtCuplumpUpper == tbl_ProduktivitiGetah.fld_PrdktvtCuplumpUpper).FirstOrDefault();
                if (checkdata == null)
                {
                    tbl_ProduktivitiGetah.fld_Deleted = false;
                    tbl_ProduktivitiGetah.fld_NegaraID = NegaraID;
                    tbl_ProduktivitiGetah.fld_SyarikatID = SyarikatID;
                    db.tbl_ProduktivitiGetah.Add(tbl_ProduktivitiGetah);
                    db.SaveChanges();
                    db.Dispose();
                    //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "produktivitiGetahMaintenanceDetails",
                        rootUrl = domain,
                        action = "ProduktivitiGetahDetail",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }

            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult ProduktivitiGetahUpdate(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("ProduktivitiGetahMaintenance");
            }
            ModelsCorporate.tbl_ProduktivitiGetah tbl_ProduktivitiGetah = db.tbl_ProduktivitiGetah.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_ProduktivitiGetah == null)
            {
                return RedirectToAction("ProduktivitiGetahMaintenance");
            }

            List<SelectListItem> TahunToreh = new List<SelectListItem>();

            TahunToreh = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "tahunTorehPrdktvt" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_ProduktivitiGetah.fld_TahunToreh).ToList();
            TahunToreh.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_TahunToreh = TahunToreh;

            db.Dispose();
            return PartialView(tbl_ProduktivitiGetah);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult ProduktivitiGetahUpdate(ModelsCorporate.tbl_ProduktivitiGetah tbl_ProduktivitiGetah)
        {

            try
            {
                if (ModelState.IsValid)
                {

                    var getdata = db.tbl_ProduktivitiGetah.Where(w => w.fld_ID == tbl_ProduktivitiGetah.fld_ID).FirstOrDefault();

                    getdata.fld_KadarUpah = tbl_ProduktivitiGetah.fld_KadarUpah;
                    getdata.fld_InsentifKuantiti = tbl_ProduktivitiGetah.fld_InsentifKuantiti;
                    getdata.fld_PrdktvtCuplumpLower = tbl_ProduktivitiGetah.fld_PrdktvtCuplumpLower;
                    getdata.fld_PrdktvtCuplumpUpper = tbl_ProduktivitiGetah.fld_PrdktvtCuplumpUpper;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "produktivitiGetahMaintenanceDetails",
                        rootUrl = domain,
                        action = "ProduktivitiGetahDetail",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult ProduktivitiGetahDelete(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("ProduktivitiGetahMaintenance");
            }
            ModelsCorporate.tbl_ProduktivitiGetah tbl_ProduktivitiGetah = db.tbl_ProduktivitiGetah.Where(w => w.fld_ID == id).FirstOrDefault();

            if (tbl_ProduktivitiGetah == null)
            {
                return RedirectToAction("ProduktivitiGetahMaintenance");
            }

            db.Dispose();
            return PartialView(tbl_ProduktivitiGetah);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult ProduktivitiGetahDelete(ModelsCorporate.tbl_ProduktivitiGetah tbl_ProduktivitiGetah)
        {

            try
            {
                if (tbl_ProduktivitiGetah == null)
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    var getdata = db.tbl_ProduktivitiGetah.Where(x => x.fld_ID == tbl_ProduktivitiGetah.fld_ID && x.fld_NegaraID == tbl_ProduktivitiGetah.fld_NegaraID && x.fld_SyarikatID == tbl_ProduktivitiGetah.fld_SyarikatID).FirstOrDefault();

                    bool status = true;

                    var message = "";
                    if (getdata.fld_Deleted == false)
                    {
                        status = true;
                        message = GlobalResCorp.msgDelete2;
                    }

                    else
                    {
                        status = false;
                        message = GlobalResCorp.msgUndelete;
                    }

                    getdata.fld_Deleted = status;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = message,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "produktivitiGetahMaintenanceDetails",
                        rootUrl = domain,
                        action = "ProduktivitiGetahDetail",
                        controller = "Maintenance"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }

        }

        public ActionResult InsentifKGKMaintenance()
        {
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            string host, catalog, user, pass = "";
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            ViewBag.Maintenance = "class = active";

            List<SelectListItem> tahuntorehlist = new List<SelectListItem>();
            tahuntorehlist = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "tahunTorehInsentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            //tahuntorehlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));
            tahuntorehlist.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblAll, Value = "0" }));
            ViewBag.TahunTorehList = tahuntorehlist;

            return View();
        }

        public ActionResult InsentifKGKDetail(int? TahunTorehList, int page = 1, string sort = "fld_KGKLower", string sortdir = "ASC")
        {
            GetIdentity GetIdentity = new GetIdentity();
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);


            if (String.IsNullOrEmpty(TahunTorehList.ToString()) || TahunTorehList.ToString() == "0")
            {

                var resultreport = db.tbl_InsentifKGK.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_KGKLower);
                return View(resultreport);
            }
            else if (TahunTorehList != 0)
            {

                var resultreport = db.tbl_InsentifKGK.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_TahunToreh == TahunTorehList).OrderBy(o => o.fld_KGKLower);
                return View(resultreport);
            }
            else
            {
                var resultreport = db.tbl_InsentifKGK.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fld_KGKLower);
                return View(resultreport);
            }

        }

        public ActionResult InsentifKGKCreate()
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            List<SelectListItem> TahunToreh = new List<SelectListItem>();

            TahunToreh = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "tahunTorehInsentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text").ToList();
            TahunToreh.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));


            ViewBag.fld_TahunToreh = TahunToreh;
            db.Dispose();
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult InsentifKGKCreate(ModelsCorporate.tbl_InsentifKGK tbl_InsentifKGK)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            try
            {
                var checkdata = db.tbl_InsentifKGK.Where(x => x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID && x.fld_Deleted == false && x.fld_KGKLower == tbl_InsentifKGK.fld_KGKLower && x.fld_KGKUpper == tbl_InsentifKGK.fld_KGKUpper).FirstOrDefault();
                if (checkdata == null)
                {
                    tbl_InsentifKGK.fld_Deleted = false;
                    tbl_InsentifKGK.fld_NegaraID = NegaraID;
                    tbl_InsentifKGK.fld_SyarikatID = SyarikatID;
                    db.tbl_InsentifKGK.Add(tbl_InsentifKGK);
                    db.SaveChanges();
                    db.Dispose();
                    //var getid = db.tbl_Ladang.Where(w => w.fld_ID == tbl_Ladang.fld_ID).FirstOrDefault();
                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgAdd,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "insentifKGKMaintenanceDetails",
                        rootUrl = domain,
                        action = "InsentifKGKDetail",
                        controller = "Maintenance"
                    });
                }
                else
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDataExist, status = "warning", checkingdata = "1" });
                }

            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult InsentifKGKUpdate(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("InsentifKGKMaintenance");
            }
            ModelsCorporate.tbl_InsentifKGK tbl_InsentifKGK = db.tbl_InsentifKGK.Where(w => w.fld_ID == id).FirstOrDefault();
            if (tbl_InsentifKGK == null)
            {
                return RedirectToAction("InsentifKGKMaintenance");
            }

            List<SelectListItem> TahunToreh = new List<SelectListItem>();

            TahunToreh = new SelectList(db.tblOptionConfigsWebs.Where(x => x.fldOptConfFlag1 == "tahunTorehInsentif" && x.fldDeleted == false && x.fld_NegaraID == NegaraID && x.fld_SyarikatID == SyarikatID).OrderBy(o => o.fldOptConfID).Select(s => new SelectListItem { Value = s.fldOptConfValue, Text = s.fldOptConfDesc }), "Value", "Text", tbl_InsentifKGK.fld_TahunToreh).ToList();
            TahunToreh.Insert(0, (new SelectListItem { Text = GlobalResCorp.lblChoose, Value = "0" }));

            ViewBag.fld_TahunToreh = TahunToreh;

            db.Dispose();
            return PartialView(tbl_InsentifKGK);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult InsentifKGKUpdate(ModelsCorporate.tbl_InsentifKGK tbl_InsentifKGK)
        {

            try
            {
                if (ModelState.IsValid)
                {

                    var getdata = db.tbl_InsentifKGK.Where(w => w.fld_ID == tbl_InsentifKGK.fld_ID).FirstOrDefault();

                    getdata.fld_KadarUpah = tbl_InsentifKGK.fld_KadarUpah;
                    getdata.fld_KGKLower = tbl_InsentifKGK.fld_KGKLower;
                    getdata.fld_KGKUpper = tbl_InsentifKGK.fld_KGKUpper;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = GlobalResCorp.msgUpdate,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "insentifKGKMaintenanceDetails",
                        rootUrl = domain,
                        action = "InsentifKGKDetail",
                        controller = "Maintenance"
                    });
                }

                else
                {
                    return Json(new
                    {
                        success = false,
                        msg = GlobalResCorp.msgErrorData,
                        status = "danger",
                        checkingdata = "0"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }
        }

        public ActionResult InsentifKGKDelete(int? id)
        {
            int? getuserid = GetIdentity.ID(User.Identity.Name);
            int? NegaraID, SyarikatID, WilayahID, LadangID = 0;
            GetNSWL.GetData(out NegaraID, out SyarikatID, out WilayahID, out LadangID, getuserid, User.Identity.Name);

            if (id == null)
            {
                return RedirectToAction("InsentifKGKMaintenance");
            }
            ModelsCorporate.tbl_InsentifKGK tbl_InsentifKGK = db.tbl_InsentifKGK.Where(w => w.fld_ID == id).FirstOrDefault();

            if (tbl_InsentifKGK == null)
            {
                return RedirectToAction("InsentifKGKMaintenance");
            }

            db.Dispose();
            return PartialView(tbl_InsentifKGK);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult InsentifKGKDelete(ModelsCorporate.tbl_InsentifKGK tbl_InsentifKGK)
        {

            try
            {
                if (tbl_InsentifKGK == null)
                {
                    return Json(new { success = true, msg = GlobalResCorp.msgDelete2, status = "success", checkingdata = "0", method = "1", getid = "", data1 = "", data2 = "" });
                }
                else
                {
                    var getdata = db.tbl_InsentifKGK.Where(x => x.fld_ID == tbl_InsentifKGK.fld_ID && x.fld_NegaraID == tbl_InsentifKGK.fld_NegaraID && x.fld_SyarikatID == tbl_InsentifKGK.fld_SyarikatID).FirstOrDefault();

                    bool status = true;

                    var message = "";
                    if (getdata.fld_Deleted == false)
                    {
                        status = true;
                        message = GlobalResCorp.msgDelete2;
                    }

                    else
                    {
                        status = false;
                        message = GlobalResCorp.msgUndelete;
                    }

                    getdata.fld_Deleted = status;

                    db.SaveChanges();

                    string appname = Request.ApplicationPath;
                    string domain = Request.Url.GetLeftPart(UriPartial.Authority);
                    var lang = Request.RequestContext.RouteData.Values["lang"];

                    if (appname != "/")
                    {
                        domain = domain + appname;
                    }

                    return Json(new
                    {
                        success = true,
                        msg = message,
                        status = "success",
                        checkingdata = "0",
                        method = "2",
                        div = "insentifKGKMaintenanceDetails",
                        rootUrl = domain,
                        action = "InsentifKGKDetail",
                        controller = "Maintenance"
                    });
                }
            }

            catch (Exception ex)
            {
                geterror.catcherro(ex.Message, ex.StackTrace, ex.Source, ex.TargetSite.ToString());
                return Json(new
                {
                    success = false,
                    msg = GlobalResCorp.msgError,
                    status = "danger",
                    checkingdata = "0"
                });
            }

            finally
            {
                db.Dispose();
            }

        }
        //end
    }
}
