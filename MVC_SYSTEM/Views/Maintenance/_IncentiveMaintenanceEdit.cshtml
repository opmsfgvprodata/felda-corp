@using MVC_SYSTEM.Class
@model MVC_SYSTEM.ModelsCorporate.tbl_JenisInsentif

@{
    @Scripts.Render("~/bundles/jqueryval")
    var minValue = Model.fld_MinValue != null || Model.fld_MinValue == 0 ? Model.fld_MinValue : 0;
    var maxValue = Model.fld_MaxValue != null || Model.fld_MaxValue == 0 ? Model.fld_MaxValue : 0;
    var fixedValue = Model.fld_FixedValue != null || Model.fld_FixedValue == 0 ? Model.fld_FixedValue : 0;
    var dailyValue = Model.fld_DailyFixedValue != null || Model.fld_DailyFixedValue == 0 ? Model.fld_DailyFixedValue : 0;

}

<section class="content-wrapper main-content clear-fix">

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 class="modal-title">@GlobalResCorp.lblIncentiveUpdate</h3>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="panel panel-primary">
                    <div class="panel-heading">@GlobalResCorp.lblIncentiveInfo</div>
                    <div class="panel-body">
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveCode:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.fld_KodInsentif, htmlAttributes: new { @class = "form-control col-sm-2", @readonly = "true" })
                                @Html.ValidationMessageFor(model => model.fld_KodInsentif, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveKodAktvt:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.fld_KodAktvt, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                                @Html.ValidationMessageFor(model => model.fld_KodAktvt, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveName</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.fld_Keterangan, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fld_Keterangan, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*commented by fatin - 07/04/2023*@
                        @*<div class="form-group">
            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveKodGL:</label>
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.fld_KodGL, new SelectList(ViewBag.GLList, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fld_KodGL, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveIsKwspSocso:</label>
                            <div class="col-sm-2">
                                @Html.DropDownListFor(model => model.fld_AdaCaruman, new SelectList(ViewBag.OptionList, "Value", "Text", Model.fld_AdaCaruman), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fld_AdaCaruman, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveIsFixedValue:</label>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.fld_TetapanNilai, new SelectList(ViewBag.IncentiveValueTypeList, "Value", "Text", Model.fld_TetapanNilai), new { @class = "optionList form-control" })
                                @Html.ValidationMessageFor(model => model.fld_TetapanNilai, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveMinValue:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.fld_MinValue, htmlAttributes: new { @class = "minVal form-control", @readonly = "true", @Value = minValue })
                                @Html.ValidationMessageFor(model => model.fld_MinValue, "", new { @class = "validation text-danger" })
                            </div>
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveMaxValue:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.fld_MaxValue, htmlAttributes: new { @class = "maxVal form-control", @readonly = "true", @Value = maxValue })
                                @Html.ValidationMessageFor(model => model.fld_MaxValue, "", new { @class = "validation text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveFixedValue:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.fld_FixedValue, htmlAttributes: new { @class = "fixedVal form-control", @readonly = "true", @Value = fixedValue })
                                @Html.ValidationMessageFor(model => model.fld_FixedValue, "", new { @class = "validation text-danger" })
                            </div>
                            <label class="control-label col-sm-3">@GlobalResCorp.lblIncentiveDailyFixedValue:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(model => model.fld_DailyFixedValue, htmlAttributes: new { @class = "dailyVal form-control", @readonly = "true", @Value = dailyValue })
                                @Html.ValidationMessageFor(model => model.fld_DailyFixedValue, "", new { @class = "validation text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3">@GlobalResCorp.lblWorkerType:</label>
                            <div class="col-sm-8">
                                @Html.DropDownListFor(model => model.fld_KelayakanKepada, new SelectList(ViewBag.WorkerTypeList, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fld_KelayakanKepada, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*fatin added - 05/04/2023 *@
                        <div class="form-group">
                            <label class="control-label col-sm-3">Kod Syarikat:</label>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.fld_KodGL, new SelectList(ViewBag.CompanyCode, "Value", "Text"), new { @class = "kodSyarikat form-control" })
                                @Html.ValidationMessageFor(model => model.fld_KodGL, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-5">
                                <div id="tablecompany"></div>
                            </div>
                        </div>
                        @*end*@
                        @Html.HiddenFor(model => model.fld_JenisInsentifID)
                        @Html.HiddenFor(model => model.fld_JenisInsentif)
                    </div>
                </div>
            </div>
        </div>

        <div class="modal-footer">
            <input class="btn btn-success" type="submit" value=@GlobalResCorp.btnSave>
            <button class="btn btn-warning" data-dismiss="modal">@GlobalResCorp.btnBack</button>
        </div>
    }
</section>

<script>
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");

    var minVal = $('.minVal').val();
    var maxVal = $('.maxVal').val();
    var fixedVal = $('.fixedVal').val();
    var dailyVal = $('.dailyVal').val();

    //fatin added - 06/04/2023
    $(".kodSyarikat").on("change",
        function () {
            var companyCode = $(".kodSyarikat").val();
            $("#tablecompany").load("checkKodSyarikat?companycode=" + companyCode);
        });
    //end

    if ($(".optionList").val() === "0")
    {
        $('.minVal').prop("readonly", false);
        $('.maxVal').prop("readonly", false);
        $('.minVal').val(minVal);
        $('.maxVal').val(maxVal);
        $('.fixedVal').prop("readonly", true);
        $('.dailyVal').prop("readonly", true);
    }

    else if ($(".optionList").val() === "1")
    {
        $('.minVal').prop("readonly", true);
        $('.maxVal').prop("readonly", true);
        $('.fixedVal').val(fixedVal);
        $('.fixedVal').prop("readonly", false);
        $('.dailyVal').prop("readonly", true);
    }

    else if ($(".optionList").val() === "2")
    {
        $('.minVal').prop("readonly", true);
        $('.maxVal').prop("readonly", false);
        $('.dailyVal').val(dailyVal);
        $('.maxVal').val(maxVal);
        $('.fixedVal').prop("readonly", true);
        $('.dailyVal').prop("readonly", false);
    }

    else
    {
        $('.fixedVal').prop("readonly", true);
        $('.minVal').prop("readonly", true);
        $('.maxVal').prop("readonly", true);
        $('.dailyVal').prop("readonly", true);
    }

    $(".optionList").on("change",
        function () {
            console.log($(this).val());
            $('.field-validation-error').html("");
            $('.minMaxVal').removeClass("input-validation-error");
            $('.fixedVal').removeClass("input-validation-error");
            $('.minVal').val("0.00");
            $('.maxVal').val("0.00");
            $('.fixedVal').val("0.00");
            $('.dailyVal').val("0.00");
            if ($(this).val() === "0")
            {
                $('.minVal').prop("readonly", false);
                $('.maxVal').prop("readonly", false);
                $('.minVal').val("");
                $('.maxVal').val("");
                $('.fixedVal').prop("readonly", true);
                $('.dailyVal').prop("readonly", true);
            }

            else if ($(this).val() === "1")
            {
                $('.minVal').prop("readonly", true);
                $('.maxVal').prop("readonly", true);
                $('.fixedVal').val("");
                $('.fixedVal').prop("readonly", false);
                $('.dailyVal').prop("readonly", true);
            }

            else if ($(this).val() === "2")
            {
                $('.minVal').prop("readonly", true);
                $('.maxVal').prop("readonly", false);
                $('.dailyVal').val("");
                $('.maxVal').val("");
                $('.fixedVal').prop("readonly", true);
                $('.dailyVal').prop("readonly", false);
            }

            else
            {
                $('.fixedVal').prop("readonly", true);
                $('.minVal').prop("readonly", true);
                $('.maxVal').prop("readonly", true);
                $('.dailyVal').prop("readonly", true);
            }
        });
</script>