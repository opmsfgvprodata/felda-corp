@model MVC_SYSTEM.AuthModels.tblUserCreate
@using MVC_SYSTEM.Class;

@{

    GetLadang GetLadang = new GetLadang();
    GetWilayah GetWilayah = new GetWilayah();


}

<section class="content-wrapper main-content clear-fix">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        @*<h3 class="modal-title">Add New User</h3>*@
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="panel panel-primary">
                    <div class="panel-heading">Add New User</div>
                    <div class="panel-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.fldUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @*sepul comment 07/05/2021*@
                                @*@Html.EditorFor(model => model.fldUserName, new { htmlAttributes = new { @class = "form-control required",  @id = "myId", @Value = "FEL" } })*@
                                @*sepul tambah 07/05/2021*@
                                @Html.EditorFor(model => model.fldUserName, new { htmlAttributes = new { @class = "form-control required", @id = "myId", @Value = ViewBag.myID } })
                                @Html.ValidationMessageFor(model => model.fldUserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fldUserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.fldUserPassword, new { htmlAttributes = new { @class = "form-control required", @Value = "init123", required = "required" } })
                                @Html.ValidationMessageFor(model => model.fldUserPassword, "", new { @class = "text-danger" })
                            </div>
                            @*sepul tambah 26/02/2021*@
                            <div class="col-md-2">
                                Default : init123
                            </div>
                        </div>
                        @*sepul comment 07/01/2021 uncomment 26/02/2021*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.fldUserConPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.fldUserConPassword, new { htmlAttributes = new { @class = "form-control required", @Value = "init123", required = "required", onChange = "checkPasswordMatch();" } })
                                @Html.ValidationMessageFor(model => model.fldUserConPassword, "", new { @class = "text-danger" })
                            </div>
                            @*sepul tambah 26/02/2021*@
                            <div class="col-md-2">
                                Default : init123
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fldUserFullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.fldUserFullName, new { htmlAttributes = new { @class = "form-control required", required = "required" } })
                                @Html.ValidationMessageFor(model => model.fldUserFullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fldUserShortName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.fldUserShortName, new { htmlAttributes = new { @class = "form-control required", required = "required" } })
                                @Html.ValidationMessageFor(model => model.fldUserShortName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fldUserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.fldUserEmail, new { htmlAttributes = new { @class = "form-control required", required = "required" } })
                                @Html.ValidationMessageFor(model => model.fldUserEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fldRoleID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.DropDownList("fldRoleID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fldRoleID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fldWilayahID, "Region", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.DropDownList("fldWilayahID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fldWilayahID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fldLadangID, "Estate", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.DropDownList("fldLadangID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.fldLadangID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input id="btnSave" class="btn btn-success" type="submit" value=@GlobalResConfig.btnSave />
                    <button class="btn btn-warning" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</section>
<script>
    //sepul tambah 26/02/2021 filter password sama dgn conpassword
    $(function () {
        $("#btnSave").click(function () {
            var password = $("#fldUserPassword").val();
            var confirmPassword = $("#fldUserConPassword").val();

            if (password != confirmPassword) {
                alert("Password and Confirm Password Not Match!");
                return false;
            }
            return true;
        });
    });
    //sepul 14/03/2021 tambah filter password
    function checkPasswordMatch() {
        var password = $("#fldUserPassword").val();
        var confirmPassword = $("#fldUserConPassword").val();

        if (password != confirmPassword) {
            alert("Password and Confirm Password Not Match!");
            return false;
        }
        return true;
    }

    $(document).ready(function () {
        $("#txtNewPassword, #txtConfirmPassword").keyup(checkPasswordMatch);
    });
//sampai sini

    //sepul comment 26/02/2021
    //$("form").removeData("validator");
    //$("form").removeData("unobtrusiveValidation");
    //$.validator.unobtrusive.parse("form");

    @* added function to display ladang in dropdown - kamalia 19 / 11 / 20 *@

    if ($("#fldWilayahID").val() == 0) {
            var WilayahIDList = {};
            var disableoption = "";
            WilayahIDList.url = "@Url.Action("GetLadang", "Report")";
            WilayahIDList.type = "POST";
            WilayahIDList.data = JSON.stringify({ WilayahID: $("#fldWilayahID").val() });
            WilayahIDList.datatype = "json";
            WilayahIDList.contentType = "application/json";
            WilayahIDList.success = function (ladanglist) {
                $("#fldLadangID").empty();
                $("#fldLadangID").append("<option value=0>All</option>");
                for (var i = 0; i < ladanglist.length; i++) {
                    if ($("#fldWilayahID").val() == 0)
                    {
                        disableoption = "disabled";
                    }
                }
            };
            WilayahIDList.error = function () { $.simplyToast('Sistem masalah', 'danger'); };
            $.ajax(WilayahIDList);
        }

    $("#fldWilayahID").change(function () {
            var WilayahIDList = {};
            var disableoption = "";
            WilayahIDList.url = "@Url.Action("GetLadang", "Report")";
            WilayahIDList.type = "POST";
        WilayahIDList.data = JSON.stringify({ WilayahID: $("#fldWilayahID").val() });
            WilayahIDList.datatype = "json";
            WilayahIDList.contentType = "application/json";
            WilayahIDList.success = function (ladanglist) {
                $("#fldLadangID").empty();
                $("#fldLadangID").append("<option value=0>All</option>");
                for (var i = 0; i < ladanglist.length; i++) {
                    if ($("#fldWilayahID").val() == 0) {
                        disableoption = "disabled";
                    }
                    else {
                        $("#fldLadangID").append("<option value=" + ladanglist[i].Value + " " + disableoption + ">" + ladanglist[i].Text + "</option>");
                    }
                }
            };
            WilayahIDList.error = function () { $.simplyToast('Sistem masalah', 'danger'); };
            $.ajax(WilayahIDList);
    });

    @* added function for keyword FEL - kamalia 19/11/20*@
    var x = $('#myId').val().length;
    $('#myId').on('keypress, keydown', function (event) {


        if ((event.which != 37 && (event.which != 39))
            && ((this.selectionStart < x)
                || ((this.selectionStart == x) && (event.which == 8)))) {
            return false;
        }
    });
</script>
